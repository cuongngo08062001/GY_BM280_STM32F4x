
GY-BMP280.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005c2c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000008fc  08005dcc  08005dcc  00015dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080066c8  080066c8  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  080066c8  080066c8  000166c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080066d0  080066d0  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080066d0  080066d0  000166d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080066d4  080066d4  000166d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  080066d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001314  20000090  08006768  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200013a4  08006768  000213a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .debug_info   0003a956  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002bb2  00000000  00000000  0005aa16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ba8  00000000  00000000  0005d5c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000009f8  00000000  00000000  0005e170  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ef8c  00000000  00000000  0005eb68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00009d62  00000000  00000000  0006daf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004c6f6  00000000  00000000  00077856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  000c3f4c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000337c  00000000  00000000  000c401c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000090 	.word	0x20000090
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08005db4 	.word	0x08005db4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000094 	.word	0x20000094
 80001dc:	08005db4 	.word	0x08005db4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__aeabi_d2f>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a24:	bf24      	itt	cs
 8000a26:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a2a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a2e:	d90d      	bls.n	8000a4c <__aeabi_d2f+0x30>
 8000a30:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a34:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a38:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a3c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a40:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a44:	bf08      	it	eq
 8000a46:	f020 0001 	biceq.w	r0, r0, #1
 8000a4a:	4770      	bx	lr
 8000a4c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a50:	d121      	bne.n	8000a96 <__aeabi_d2f+0x7a>
 8000a52:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a56:	bfbc      	itt	lt
 8000a58:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a5c:	4770      	bxlt	lr
 8000a5e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a62:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a66:	f1c2 0218 	rsb	r2, r2, #24
 8000a6a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a6e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a72:	fa20 f002 	lsr.w	r0, r0, r2
 8000a76:	bf18      	it	ne
 8000a78:	f040 0001 	orrne.w	r0, r0, #1
 8000a7c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a80:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a84:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a88:	ea40 000c 	orr.w	r0, r0, ip
 8000a8c:	fa23 f302 	lsr.w	r3, r3, r2
 8000a90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000a94:	e7cc      	b.n	8000a30 <__aeabi_d2f+0x14>
 8000a96:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000a9a:	d107      	bne.n	8000aac <__aeabi_d2f+0x90>
 8000a9c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000aa0:	bf1e      	ittt	ne
 8000aa2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000aa6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000aaa:	4770      	bxne	lr
 8000aac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ab0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ab4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_frsub>:
 8000abc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000ac0:	e002      	b.n	8000ac8 <__addsf3>
 8000ac2:	bf00      	nop

08000ac4 <__aeabi_fsub>:
 8000ac4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ac8 <__addsf3>:
 8000ac8:	0042      	lsls	r2, r0, #1
 8000aca:	bf1f      	itttt	ne
 8000acc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000ad0:	ea92 0f03 	teqne	r2, r3
 8000ad4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ad8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000adc:	d06a      	beq.n	8000bb4 <__addsf3+0xec>
 8000ade:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000ae2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000ae6:	bfc1      	itttt	gt
 8000ae8:	18d2      	addgt	r2, r2, r3
 8000aea:	4041      	eorgt	r1, r0
 8000aec:	4048      	eorgt	r0, r1
 8000aee:	4041      	eorgt	r1, r0
 8000af0:	bfb8      	it	lt
 8000af2:	425b      	neglt	r3, r3
 8000af4:	2b19      	cmp	r3, #25
 8000af6:	bf88      	it	hi
 8000af8:	4770      	bxhi	lr
 8000afa:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000afe:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b02:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b06:	bf18      	it	ne
 8000b08:	4240      	negne	r0, r0
 8000b0a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b0e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b12:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b16:	bf18      	it	ne
 8000b18:	4249      	negne	r1, r1
 8000b1a:	ea92 0f03 	teq	r2, r3
 8000b1e:	d03f      	beq.n	8000ba0 <__addsf3+0xd8>
 8000b20:	f1a2 0201 	sub.w	r2, r2, #1
 8000b24:	fa41 fc03 	asr.w	ip, r1, r3
 8000b28:	eb10 000c 	adds.w	r0, r0, ip
 8000b2c:	f1c3 0320 	rsb	r3, r3, #32
 8000b30:	fa01 f103 	lsl.w	r1, r1, r3
 8000b34:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b38:	d502      	bpl.n	8000b40 <__addsf3+0x78>
 8000b3a:	4249      	negs	r1, r1
 8000b3c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b40:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b44:	d313      	bcc.n	8000b6e <__addsf3+0xa6>
 8000b46:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b4a:	d306      	bcc.n	8000b5a <__addsf3+0x92>
 8000b4c:	0840      	lsrs	r0, r0, #1
 8000b4e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b52:	f102 0201 	add.w	r2, r2, #1
 8000b56:	2afe      	cmp	r2, #254	; 0xfe
 8000b58:	d251      	bcs.n	8000bfe <__addsf3+0x136>
 8000b5a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b5e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b62:	bf08      	it	eq
 8000b64:	f020 0001 	biceq.w	r0, r0, #1
 8000b68:	ea40 0003 	orr.w	r0, r0, r3
 8000b6c:	4770      	bx	lr
 8000b6e:	0049      	lsls	r1, r1, #1
 8000b70:	eb40 0000 	adc.w	r0, r0, r0
 8000b74:	3a01      	subs	r2, #1
 8000b76:	bf28      	it	cs
 8000b78:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b7c:	d2ed      	bcs.n	8000b5a <__addsf3+0x92>
 8000b7e:	fab0 fc80 	clz	ip, r0
 8000b82:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b86:	ebb2 020c 	subs.w	r2, r2, ip
 8000b8a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b8e:	bfaa      	itet	ge
 8000b90:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000b94:	4252      	neglt	r2, r2
 8000b96:	4318      	orrge	r0, r3
 8000b98:	bfbc      	itt	lt
 8000b9a:	40d0      	lsrlt	r0, r2
 8000b9c:	4318      	orrlt	r0, r3
 8000b9e:	4770      	bx	lr
 8000ba0:	f092 0f00 	teq	r2, #0
 8000ba4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000ba8:	bf06      	itte	eq
 8000baa:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000bae:	3201      	addeq	r2, #1
 8000bb0:	3b01      	subne	r3, #1
 8000bb2:	e7b5      	b.n	8000b20 <__addsf3+0x58>
 8000bb4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000bb8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000bbc:	bf18      	it	ne
 8000bbe:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bc2:	d021      	beq.n	8000c08 <__addsf3+0x140>
 8000bc4:	ea92 0f03 	teq	r2, r3
 8000bc8:	d004      	beq.n	8000bd4 <__addsf3+0x10c>
 8000bca:	f092 0f00 	teq	r2, #0
 8000bce:	bf08      	it	eq
 8000bd0:	4608      	moveq	r0, r1
 8000bd2:	4770      	bx	lr
 8000bd4:	ea90 0f01 	teq	r0, r1
 8000bd8:	bf1c      	itt	ne
 8000bda:	2000      	movne	r0, #0
 8000bdc:	4770      	bxne	lr
 8000bde:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000be2:	d104      	bne.n	8000bee <__addsf3+0x126>
 8000be4:	0040      	lsls	r0, r0, #1
 8000be6:	bf28      	it	cs
 8000be8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bec:	4770      	bx	lr
 8000bee:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bf2:	bf3c      	itt	cc
 8000bf4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000bf8:	4770      	bxcc	lr
 8000bfa:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000bfe:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c02:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c06:	4770      	bx	lr
 8000c08:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c0c:	bf16      	itet	ne
 8000c0e:	4608      	movne	r0, r1
 8000c10:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c14:	4601      	movne	r1, r0
 8000c16:	0242      	lsls	r2, r0, #9
 8000c18:	bf06      	itte	eq
 8000c1a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c1e:	ea90 0f01 	teqeq	r0, r1
 8000c22:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_ui2f>:
 8000c28:	f04f 0300 	mov.w	r3, #0
 8000c2c:	e004      	b.n	8000c38 <__aeabi_i2f+0x8>
 8000c2e:	bf00      	nop

08000c30 <__aeabi_i2f>:
 8000c30:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c34:	bf48      	it	mi
 8000c36:	4240      	negmi	r0, r0
 8000c38:	ea5f 0c00 	movs.w	ip, r0
 8000c3c:	bf08      	it	eq
 8000c3e:	4770      	bxeq	lr
 8000c40:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c44:	4601      	mov	r1, r0
 8000c46:	f04f 0000 	mov.w	r0, #0
 8000c4a:	e01c      	b.n	8000c86 <__aeabi_l2f+0x2a>

08000c4c <__aeabi_ul2f>:
 8000c4c:	ea50 0201 	orrs.w	r2, r0, r1
 8000c50:	bf08      	it	eq
 8000c52:	4770      	bxeq	lr
 8000c54:	f04f 0300 	mov.w	r3, #0
 8000c58:	e00a      	b.n	8000c70 <__aeabi_l2f+0x14>
 8000c5a:	bf00      	nop

08000c5c <__aeabi_l2f>:
 8000c5c:	ea50 0201 	orrs.w	r2, r0, r1
 8000c60:	bf08      	it	eq
 8000c62:	4770      	bxeq	lr
 8000c64:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c68:	d502      	bpl.n	8000c70 <__aeabi_l2f+0x14>
 8000c6a:	4240      	negs	r0, r0
 8000c6c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c70:	ea5f 0c01 	movs.w	ip, r1
 8000c74:	bf02      	ittt	eq
 8000c76:	4684      	moveq	ip, r0
 8000c78:	4601      	moveq	r1, r0
 8000c7a:	2000      	moveq	r0, #0
 8000c7c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c80:	bf08      	it	eq
 8000c82:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c86:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c8a:	fabc f28c 	clz	r2, ip
 8000c8e:	3a08      	subs	r2, #8
 8000c90:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000c94:	db10      	blt.n	8000cb8 <__aeabi_l2f+0x5c>
 8000c96:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c9a:	4463      	add	r3, ip
 8000c9c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ca0:	f1c2 0220 	rsb	r2, r2, #32
 8000ca4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000ca8:	fa20 f202 	lsr.w	r2, r0, r2
 8000cac:	eb43 0002 	adc.w	r0, r3, r2
 8000cb0:	bf08      	it	eq
 8000cb2:	f020 0001 	biceq.w	r0, r0, #1
 8000cb6:	4770      	bx	lr
 8000cb8:	f102 0220 	add.w	r2, r2, #32
 8000cbc:	fa01 fc02 	lsl.w	ip, r1, r2
 8000cc0:	f1c2 0220 	rsb	r2, r2, #32
 8000cc4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000cc8:	fa21 f202 	lsr.w	r2, r1, r2
 8000ccc:	eb43 0002 	adc.w	r0, r3, r2
 8000cd0:	bf08      	it	eq
 8000cd2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000cd6:	4770      	bx	lr

08000cd8 <__aeabi_ldivmod>:
 8000cd8:	b97b      	cbnz	r3, 8000cfa <__aeabi_ldivmod+0x22>
 8000cda:	b972      	cbnz	r2, 8000cfa <__aeabi_ldivmod+0x22>
 8000cdc:	2900      	cmp	r1, #0
 8000cde:	bfbe      	ittt	lt
 8000ce0:	2000      	movlt	r0, #0
 8000ce2:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000ce6:	e006      	blt.n	8000cf6 <__aeabi_ldivmod+0x1e>
 8000ce8:	bf08      	it	eq
 8000cea:	2800      	cmpeq	r0, #0
 8000cec:	bf1c      	itt	ne
 8000cee:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000cf2:	f04f 30ff 	movne.w	r0, #4294967295
 8000cf6:	f000 b9d5 	b.w	80010a4 <__aeabi_idiv0>
 8000cfa:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cfe:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d02:	2900      	cmp	r1, #0
 8000d04:	db09      	blt.n	8000d1a <__aeabi_ldivmod+0x42>
 8000d06:	2b00      	cmp	r3, #0
 8000d08:	db1a      	blt.n	8000d40 <__aeabi_ldivmod+0x68>
 8000d0a:	f000 f869 	bl	8000de0 <__udivmoddi4>
 8000d0e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d12:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d16:	b004      	add	sp, #16
 8000d18:	4770      	bx	lr
 8000d1a:	4240      	negs	r0, r0
 8000d1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	db1b      	blt.n	8000d5c <__aeabi_ldivmod+0x84>
 8000d24:	f000 f85c 	bl	8000de0 <__udivmoddi4>
 8000d28:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d2c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d30:	b004      	add	sp, #16
 8000d32:	4240      	negs	r0, r0
 8000d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d38:	4252      	negs	r2, r2
 8000d3a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d3e:	4770      	bx	lr
 8000d40:	4252      	negs	r2, r2
 8000d42:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d46:	f000 f84b 	bl	8000de0 <__udivmoddi4>
 8000d4a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d4e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d52:	b004      	add	sp, #16
 8000d54:	4240      	negs	r0, r0
 8000d56:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d5a:	4770      	bx	lr
 8000d5c:	4252      	negs	r2, r2
 8000d5e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d62:	f000 f83d 	bl	8000de0 <__udivmoddi4>
 8000d66:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d6a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d6e:	b004      	add	sp, #16
 8000d70:	4252      	negs	r2, r2
 8000d72:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d76:	4770      	bx	lr

08000d78 <__aeabi_f2lz>:
 8000d78:	ee07 0a90 	vmov	s15, r0
 8000d7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d84:	d401      	bmi.n	8000d8a <__aeabi_f2lz+0x12>
 8000d86:	f000 b80b 	b.w	8000da0 <__aeabi_f2ulz>
 8000d8a:	eef1 7a67 	vneg.f32	s15, s15
 8000d8e:	b508      	push	{r3, lr}
 8000d90:	ee17 0a90 	vmov	r0, s15
 8000d94:	f000 f804 	bl	8000da0 <__aeabi_f2ulz>
 8000d98:	4240      	negs	r0, r0
 8000d9a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d9e:	bd08      	pop	{r3, pc}

08000da0 <__aeabi_f2ulz>:
 8000da0:	b5d0      	push	{r4, r6, r7, lr}
 8000da2:	f7ff fbd1 	bl	8000548 <__aeabi_f2d>
 8000da6:	4b0c      	ldr	r3, [pc, #48]	; (8000dd8 <__aeabi_f2ulz+0x38>)
 8000da8:	2200      	movs	r2, #0
 8000daa:	4606      	mov	r6, r0
 8000dac:	460f      	mov	r7, r1
 8000dae:	f7ff fc23 	bl	80005f8 <__aeabi_dmul>
 8000db2:	f000 f979 	bl	80010a8 <__aeabi_d2uiz>
 8000db6:	4604      	mov	r4, r0
 8000db8:	f7ff fba4 	bl	8000504 <__aeabi_ui2d>
 8000dbc:	4b07      	ldr	r3, [pc, #28]	; (8000ddc <__aeabi_f2ulz+0x3c>)
 8000dbe:	2200      	movs	r2, #0
 8000dc0:	f7ff fc1a 	bl	80005f8 <__aeabi_dmul>
 8000dc4:	4602      	mov	r2, r0
 8000dc6:	460b      	mov	r3, r1
 8000dc8:	4630      	mov	r0, r6
 8000dca:	4639      	mov	r1, r7
 8000dcc:	f7ff fa5c 	bl	8000288 <__aeabi_dsub>
 8000dd0:	f000 f96a 	bl	80010a8 <__aeabi_d2uiz>
 8000dd4:	4621      	mov	r1, r4
 8000dd6:	bdd0      	pop	{r4, r6, r7, pc}
 8000dd8:	3df00000 	.word	0x3df00000
 8000ddc:	41f00000 	.word	0x41f00000

08000de0 <__udivmoddi4>:
 8000de0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000de4:	9d08      	ldr	r5, [sp, #32]
 8000de6:	4604      	mov	r4, r0
 8000de8:	468c      	mov	ip, r1
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	f040 8083 	bne.w	8000ef6 <__udivmoddi4+0x116>
 8000df0:	428a      	cmp	r2, r1
 8000df2:	4617      	mov	r7, r2
 8000df4:	d947      	bls.n	8000e86 <__udivmoddi4+0xa6>
 8000df6:	fab2 f282 	clz	r2, r2
 8000dfa:	b142      	cbz	r2, 8000e0e <__udivmoddi4+0x2e>
 8000dfc:	f1c2 0020 	rsb	r0, r2, #32
 8000e00:	fa24 f000 	lsr.w	r0, r4, r0
 8000e04:	4091      	lsls	r1, r2
 8000e06:	4097      	lsls	r7, r2
 8000e08:	ea40 0c01 	orr.w	ip, r0, r1
 8000e0c:	4094      	lsls	r4, r2
 8000e0e:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000e12:	0c23      	lsrs	r3, r4, #16
 8000e14:	fbbc f6f8 	udiv	r6, ip, r8
 8000e18:	fa1f fe87 	uxth.w	lr, r7
 8000e1c:	fb08 c116 	mls	r1, r8, r6, ip
 8000e20:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e24:	fb06 f10e 	mul.w	r1, r6, lr
 8000e28:	4299      	cmp	r1, r3
 8000e2a:	d909      	bls.n	8000e40 <__udivmoddi4+0x60>
 8000e2c:	18fb      	adds	r3, r7, r3
 8000e2e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000e32:	f080 8119 	bcs.w	8001068 <__udivmoddi4+0x288>
 8000e36:	4299      	cmp	r1, r3
 8000e38:	f240 8116 	bls.w	8001068 <__udivmoddi4+0x288>
 8000e3c:	3e02      	subs	r6, #2
 8000e3e:	443b      	add	r3, r7
 8000e40:	1a5b      	subs	r3, r3, r1
 8000e42:	b2a4      	uxth	r4, r4
 8000e44:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e48:	fb08 3310 	mls	r3, r8, r0, r3
 8000e4c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e50:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e54:	45a6      	cmp	lr, r4
 8000e56:	d909      	bls.n	8000e6c <__udivmoddi4+0x8c>
 8000e58:	193c      	adds	r4, r7, r4
 8000e5a:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e5e:	f080 8105 	bcs.w	800106c <__udivmoddi4+0x28c>
 8000e62:	45a6      	cmp	lr, r4
 8000e64:	f240 8102 	bls.w	800106c <__udivmoddi4+0x28c>
 8000e68:	3802      	subs	r0, #2
 8000e6a:	443c      	add	r4, r7
 8000e6c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e70:	eba4 040e 	sub.w	r4, r4, lr
 8000e74:	2600      	movs	r6, #0
 8000e76:	b11d      	cbz	r5, 8000e80 <__udivmoddi4+0xa0>
 8000e78:	40d4      	lsrs	r4, r2
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	e9c5 4300 	strd	r4, r3, [r5]
 8000e80:	4631      	mov	r1, r6
 8000e82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e86:	b902      	cbnz	r2, 8000e8a <__udivmoddi4+0xaa>
 8000e88:	deff      	udf	#255	; 0xff
 8000e8a:	fab2 f282 	clz	r2, r2
 8000e8e:	2a00      	cmp	r2, #0
 8000e90:	d150      	bne.n	8000f34 <__udivmoddi4+0x154>
 8000e92:	1bcb      	subs	r3, r1, r7
 8000e94:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e98:	fa1f f887 	uxth.w	r8, r7
 8000e9c:	2601      	movs	r6, #1
 8000e9e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000ea2:	0c21      	lsrs	r1, r4, #16
 8000ea4:	fb0e 331c 	mls	r3, lr, ip, r3
 8000ea8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000eac:	fb08 f30c 	mul.w	r3, r8, ip
 8000eb0:	428b      	cmp	r3, r1
 8000eb2:	d907      	bls.n	8000ec4 <__udivmoddi4+0xe4>
 8000eb4:	1879      	adds	r1, r7, r1
 8000eb6:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000eba:	d202      	bcs.n	8000ec2 <__udivmoddi4+0xe2>
 8000ebc:	428b      	cmp	r3, r1
 8000ebe:	f200 80e9 	bhi.w	8001094 <__udivmoddi4+0x2b4>
 8000ec2:	4684      	mov	ip, r0
 8000ec4:	1ac9      	subs	r1, r1, r3
 8000ec6:	b2a3      	uxth	r3, r4
 8000ec8:	fbb1 f0fe 	udiv	r0, r1, lr
 8000ecc:	fb0e 1110 	mls	r1, lr, r0, r1
 8000ed0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000ed4:	fb08 f800 	mul.w	r8, r8, r0
 8000ed8:	45a0      	cmp	r8, r4
 8000eda:	d907      	bls.n	8000eec <__udivmoddi4+0x10c>
 8000edc:	193c      	adds	r4, r7, r4
 8000ede:	f100 33ff 	add.w	r3, r0, #4294967295
 8000ee2:	d202      	bcs.n	8000eea <__udivmoddi4+0x10a>
 8000ee4:	45a0      	cmp	r8, r4
 8000ee6:	f200 80d9 	bhi.w	800109c <__udivmoddi4+0x2bc>
 8000eea:	4618      	mov	r0, r3
 8000eec:	eba4 0408 	sub.w	r4, r4, r8
 8000ef0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000ef4:	e7bf      	b.n	8000e76 <__udivmoddi4+0x96>
 8000ef6:	428b      	cmp	r3, r1
 8000ef8:	d909      	bls.n	8000f0e <__udivmoddi4+0x12e>
 8000efa:	2d00      	cmp	r5, #0
 8000efc:	f000 80b1 	beq.w	8001062 <__udivmoddi4+0x282>
 8000f00:	2600      	movs	r6, #0
 8000f02:	e9c5 0100 	strd	r0, r1, [r5]
 8000f06:	4630      	mov	r0, r6
 8000f08:	4631      	mov	r1, r6
 8000f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f0e:	fab3 f683 	clz	r6, r3
 8000f12:	2e00      	cmp	r6, #0
 8000f14:	d14a      	bne.n	8000fac <__udivmoddi4+0x1cc>
 8000f16:	428b      	cmp	r3, r1
 8000f18:	d302      	bcc.n	8000f20 <__udivmoddi4+0x140>
 8000f1a:	4282      	cmp	r2, r0
 8000f1c:	f200 80b8 	bhi.w	8001090 <__udivmoddi4+0x2b0>
 8000f20:	1a84      	subs	r4, r0, r2
 8000f22:	eb61 0103 	sbc.w	r1, r1, r3
 8000f26:	2001      	movs	r0, #1
 8000f28:	468c      	mov	ip, r1
 8000f2a:	2d00      	cmp	r5, #0
 8000f2c:	d0a8      	beq.n	8000e80 <__udivmoddi4+0xa0>
 8000f2e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000f32:	e7a5      	b.n	8000e80 <__udivmoddi4+0xa0>
 8000f34:	f1c2 0320 	rsb	r3, r2, #32
 8000f38:	fa20 f603 	lsr.w	r6, r0, r3
 8000f3c:	4097      	lsls	r7, r2
 8000f3e:	fa01 f002 	lsl.w	r0, r1, r2
 8000f42:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f46:	40d9      	lsrs	r1, r3
 8000f48:	4330      	orrs	r0, r6
 8000f4a:	0c03      	lsrs	r3, r0, #16
 8000f4c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000f50:	fa1f f887 	uxth.w	r8, r7
 8000f54:	fb0e 1116 	mls	r1, lr, r6, r1
 8000f58:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f5c:	fb06 f108 	mul.w	r1, r6, r8
 8000f60:	4299      	cmp	r1, r3
 8000f62:	fa04 f402 	lsl.w	r4, r4, r2
 8000f66:	d909      	bls.n	8000f7c <__udivmoddi4+0x19c>
 8000f68:	18fb      	adds	r3, r7, r3
 8000f6a:	f106 3cff 	add.w	ip, r6, #4294967295
 8000f6e:	f080 808d 	bcs.w	800108c <__udivmoddi4+0x2ac>
 8000f72:	4299      	cmp	r1, r3
 8000f74:	f240 808a 	bls.w	800108c <__udivmoddi4+0x2ac>
 8000f78:	3e02      	subs	r6, #2
 8000f7a:	443b      	add	r3, r7
 8000f7c:	1a5b      	subs	r3, r3, r1
 8000f7e:	b281      	uxth	r1, r0
 8000f80:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f84:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f88:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f8c:	fb00 f308 	mul.w	r3, r0, r8
 8000f90:	428b      	cmp	r3, r1
 8000f92:	d907      	bls.n	8000fa4 <__udivmoddi4+0x1c4>
 8000f94:	1879      	adds	r1, r7, r1
 8000f96:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f9a:	d273      	bcs.n	8001084 <__udivmoddi4+0x2a4>
 8000f9c:	428b      	cmp	r3, r1
 8000f9e:	d971      	bls.n	8001084 <__udivmoddi4+0x2a4>
 8000fa0:	3802      	subs	r0, #2
 8000fa2:	4439      	add	r1, r7
 8000fa4:	1acb      	subs	r3, r1, r3
 8000fa6:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000faa:	e778      	b.n	8000e9e <__udivmoddi4+0xbe>
 8000fac:	f1c6 0c20 	rsb	ip, r6, #32
 8000fb0:	fa03 f406 	lsl.w	r4, r3, r6
 8000fb4:	fa22 f30c 	lsr.w	r3, r2, ip
 8000fb8:	431c      	orrs	r4, r3
 8000fba:	fa20 f70c 	lsr.w	r7, r0, ip
 8000fbe:	fa01 f306 	lsl.w	r3, r1, r6
 8000fc2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000fc6:	fa21 f10c 	lsr.w	r1, r1, ip
 8000fca:	431f      	orrs	r7, r3
 8000fcc:	0c3b      	lsrs	r3, r7, #16
 8000fce:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fd2:	fa1f f884 	uxth.w	r8, r4
 8000fd6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000fda:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000fde:	fb09 fa08 	mul.w	sl, r9, r8
 8000fe2:	458a      	cmp	sl, r1
 8000fe4:	fa02 f206 	lsl.w	r2, r2, r6
 8000fe8:	fa00 f306 	lsl.w	r3, r0, r6
 8000fec:	d908      	bls.n	8001000 <__udivmoddi4+0x220>
 8000fee:	1861      	adds	r1, r4, r1
 8000ff0:	f109 30ff 	add.w	r0, r9, #4294967295
 8000ff4:	d248      	bcs.n	8001088 <__udivmoddi4+0x2a8>
 8000ff6:	458a      	cmp	sl, r1
 8000ff8:	d946      	bls.n	8001088 <__udivmoddi4+0x2a8>
 8000ffa:	f1a9 0902 	sub.w	r9, r9, #2
 8000ffe:	4421      	add	r1, r4
 8001000:	eba1 010a 	sub.w	r1, r1, sl
 8001004:	b2bf      	uxth	r7, r7
 8001006:	fbb1 f0fe 	udiv	r0, r1, lr
 800100a:	fb0e 1110 	mls	r1, lr, r0, r1
 800100e:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8001012:	fb00 f808 	mul.w	r8, r0, r8
 8001016:	45b8      	cmp	r8, r7
 8001018:	d907      	bls.n	800102a <__udivmoddi4+0x24a>
 800101a:	19e7      	adds	r7, r4, r7
 800101c:	f100 31ff 	add.w	r1, r0, #4294967295
 8001020:	d22e      	bcs.n	8001080 <__udivmoddi4+0x2a0>
 8001022:	45b8      	cmp	r8, r7
 8001024:	d92c      	bls.n	8001080 <__udivmoddi4+0x2a0>
 8001026:	3802      	subs	r0, #2
 8001028:	4427      	add	r7, r4
 800102a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800102e:	eba7 0708 	sub.w	r7, r7, r8
 8001032:	fba0 8902 	umull	r8, r9, r0, r2
 8001036:	454f      	cmp	r7, r9
 8001038:	46c6      	mov	lr, r8
 800103a:	4649      	mov	r1, r9
 800103c:	d31a      	bcc.n	8001074 <__udivmoddi4+0x294>
 800103e:	d017      	beq.n	8001070 <__udivmoddi4+0x290>
 8001040:	b15d      	cbz	r5, 800105a <__udivmoddi4+0x27a>
 8001042:	ebb3 020e 	subs.w	r2, r3, lr
 8001046:	eb67 0701 	sbc.w	r7, r7, r1
 800104a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800104e:	40f2      	lsrs	r2, r6
 8001050:	ea4c 0202 	orr.w	r2, ip, r2
 8001054:	40f7      	lsrs	r7, r6
 8001056:	e9c5 2700 	strd	r2, r7, [r5]
 800105a:	2600      	movs	r6, #0
 800105c:	4631      	mov	r1, r6
 800105e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001062:	462e      	mov	r6, r5
 8001064:	4628      	mov	r0, r5
 8001066:	e70b      	b.n	8000e80 <__udivmoddi4+0xa0>
 8001068:	4606      	mov	r6, r0
 800106a:	e6e9      	b.n	8000e40 <__udivmoddi4+0x60>
 800106c:	4618      	mov	r0, r3
 800106e:	e6fd      	b.n	8000e6c <__udivmoddi4+0x8c>
 8001070:	4543      	cmp	r3, r8
 8001072:	d2e5      	bcs.n	8001040 <__udivmoddi4+0x260>
 8001074:	ebb8 0e02 	subs.w	lr, r8, r2
 8001078:	eb69 0104 	sbc.w	r1, r9, r4
 800107c:	3801      	subs	r0, #1
 800107e:	e7df      	b.n	8001040 <__udivmoddi4+0x260>
 8001080:	4608      	mov	r0, r1
 8001082:	e7d2      	b.n	800102a <__udivmoddi4+0x24a>
 8001084:	4660      	mov	r0, ip
 8001086:	e78d      	b.n	8000fa4 <__udivmoddi4+0x1c4>
 8001088:	4681      	mov	r9, r0
 800108a:	e7b9      	b.n	8001000 <__udivmoddi4+0x220>
 800108c:	4666      	mov	r6, ip
 800108e:	e775      	b.n	8000f7c <__udivmoddi4+0x19c>
 8001090:	4630      	mov	r0, r6
 8001092:	e74a      	b.n	8000f2a <__udivmoddi4+0x14a>
 8001094:	f1ac 0c02 	sub.w	ip, ip, #2
 8001098:	4439      	add	r1, r7
 800109a:	e713      	b.n	8000ec4 <__udivmoddi4+0xe4>
 800109c:	3802      	subs	r0, #2
 800109e:	443c      	add	r4, r7
 80010a0:	e724      	b.n	8000eec <__udivmoddi4+0x10c>
 80010a2:	bf00      	nop

080010a4 <__aeabi_idiv0>:
 80010a4:	4770      	bx	lr
 80010a6:	bf00      	nop

080010a8 <__aeabi_d2uiz>:
 80010a8:	004a      	lsls	r2, r1, #1
 80010aa:	d211      	bcs.n	80010d0 <__aeabi_d2uiz+0x28>
 80010ac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80010b0:	d211      	bcs.n	80010d6 <__aeabi_d2uiz+0x2e>
 80010b2:	d50d      	bpl.n	80010d0 <__aeabi_d2uiz+0x28>
 80010b4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80010b8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80010bc:	d40e      	bmi.n	80010dc <__aeabi_d2uiz+0x34>
 80010be:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80010c2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80010c6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80010ca:	fa23 f002 	lsr.w	r0, r3, r2
 80010ce:	4770      	bx	lr
 80010d0:	f04f 0000 	mov.w	r0, #0
 80010d4:	4770      	bx	lr
 80010d6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80010da:	d102      	bne.n	80010e2 <__aeabi_d2uiz+0x3a>
 80010dc:	f04f 30ff 	mov.w	r0, #4294967295
 80010e0:	4770      	bx	lr
 80010e2:	f04f 0000 	mov.w	r0, #0
 80010e6:	4770      	bx	lr

080010e8 <Display_TemHum>:
/*                            EXPORTED FUNCTIONS                              */
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
void Display_TemHum(void){
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b086      	sub	sp, #24
 80010ec:	af02      	add	r7, sp, #8
	static char strPres[20] = "";
	static char strTemp[20] = "";
	static char strAlti[20] = "";
	memset(strPres, 0, sizeof(strPres));
 80010ee:	2214      	movs	r2, #20
 80010f0:	2100      	movs	r1, #0
 80010f2:	4824      	ldr	r0, [pc, #144]	; (8001184 <Display_TemHum+0x9c>)
 80010f4:	f004 fa28 	bl	8005548 <memset>
	memset(strTemp, 0, sizeof(strTemp));
 80010f8:	2214      	movs	r2, #20
 80010fa:	2100      	movs	r1, #0
 80010fc:	4822      	ldr	r0, [pc, #136]	; (8001188 <Display_TemHum+0xa0>)
 80010fe:	f004 fa23 	bl	8005548 <memset>
	memset(strAlti, 0, sizeof(strAlti));
 8001102:	2214      	movs	r2, #20
 8001104:	2100      	movs	r1, #0
 8001106:	4821      	ldr	r0, [pc, #132]	; (800118c <Display_TemHum+0xa4>)
 8001108:	f004 fa1e 	bl	8005548 <memset>
	u8_t fTeamp = (u8_t)readTempC();
 800110c:	f000 fe9e 	bl	8001e4c <readTempC>
 8001110:	4603      	mov	r3, r0
 8001112:	73fb      	strb	r3, [r7, #15]
	u32_t fPres = (u32_t)readFloatPressure();
 8001114:	f000 fc5c 	bl	80019d0 <readFloatPressure>
 8001118:	4603      	mov	r3, r0
 800111a:	60bb      	str	r3, [r7, #8]
	u32_t fAlti = (u32_t)readFloatAltitudeMeters();
 800111c:	f000 fe60 	bl	8001de0 <readFloatAltitudeMeters>
 8001120:	4603      	mov	r3, r0
 8001122:	607b      	str	r3, [r7, #4]
	sprintf(strTemp, "Temp = %d oC", (u8_t)fTeamp);
 8001124:	7bfb      	ldrb	r3, [r7, #15]
 8001126:	461a      	mov	r2, r3
 8001128:	4919      	ldr	r1, [pc, #100]	; (8001190 <Display_TemHum+0xa8>)
 800112a:	4817      	ldr	r0, [pc, #92]	; (8001188 <Display_TemHum+0xa0>)
 800112c:	f004 fa14 	bl	8005558 <siprintf>
	sprintf(strPres, "Pres = %d Pa ",(u32_t)(fPres*100));
 8001130:	68bb      	ldr	r3, [r7, #8]
 8001132:	2264      	movs	r2, #100	; 0x64
 8001134:	fb02 f303 	mul.w	r3, r2, r3
 8001138:	461a      	mov	r2, r3
 800113a:	4916      	ldr	r1, [pc, #88]	; (8001194 <Display_TemHum+0xac>)
 800113c:	4811      	ldr	r0, [pc, #68]	; (8001184 <Display_TemHum+0x9c>)
 800113e:	f004 fa0b 	bl	8005558 <siprintf>
	sprintf(strAlti, "Alti = %d cm", (u32_t)(fAlti));
 8001142:	687a      	ldr	r2, [r7, #4]
 8001144:	4914      	ldr	r1, [pc, #80]	; (8001198 <Display_TemHum+0xb0>)
 8001146:	4811      	ldr	r0, [pc, #68]	; (800118c <Display_TemHum+0xa4>)
 8001148:	f004 fa06 	bl	8005558 <siprintf>
	ucg_DrawString(&ucg, 0, 32, 0, strTemp);
 800114c:	4b0e      	ldr	r3, [pc, #56]	; (8001188 <Display_TemHum+0xa0>)
 800114e:	9300      	str	r3, [sp, #0]
 8001150:	2300      	movs	r3, #0
 8001152:	2220      	movs	r2, #32
 8001154:	2100      	movs	r1, #0
 8001156:	4811      	ldr	r0, [pc, #68]	; (800119c <Display_TemHum+0xb4>)
 8001158:	f003 f8fe 	bl	8004358 <ucg_DrawString>
	ucg_DrawString(&ucg, 0, 72, 0, strPres);
 800115c:	4b09      	ldr	r3, [pc, #36]	; (8001184 <Display_TemHum+0x9c>)
 800115e:	9300      	str	r3, [sp, #0]
 8001160:	2300      	movs	r3, #0
 8001162:	2248      	movs	r2, #72	; 0x48
 8001164:	2100      	movs	r1, #0
 8001166:	480d      	ldr	r0, [pc, #52]	; (800119c <Display_TemHum+0xb4>)
 8001168:	f003 f8f6 	bl	8004358 <ucg_DrawString>
	ucg_DrawString(&ucg, 0, 102, 0, strAlti);
 800116c:	4b07      	ldr	r3, [pc, #28]	; (800118c <Display_TemHum+0xa4>)
 800116e:	9300      	str	r3, [sp, #0]
 8001170:	2300      	movs	r3, #0
 8001172:	2266      	movs	r2, #102	; 0x66
 8001174:	2100      	movs	r1, #0
 8001176:	4809      	ldr	r0, [pc, #36]	; (800119c <Display_TemHum+0xb4>)
 8001178:	f003 f8ee 	bl	8004358 <ucg_DrawString>
}
 800117c:	bf00      	nop
 800117e:	3710      	adds	r7, #16
 8001180:	46bd      	mov	sp, r7
 8001182:	bd80      	pop	{r7, pc}
 8001184:	20000168 	.word	0x20000168
 8001188:	2000017c 	.word	0x2000017c
 800118c:	20000190 	.word	0x20000190
 8001190:	08005dcc 	.word	0x08005dcc
 8001194:	08005ddc 	.word	0x08005ddc
 8001198:	08005dec 	.word	0x08005dec
 800119c:	200000ac 	.word	0x200000ac

080011a0 <processGetValueSensor>:
void processGetValueSensor(void){
 80011a0:	b580      	push	{r7, lr}
 80011a2:	af00      	add	r7, sp, #0
	g_byTimerCurrent = GetMilSecTick();
 80011a4:	f001 fdda 	bl	8002d5c <GetMilSecTick>
 80011a8:	4603      	mov	r3, r0
 80011aa:	461a      	mov	r2, r3
 80011ac:	4b08      	ldr	r3, [pc, #32]	; (80011d0 <processGetValueSensor+0x30>)
 80011ae:	601a      	str	r2, [r3, #0]
	if(g_byTimerCurrent - g_byTimerInit >= 1000){
 80011b0:	4b07      	ldr	r3, [pc, #28]	; (80011d0 <processGetValueSensor+0x30>)
 80011b2:	681a      	ldr	r2, [r3, #0]
 80011b4:	4b07      	ldr	r3, [pc, #28]	; (80011d4 <processGetValueSensor+0x34>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	1ad3      	subs	r3, r2, r3
 80011ba:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80011be:	d305      	bcc.n	80011cc <processGetValueSensor+0x2c>
		Display_TemHum();
 80011c0:	f7ff ff92 	bl	80010e8 <Display_TemHum>
		g_byTimerInit = g_byTimerCurrent;
 80011c4:	4b02      	ldr	r3, [pc, #8]	; (80011d0 <processGetValueSensor+0x30>)
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	4a02      	ldr	r2, [pc, #8]	; (80011d4 <processGetValueSensor+0x34>)
 80011ca:	6013      	str	r3, [r2, #0]
	}
}
 80011cc:	bf00      	nop
 80011ce:	bd80      	pop	{r7, pc}
 80011d0:	20000164 	.word	0x20000164
 80011d4:	20000160 	.word	0x20000160

080011d8 <main>:
int main(){
 80011d8:	b580      	push	{r7, lr}
 80011da:	b082      	sub	sp, #8
 80011dc:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 80011de:	f001 f801 	bl	80021e4 <SystemCoreClockUpdate>
	TimerInit();
 80011e2:	f001 fce7 	bl	8002bb4 <TimerInit>
	Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID);
 80011e6:	2100      	movs	r1, #0
 80011e8:	481d      	ldr	r0, [pc, #116]	; (8001260 <main+0x88>)
 80011ea:	f002 f819 	bl	8003220 <Ucglib4WireSWSPI_begin>
	ucg_ClearScreen(&ucg);
 80011ee:	481c      	ldr	r0, [pc, #112]	; (8001260 <main+0x88>)
 80011f0:	f002 f85d 	bl	80032ae <ucg_ClearScreen>
	ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 80011f4:	491b      	ldr	r1, [pc, #108]	; (8001264 <main+0x8c>)
 80011f6:	481a      	ldr	r0, [pc, #104]	; (8001260 <main+0x88>)
 80011f8:	f003 f972 	bl	80044e0 <ucg_SetFont>
	ucg_SetColor(&ucg, 0, 255, 255, 255);
 80011fc:	23ff      	movs	r3, #255	; 0xff
 80011fe:	9300      	str	r3, [sp, #0]
 8001200:	23ff      	movs	r3, #255	; 0xff
 8001202:	22ff      	movs	r2, #255	; 0xff
 8001204:	2100      	movs	r1, #0
 8001206:	4816      	ldr	r0, [pc, #88]	; (8001260 <main+0x88>)
 8001208:	f003 fa49 	bl	800469e <ucg_SetColor>
	ucg_SetColor(&ucg, 1, 0, 0, 0);
 800120c:	2300      	movs	r3, #0
 800120e:	9300      	str	r3, [sp, #0]
 8001210:	2300      	movs	r3, #0
 8001212:	2200      	movs	r2, #0
 8001214:	2101      	movs	r1, #1
 8001216:	4812      	ldr	r0, [pc, #72]	; (8001260 <main+0x88>)
 8001218:	f003 fa41 	bl	800469e <ucg_SetColor>
	ucg_SetRotate180(&ucg);
 800121c:	4810      	ldr	r0, [pc, #64]	; (8001260 <main+0x88>)
 800121e:	f003 fb39 	bl	8004894 <ucg_SetRotate180>
	g_byTimerInit = GetMilSecTick();
 8001222:	f001 fd9b 	bl	8002d5c <GetMilSecTick>
 8001226:	4603      	mov	r3, r0
 8001228:	461a      	mov	r2, r3
 800122a:	4b0f      	ldr	r3, [pc, #60]	; (8001268 <main+0x90>)
 800122c:	601a      	str	r2, [r3, #0]
	if(beginWithI2C() == TRUE){ // use beginWithSPI to use SPI interface
 800122e:	f000 fa69 	bl	8001704 <beginWithI2C>
 8001232:	4603      	mov	r3, r0
 8001234:	2b01      	cmp	r3, #1
 8001236:	d108      	bne.n	800124a <main+0x72>
		while(1){
			setReferencePressure(100460.0); // Set value Pressure in Ha Noi (Value Pressure in sea surface is 101330);
 8001238:	ed9f 0b07 	vldr	d0, [pc, #28]	; 8001258 <main+0x80>
 800123c:	f000 fdbe 	bl	8001dbc <setReferencePressure>
			processTimerScheduler();
 8001240:	f001 fd98 	bl	8002d74 <processTimerScheduler>
			processGetValueSensor();
 8001244:	f7ff ffac 	bl	80011a0 <processGetValueSensor>
		while(1){
 8001248:	e7f6      	b.n	8001238 <main+0x60>
		}
	}
	return 0;
 800124a:	2300      	movs	r3, #0
}
 800124c:	4618      	mov	r0, r3
 800124e:	46bd      	mov	sp, r7
 8001250:	bd80      	pop	{r7, pc}
 8001252:	bf00      	nop
 8001254:	f3af 8000 	nop.w
 8001258:	00000000 	.word	0x00000000
 800125c:	40f886c0 	.word	0x40f886c0
 8001260:	200000ac 	.word	0x200000ac
 8001264:	08005eec 	.word	0x08005eec
 8001268:	20000160 	.word	0x20000160

0800126c <I2C1Init>:
* @brief				This func Init I2C1_Init mode master
* @param				none
* @return				none
* @Note					none
*/
void_t I2C1Init(void_t){
 800126c:	b580      	push	{r7, lr}
 800126e:	b086      	sub	sp, #24
 8001270:	af00      	add	r7, sp, #0
	I2C_InitTypeDef  I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 8001272:	2101      	movs	r1, #1
 8001274:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001278:	f001 fc30 	bl	8002adc <RCC_APB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 800127c:	2101      	movs	r1, #1
 800127e:	2002      	movs	r0, #2
 8001280:	f001 fc0c 	bl	8002a9c <RCC_AHB1PeriphClockCmd>

	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8001284:	2302      	movs	r3, #2
 8001286:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8001288:	2302      	movs	r3, #2
 800128a:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 800128c:	2301      	movs	r3, #1
 800128e:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8001290:	2300      	movs	r3, #0
 8001292:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 8001294:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001298:	603b      	str	r3, [r7, #0]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 800129a:	463b      	mov	r3, r7
 800129c:	4619      	mov	r1, r3
 800129e:	4815      	ldr	r0, [pc, #84]	; (80012f4 <I2C1Init+0x88>)
 80012a0:	f001 f86c 	bl	800237c <GPIO_Init>

	// Connect PA8 to I2C1 SCL
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 80012a4:	2204      	movs	r2, #4
 80012a6:	2108      	movs	r1, #8
 80012a8:	4812      	ldr	r0, [pc, #72]	; (80012f4 <I2C1Init+0x88>)
 80012aa:	f001 f90d 	bl	80024c8 <GPIO_PinAFConfig>

	// Connect PC9 to I2C1 SDA
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 80012ae:	2204      	movs	r2, #4
 80012b0:	2109      	movs	r1, #9
 80012b2:	4810      	ldr	r0, [pc, #64]	; (80012f4 <I2C1Init+0x88>)
 80012b4:	f001 f908 	bl	80024c8 <GPIO_PinAFConfig>

	I2C_InitStruct.I2C_ClockSpeed = 400000;
 80012b8:	4b0f      	ldr	r3, [pc, #60]	; (80012f8 <I2C1Init+0x8c>)
 80012ba:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 80012bc:	2300      	movs	r3, #0
 80012be:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 80012c0:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 80012c4:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 80012c6:	2300      	movs	r3, #0
 80012c8:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 80012ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012ce:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 80012d0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80012d4:	82bb      	strh	r3, [r7, #20]

	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 80012d6:	f107 0308 	add.w	r3, r7, #8
 80012da:	4619      	mov	r1, r3
 80012dc:	4807      	ldr	r0, [pc, #28]	; (80012fc <I2C1Init+0x90>)
 80012de:	f001 f93d 	bl	800255c <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 80012e2:	2101      	movs	r1, #1
 80012e4:	4805      	ldr	r0, [pc, #20]	; (80012fc <I2C1Init+0x90>)
 80012e6:	f001 f9fb 	bl	80026e0 <I2C_Cmd>
}
 80012ea:	bf00      	nop
 80012ec:	3718      	adds	r7, #24
 80012ee:	46bd      	mov	sp, r7
 80012f0:	bd80      	pop	{r7, pc}
 80012f2:	bf00      	nop
 80012f4:	40020400 	.word	0x40020400
 80012f8:	00061a80 	.word	0x00061a80
 80012fc:	40005400 	.word	0x40005400

08001300 <I2C1Stop>:
  * @param	None
  * @retval	None
  ******************************************************************************
  */
void_t I2C1Stop(void)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 8001304:	2101      	movs	r1, #1
 8001306:	4805      	ldr	r0, [pc, #20]	; (800131c <I2C1Stop+0x1c>)
 8001308:	f001 fa2a 	bl	8002760 <I2C_GenerateSTOP>
	I2C_ClearFlag(I2Cx_SENSOR, I2C_FLAG_BUSY);
 800130c:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8001310:	4802      	ldr	r0, [pc, #8]	; (800131c <I2C1Stop+0x1c>)
 8001312:	f001 fb04 	bl	800291e <I2C_ClearFlag>
}
 8001316:	bf00      	nop
 8001318:	bd80      	pop	{r7, pc}
 800131a:	bf00      	nop
 800131c:	40005400 	.word	0x40005400

08001320 <I2C1Start>:
  * @param	None
  * @retval	None
  ******************************************************************************
  */
void_t I2C1Start(void)
{
 8001320:	b580      	push	{r7, lr}
 8001322:	af00      	add	r7, sp, #0
//	I2C_ClearFlag(I2Cx_SENSOR, I2C_FLAG_BUSY);
//	// Wait until I2Cx is not busy anymore
 	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 8001324:	bf00      	nop
 8001326:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 800132a:	480a      	ldr	r0, [pc, #40]	; (8001354 <I2C1Start+0x34>)
 800132c:	f001 fac4 	bl	80028b8 <I2C_GetFlagStatus>
 8001330:	4603      	mov	r3, r0
 8001332:	2b00      	cmp	r3, #0
 8001334:	d1f7      	bne.n	8001326 <I2C1Start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 8001336:	2101      	movs	r1, #1
 8001338:	4806      	ldr	r0, [pc, #24]	; (8001354 <I2C1Start+0x34>)
 800133a:	f001 f9f1 	bl	8002720 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 800133e:	bf00      	nop
 8001340:	4905      	ldr	r1, [pc, #20]	; (8001358 <I2C1Start+0x38>)
 8001342:	4804      	ldr	r0, [pc, #16]	; (8001354 <I2C1Start+0x34>)
 8001344:	f001 fa88 	bl	8002858 <I2C_CheckEvent>
 8001348:	4603      	mov	r3, r0
 800134a:	2b00      	cmp	r3, #0
 800134c:	d0f8      	beq.n	8001340 <I2C1Start+0x20>
}
 800134e:	bf00      	nop
 8001350:	bf00      	nop
 8001352:	bd80      	pop	{r7, pc}
 8001354:	40005400 	.word	0x40005400
 8001358:	00030001 	.word	0x00030001

0800135c <I2C1AddressDirection>:
	* @param	I2C direction (transmitter or receiver)
  * @retval	None
  ******************************************************************************
  */
void_t I2C1AddressDirection(u8_t byAddress, u8_t byDirection)
{
 800135c:	b580      	push	{r7, lr}
 800135e:	b082      	sub	sp, #8
 8001360:	af00      	add	r7, sp, #0
 8001362:	4603      	mov	r3, r0
 8001364:	460a      	mov	r2, r1
 8001366:	71fb      	strb	r3, [r7, #7]
 8001368:	4613      	mov	r3, r2
 800136a:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, byAddress, byDirection);
 800136c:	79ba      	ldrb	r2, [r7, #6]
 800136e:	79fb      	ldrb	r3, [r7, #7]
 8001370:	4619      	mov	r1, r3
 8001372:	480f      	ldr	r0, [pc, #60]	; (80013b0 <I2C1AddressDirection+0x54>)
 8001374:	f001 fa14 	bl	80027a0 <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (byDirection == I2C_Direction_Transmitter)
 8001378:	79bb      	ldrb	r3, [r7, #6]
 800137a:	2b00      	cmp	r3, #0
 800137c:	d108      	bne.n	8001390 <I2C1AddressDirection+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 800137e:	bf00      	nop
 8001380:	490c      	ldr	r1, [pc, #48]	; (80013b4 <I2C1AddressDirection+0x58>)
 8001382:	480b      	ldr	r0, [pc, #44]	; (80013b0 <I2C1AddressDirection+0x54>)
 8001384:	f001 fa68 	bl	8002858 <I2C_CheckEvent>
 8001388:	4603      	mov	r3, r0
 800138a:	2b00      	cmp	r3, #0
 800138c:	d0f8      	beq.n	8001380 <I2C1AddressDirection+0x24>
	}
	else if (byDirection == I2C_Direction_Receiver)
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 800138e:	e00a      	b.n	80013a6 <I2C1AddressDirection+0x4a>
	else if (byDirection == I2C_Direction_Receiver)
 8001390:	79bb      	ldrb	r3, [r7, #6]
 8001392:	2b01      	cmp	r3, #1
 8001394:	d107      	bne.n	80013a6 <I2C1AddressDirection+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8001396:	bf00      	nop
 8001398:	4907      	ldr	r1, [pc, #28]	; (80013b8 <I2C1AddressDirection+0x5c>)
 800139a:	4805      	ldr	r0, [pc, #20]	; (80013b0 <I2C1AddressDirection+0x54>)
 800139c:	f001 fa5c 	bl	8002858 <I2C_CheckEvent>
 80013a0:	4603      	mov	r3, r0
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d0f8      	beq.n	8001398 <I2C1AddressDirection+0x3c>
}
 80013a6:	bf00      	nop
 80013a8:	3708      	adds	r7, #8
 80013aa:	46bd      	mov	sp, r7
 80013ac:	bd80      	pop	{r7, pc}
 80013ae:	bf00      	nop
 80013b0:	40005400 	.word	0x40005400
 80013b4:	00070082 	.word	0x00070082
 80013b8:	00030002 	.word	0x00030002

080013bc <I2C1Transmit>:
  * @param	Data byte to transmit
  * @retval	None
  ******************************************************************************
  */
void_t I2C1Transmit(u8_t byData)
{
 80013bc:	b580      	push	{r7, lr}
 80013be:	b082      	sub	sp, #8
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	4603      	mov	r3, r0
 80013c4:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byData);
 80013c6:	79fb      	ldrb	r3, [r7, #7]
 80013c8:	4619      	mov	r1, r3
 80013ca:	4808      	ldr	r0, [pc, #32]	; (80013ec <I2C1Transmit+0x30>)
 80013cc:	f001 fa26 	bl	800281c <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 80013d0:	bf00      	nop
 80013d2:	4907      	ldr	r1, [pc, #28]	; (80013f0 <I2C1Transmit+0x34>)
 80013d4:	4805      	ldr	r0, [pc, #20]	; (80013ec <I2C1Transmit+0x30>)
 80013d6:	f001 fa3f 	bl	8002858 <I2C_CheckEvent>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d0f8      	beq.n	80013d2 <I2C1Transmit+0x16>
}
 80013e0:	bf00      	nop
 80013e2:	bf00      	nop
 80013e4:	3708      	adds	r7, #8
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	40005400 	.word	0x40005400
 80013f0:	00070084 	.word	0x00070084

080013f4 <I2C1ReceiveAck>:
  * @param	None
  * @retval	Received data byte
  ******************************************************************************
  */
u8_t I2C1ReceiveAck(void_t)
{
 80013f4:	b580      	push	{r7, lr}
 80013f6:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 80013f8:	2101      	movs	r1, #1
 80013fa:	4808      	ldr	r0, [pc, #32]	; (800141c <I2C1ReceiveAck+0x28>)
 80013fc:	f001 f9ee 	bl	80027dc <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8001400:	bf00      	nop
 8001402:	4907      	ldr	r1, [pc, #28]	; (8001420 <I2C1ReceiveAck+0x2c>)
 8001404:	4805      	ldr	r0, [pc, #20]	; (800141c <I2C1ReceiveAck+0x28>)
 8001406:	f001 fa27 	bl	8002858 <I2C_CheckEvent>
 800140a:	4603      	mov	r3, r0
 800140c:	2b00      	cmp	r3, #0
 800140e:	d0f8      	beq.n	8001402 <I2C1ReceiveAck+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8001410:	4802      	ldr	r0, [pc, #8]	; (800141c <I2C1ReceiveAck+0x28>)
 8001412:	f001 fa13 	bl	800283c <I2C_ReceiveData>
 8001416:	4603      	mov	r3, r0
}
 8001418:	4618      	mov	r0, r3
 800141a:	bd80      	pop	{r7, pc}
 800141c:	40005400 	.word	0x40005400
 8001420:	00030040 	.word	0x00030040

08001424 <I2C1ReceiveNack>:
  * @param	None
  * @retval	Received data byte
  ******************************************************************************
  */
u8_t I2C1ReceiveNack(void_t)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 8001428:	2100      	movs	r1, #0
 800142a:	4808      	ldr	r0, [pc, #32]	; (800144c <I2C1ReceiveNack+0x28>)
 800142c:	f001 f9d6 	bl	80027dc <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8001430:	bf00      	nop
 8001432:	4907      	ldr	r1, [pc, #28]	; (8001450 <I2C1ReceiveNack+0x2c>)
 8001434:	4805      	ldr	r0, [pc, #20]	; (800144c <I2C1ReceiveNack+0x28>)
 8001436:	f001 fa0f 	bl	8002858 <I2C_CheckEvent>
 800143a:	4603      	mov	r3, r0
 800143c:	2b00      	cmp	r3, #0
 800143e:	d0f8      	beq.n	8001432 <I2C1ReceiveNack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8001440:	4802      	ldr	r0, [pc, #8]	; (800144c <I2C1ReceiveNack+0x28>)
 8001442:	f001 f9fb 	bl	800283c <I2C_ReceiveData>
 8001446:	4603      	mov	r3, r0
}
 8001448:	4618      	mov	r0, r3
 800144a:	bd80      	pop	{r7, pc}
 800144c:	40005400 	.word	0x40005400
 8001450:	00030040 	.word	0x00030040

08001454 <BMP280_Init>:
* @brief				This func Init BMP280_Init
* @param				none
* @return				none
* @Note					none
*/
u8_t BMP280_Init(void_t){
 8001454:	b598      	push	{r3, r4, r7, lr}
 8001456:	af00      	add	r7, sp, #0
//	g_SensorSettings.chipSelectPin = 10; //Select CS pin for SPI

	//These are deprecated g_SensorSettings
	g_SensorSettings.byRunMode = 3; //Normal/Run
 8001458:	4ba8      	ldr	r3, [pc, #672]	; (80016fc <BMP280_Init+0x2a8>)
 800145a:	2203      	movs	r2, #3
 800145c:	70da      	strb	r2, [r3, #3]
	g_SensorSettings.byTimeStandby = 0; //0.5ms
 800145e:	4ba7      	ldr	r3, [pc, #668]	; (80016fc <BMP280_Init+0x2a8>)
 8001460:	2200      	movs	r2, #0
 8001462:	711a      	strb	r2, [r3, #4]
	g_SensorSettings.byFilter = 0; //Filter off
 8001464:	4ba5      	ldr	r3, [pc, #660]	; (80016fc <BMP280_Init+0x2a8>)
 8001466:	2200      	movs	r2, #0
 8001468:	715a      	strb	r2, [r3, #5]
	g_SensorSettings.byTempOverSample = 1;
 800146a:	4ba4      	ldr	r3, [pc, #656]	; (80016fc <BMP280_Init+0x2a8>)
 800146c:	2201      	movs	r2, #1
 800146e:	719a      	strb	r2, [r3, #6]
	g_SensorSettings.byPressOverSample = 1;
 8001470:	4ba2      	ldr	r3, [pc, #648]	; (80016fc <BMP280_Init+0x2a8>)
 8001472:	2201      	movs	r2, #1
 8001474:	71da      	strb	r2, [r3, #7]
	g_SensorSettings.byHumidOverSample = 1;
 8001476:	4ba1      	ldr	r3, [pc, #644]	; (80016fc <BMP280_Init+0x2a8>)
 8001478:	2201      	movs	r2, #1
 800147a:	721a      	strb	r2, [r3, #8]
	g_SensorSettings.fTempCorrection = 0.f; // correction of temperature - added to the result
 800147c:	4b9f      	ldr	r3, [pc, #636]	; (80016fc <BMP280_Init+0x2a8>)
 800147e:	2200      	movs	r2, #0
 8001480:	60da      	str	r2, [r3, #12]
//
//	if(chipID != 0x58 && chipID != 0x60) // Is this BMP or BME?
//	return(chipID); //This is not BMP nor BME!

	//Reading all compensation data, range 0x88:A1, 0xE1:E7
	g_Calibration.byDigT1 = ((u16_t)((readRegister(BME280_DIGT1_MSB_REG) << 8) + readRegister(BME280_DIGT1_LSB_REG)));
 8001482:	2089      	movs	r0, #137	; 0x89
 8001484:	f000 fdb8 	bl	8001ff8 <readRegister>
 8001488:	4603      	mov	r3, r0
 800148a:	b29b      	uxth	r3, r3
 800148c:	021b      	lsls	r3, r3, #8
 800148e:	b29c      	uxth	r4, r3
 8001490:	2088      	movs	r0, #136	; 0x88
 8001492:	f000 fdb1 	bl	8001ff8 <readRegister>
 8001496:	4603      	mov	r3, r0
 8001498:	b29b      	uxth	r3, r3
 800149a:	4423      	add	r3, r4
 800149c:	b29a      	uxth	r2, r3
 800149e:	4b98      	ldr	r3, [pc, #608]	; (8001700 <BMP280_Init+0x2ac>)
 80014a0:	801a      	strh	r2, [r3, #0]
	g_Calibration.ibDigT2 = ((i16_t)((readRegister(BME280_DIGT2_MSB_REG) << 8) + readRegister(BME280_DIGT2_LSB_REG)));
 80014a2:	208b      	movs	r0, #139	; 0x8b
 80014a4:	f000 fda8 	bl	8001ff8 <readRegister>
 80014a8:	4603      	mov	r3, r0
 80014aa:	b29b      	uxth	r3, r3
 80014ac:	021b      	lsls	r3, r3, #8
 80014ae:	b29c      	uxth	r4, r3
 80014b0:	208a      	movs	r0, #138	; 0x8a
 80014b2:	f000 fda1 	bl	8001ff8 <readRegister>
 80014b6:	4603      	mov	r3, r0
 80014b8:	b29b      	uxth	r3, r3
 80014ba:	4423      	add	r3, r4
 80014bc:	b29b      	uxth	r3, r3
 80014be:	b21a      	sxth	r2, r3
 80014c0:	4b8f      	ldr	r3, [pc, #572]	; (8001700 <BMP280_Init+0x2ac>)
 80014c2:	805a      	strh	r2, [r3, #2]
	g_Calibration.ibDigT3 = ((i16_t)((readRegister(BME280_DIGT3_MSB_REG) << 8) + readRegister(BME280_DIGT3_LSB_REG)));
 80014c4:	208d      	movs	r0, #141	; 0x8d
 80014c6:	f000 fd97 	bl	8001ff8 <readRegister>
 80014ca:	4603      	mov	r3, r0
 80014cc:	b29b      	uxth	r3, r3
 80014ce:	021b      	lsls	r3, r3, #8
 80014d0:	b29c      	uxth	r4, r3
 80014d2:	208c      	movs	r0, #140	; 0x8c
 80014d4:	f000 fd90 	bl	8001ff8 <readRegister>
 80014d8:	4603      	mov	r3, r0
 80014da:	b29b      	uxth	r3, r3
 80014dc:	4423      	add	r3, r4
 80014de:	b29b      	uxth	r3, r3
 80014e0:	b21a      	sxth	r2, r3
 80014e2:	4b87      	ldr	r3, [pc, #540]	; (8001700 <BMP280_Init+0x2ac>)
 80014e4:	809a      	strh	r2, [r3, #4]

	g_Calibration.byDigP1 = ((u16_t)((readRegister(BME280_DIGP1_MSB_REG) << 8) + readRegister(BME280_DIGP1_LSB_REG)));
 80014e6:	208f      	movs	r0, #143	; 0x8f
 80014e8:	f000 fd86 	bl	8001ff8 <readRegister>
 80014ec:	4603      	mov	r3, r0
 80014ee:	b29b      	uxth	r3, r3
 80014f0:	021b      	lsls	r3, r3, #8
 80014f2:	b29c      	uxth	r4, r3
 80014f4:	208e      	movs	r0, #142	; 0x8e
 80014f6:	f000 fd7f 	bl	8001ff8 <readRegister>
 80014fa:	4603      	mov	r3, r0
 80014fc:	b29b      	uxth	r3, r3
 80014fe:	4423      	add	r3, r4
 8001500:	b29a      	uxth	r2, r3
 8001502:	4b7f      	ldr	r3, [pc, #508]	; (8001700 <BMP280_Init+0x2ac>)
 8001504:	80da      	strh	r2, [r3, #6]
	g_Calibration.ibDigP2 = ((i16_t)((readRegister(BME280_DIGP2_MSB_REG) << 8) + readRegister(BME280_DIGP2_LSB_REG)));
 8001506:	2091      	movs	r0, #145	; 0x91
 8001508:	f000 fd76 	bl	8001ff8 <readRegister>
 800150c:	4603      	mov	r3, r0
 800150e:	b29b      	uxth	r3, r3
 8001510:	021b      	lsls	r3, r3, #8
 8001512:	b29c      	uxth	r4, r3
 8001514:	2090      	movs	r0, #144	; 0x90
 8001516:	f000 fd6f 	bl	8001ff8 <readRegister>
 800151a:	4603      	mov	r3, r0
 800151c:	b29b      	uxth	r3, r3
 800151e:	4423      	add	r3, r4
 8001520:	b29b      	uxth	r3, r3
 8001522:	b21a      	sxth	r2, r3
 8001524:	4b76      	ldr	r3, [pc, #472]	; (8001700 <BMP280_Init+0x2ac>)
 8001526:	811a      	strh	r2, [r3, #8]
	g_Calibration.ibDigP3 = ((i16_t)((readRegister(BME280_DIGP3_MSB_REG) << 8) + readRegister(BME280_DIGP3_LSB_REG)));
 8001528:	2093      	movs	r0, #147	; 0x93
 800152a:	f000 fd65 	bl	8001ff8 <readRegister>
 800152e:	4603      	mov	r3, r0
 8001530:	b29b      	uxth	r3, r3
 8001532:	021b      	lsls	r3, r3, #8
 8001534:	b29c      	uxth	r4, r3
 8001536:	2092      	movs	r0, #146	; 0x92
 8001538:	f000 fd5e 	bl	8001ff8 <readRegister>
 800153c:	4603      	mov	r3, r0
 800153e:	b29b      	uxth	r3, r3
 8001540:	4423      	add	r3, r4
 8001542:	b29b      	uxth	r3, r3
 8001544:	b21a      	sxth	r2, r3
 8001546:	4b6e      	ldr	r3, [pc, #440]	; (8001700 <BMP280_Init+0x2ac>)
 8001548:	815a      	strh	r2, [r3, #10]
	g_Calibration.ibDigP4 = ((i16_t)((readRegister(BME280_DIGP4_MSB_REG) << 8) + readRegister(BME280_DIGP4_LSB_REG)));
 800154a:	2095      	movs	r0, #149	; 0x95
 800154c:	f000 fd54 	bl	8001ff8 <readRegister>
 8001550:	4603      	mov	r3, r0
 8001552:	b29b      	uxth	r3, r3
 8001554:	021b      	lsls	r3, r3, #8
 8001556:	b29c      	uxth	r4, r3
 8001558:	2094      	movs	r0, #148	; 0x94
 800155a:	f000 fd4d 	bl	8001ff8 <readRegister>
 800155e:	4603      	mov	r3, r0
 8001560:	b29b      	uxth	r3, r3
 8001562:	4423      	add	r3, r4
 8001564:	b29b      	uxth	r3, r3
 8001566:	b21a      	sxth	r2, r3
 8001568:	4b65      	ldr	r3, [pc, #404]	; (8001700 <BMP280_Init+0x2ac>)
 800156a:	819a      	strh	r2, [r3, #12]
	g_Calibration.ibDigP5 = ((i16_t)((readRegister(BME280_DIGP5_MSB_REG) << 8) + readRegister(BME280_DIGP5_LSB_REG)));
 800156c:	2097      	movs	r0, #151	; 0x97
 800156e:	f000 fd43 	bl	8001ff8 <readRegister>
 8001572:	4603      	mov	r3, r0
 8001574:	b29b      	uxth	r3, r3
 8001576:	021b      	lsls	r3, r3, #8
 8001578:	b29c      	uxth	r4, r3
 800157a:	2096      	movs	r0, #150	; 0x96
 800157c:	f000 fd3c 	bl	8001ff8 <readRegister>
 8001580:	4603      	mov	r3, r0
 8001582:	b29b      	uxth	r3, r3
 8001584:	4423      	add	r3, r4
 8001586:	b29b      	uxth	r3, r3
 8001588:	b21a      	sxth	r2, r3
 800158a:	4b5d      	ldr	r3, [pc, #372]	; (8001700 <BMP280_Init+0x2ac>)
 800158c:	81da      	strh	r2, [r3, #14]
	g_Calibration.ibDigP6 = ((i16_t)((readRegister(BME280_DIGP6_MSB_REG) << 8) + readRegister(BME280_DIGP6_LSB_REG)));
 800158e:	2099      	movs	r0, #153	; 0x99
 8001590:	f000 fd32 	bl	8001ff8 <readRegister>
 8001594:	4603      	mov	r3, r0
 8001596:	b29b      	uxth	r3, r3
 8001598:	021b      	lsls	r3, r3, #8
 800159a:	b29c      	uxth	r4, r3
 800159c:	2098      	movs	r0, #152	; 0x98
 800159e:	f000 fd2b 	bl	8001ff8 <readRegister>
 80015a2:	4603      	mov	r3, r0
 80015a4:	b29b      	uxth	r3, r3
 80015a6:	4423      	add	r3, r4
 80015a8:	b29b      	uxth	r3, r3
 80015aa:	b21a      	sxth	r2, r3
 80015ac:	4b54      	ldr	r3, [pc, #336]	; (8001700 <BMP280_Init+0x2ac>)
 80015ae:	821a      	strh	r2, [r3, #16]
	g_Calibration.ibDigP7 = ((i16_t)((readRegister(BME280_DIGP7_MSB_REG) << 8) + readRegister(BME280_DIGP7_LSB_REG)));
 80015b0:	209b      	movs	r0, #155	; 0x9b
 80015b2:	f000 fd21 	bl	8001ff8 <readRegister>
 80015b6:	4603      	mov	r3, r0
 80015b8:	b29b      	uxth	r3, r3
 80015ba:	021b      	lsls	r3, r3, #8
 80015bc:	b29c      	uxth	r4, r3
 80015be:	209a      	movs	r0, #154	; 0x9a
 80015c0:	f000 fd1a 	bl	8001ff8 <readRegister>
 80015c4:	4603      	mov	r3, r0
 80015c6:	b29b      	uxth	r3, r3
 80015c8:	4423      	add	r3, r4
 80015ca:	b29b      	uxth	r3, r3
 80015cc:	b21a      	sxth	r2, r3
 80015ce:	4b4c      	ldr	r3, [pc, #304]	; (8001700 <BMP280_Init+0x2ac>)
 80015d0:	825a      	strh	r2, [r3, #18]
	g_Calibration.ibDigP8 = ((i16_t)((readRegister(BME280_DIGP8_MSB_REG) << 8) + readRegister(BME280_DIGP8_LSB_REG)));
 80015d2:	209d      	movs	r0, #157	; 0x9d
 80015d4:	f000 fd10 	bl	8001ff8 <readRegister>
 80015d8:	4603      	mov	r3, r0
 80015da:	b29b      	uxth	r3, r3
 80015dc:	021b      	lsls	r3, r3, #8
 80015de:	b29c      	uxth	r4, r3
 80015e0:	209c      	movs	r0, #156	; 0x9c
 80015e2:	f000 fd09 	bl	8001ff8 <readRegister>
 80015e6:	4603      	mov	r3, r0
 80015e8:	b29b      	uxth	r3, r3
 80015ea:	4423      	add	r3, r4
 80015ec:	b29b      	uxth	r3, r3
 80015ee:	b21a      	sxth	r2, r3
 80015f0:	4b43      	ldr	r3, [pc, #268]	; (8001700 <BMP280_Init+0x2ac>)
 80015f2:	829a      	strh	r2, [r3, #20]
	g_Calibration.ibDigP9 = ((i16_t)((readRegister(BME280_DIGP9_MSB_REG) << 8) + readRegister(BME280_DIGP9_LSB_REG)));
 80015f4:	209f      	movs	r0, #159	; 0x9f
 80015f6:	f000 fcff 	bl	8001ff8 <readRegister>
 80015fa:	4603      	mov	r3, r0
 80015fc:	b29b      	uxth	r3, r3
 80015fe:	021b      	lsls	r3, r3, #8
 8001600:	b29c      	uxth	r4, r3
 8001602:	209e      	movs	r0, #158	; 0x9e
 8001604:	f000 fcf8 	bl	8001ff8 <readRegister>
 8001608:	4603      	mov	r3, r0
 800160a:	b29b      	uxth	r3, r3
 800160c:	4423      	add	r3, r4
 800160e:	b29b      	uxth	r3, r3
 8001610:	b21a      	sxth	r2, r3
 8001612:	4b3b      	ldr	r3, [pc, #236]	; (8001700 <BMP280_Init+0x2ac>)
 8001614:	82da      	strh	r2, [r3, #22]

	g_Calibration.byDigH1 = ((u8_t)(readRegister(BME280_DIGH1_REG)));
 8001616:	20a1      	movs	r0, #161	; 0xa1
 8001618:	f000 fcee 	bl	8001ff8 <readRegister>
 800161c:	4603      	mov	r3, r0
 800161e:	461a      	mov	r2, r3
 8001620:	4b37      	ldr	r3, [pc, #220]	; (8001700 <BMP280_Init+0x2ac>)
 8001622:	761a      	strb	r2, [r3, #24]
	g_Calibration.ibDigH2 = ((i16_t)((readRegister(BME280_DIGH2_MSB_REG) << 8) + readRegister(BME280_DIGH2_LSB_REG)));
 8001624:	20e2      	movs	r0, #226	; 0xe2
 8001626:	f000 fce7 	bl	8001ff8 <readRegister>
 800162a:	4603      	mov	r3, r0
 800162c:	b29b      	uxth	r3, r3
 800162e:	021b      	lsls	r3, r3, #8
 8001630:	b29c      	uxth	r4, r3
 8001632:	20e1      	movs	r0, #225	; 0xe1
 8001634:	f000 fce0 	bl	8001ff8 <readRegister>
 8001638:	4603      	mov	r3, r0
 800163a:	b29b      	uxth	r3, r3
 800163c:	4423      	add	r3, r4
 800163e:	b29b      	uxth	r3, r3
 8001640:	b21a      	sxth	r2, r3
 8001642:	4b2f      	ldr	r3, [pc, #188]	; (8001700 <BMP280_Init+0x2ac>)
 8001644:	835a      	strh	r2, [r3, #26]
	g_Calibration.byDigH3 = ((u8_t)(readRegister(BME280_DIGH3_REG)));
 8001646:	20e3      	movs	r0, #227	; 0xe3
 8001648:	f000 fcd6 	bl	8001ff8 <readRegister>
 800164c:	4603      	mov	r3, r0
 800164e:	461a      	mov	r2, r3
 8001650:	4b2b      	ldr	r3, [pc, #172]	; (8001700 <BMP280_Init+0x2ac>)
 8001652:	771a      	strb	r2, [r3, #28]
	g_Calibration.ibDigH4 = ((i16_t)((readRegister(BME280_DIGH4_MSB_REG) << 4) + (readRegister(BME280_DIGH4_LSB_REG) & 0x0F)));
 8001654:	20e4      	movs	r0, #228	; 0xe4
 8001656:	f000 fccf 	bl	8001ff8 <readRegister>
 800165a:	4603      	mov	r3, r0
 800165c:	b29b      	uxth	r3, r3
 800165e:	011b      	lsls	r3, r3, #4
 8001660:	b29c      	uxth	r4, r3
 8001662:	20e5      	movs	r0, #229	; 0xe5
 8001664:	f000 fcc8 	bl	8001ff8 <readRegister>
 8001668:	4603      	mov	r3, r0
 800166a:	b29b      	uxth	r3, r3
 800166c:	f003 030f 	and.w	r3, r3, #15
 8001670:	b29b      	uxth	r3, r3
 8001672:	4423      	add	r3, r4
 8001674:	b29b      	uxth	r3, r3
 8001676:	b21a      	sxth	r2, r3
 8001678:	4b21      	ldr	r3, [pc, #132]	; (8001700 <BMP280_Init+0x2ac>)
 800167a:	83da      	strh	r2, [r3, #30]
	g_Calibration.ibDigH5 = ((i16_t)((readRegister(BME280_DIGH5_MSB_REG) << 4) + ((readRegister(BME280_DIGH4_LSB_REG) >> 4) & 0x0F)));
 800167c:	20e6      	movs	r0, #230	; 0xe6
 800167e:	f000 fcbb 	bl	8001ff8 <readRegister>
 8001682:	4603      	mov	r3, r0
 8001684:	b29b      	uxth	r3, r3
 8001686:	011b      	lsls	r3, r3, #4
 8001688:	b29c      	uxth	r4, r3
 800168a:	20e5      	movs	r0, #229	; 0xe5
 800168c:	f000 fcb4 	bl	8001ff8 <readRegister>
 8001690:	4603      	mov	r3, r0
 8001692:	091b      	lsrs	r3, r3, #4
 8001694:	b2db      	uxtb	r3, r3
 8001696:	b29b      	uxth	r3, r3
 8001698:	f003 030f 	and.w	r3, r3, #15
 800169c:	b29b      	uxth	r3, r3
 800169e:	4423      	add	r3, r4
 80016a0:	b29b      	uxth	r3, r3
 80016a2:	b21a      	sxth	r2, r3
 80016a4:	4b16      	ldr	r3, [pc, #88]	; (8001700 <BMP280_Init+0x2ac>)
 80016a6:	841a      	strh	r2, [r3, #32]
	g_Calibration.ibDigH6 = ((i8_t)readRegister(BME280_DIGH6_REG));
 80016a8:	20e7      	movs	r0, #231	; 0xe7
 80016aa:	f000 fca5 	bl	8001ff8 <readRegister>
 80016ae:	4603      	mov	r3, r0
 80016b0:	b25a      	sxtb	r2, r3
 80016b2:	4b13      	ldr	r3, [pc, #76]	; (8001700 <BMP280_Init+0x2ac>)
 80016b4:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22

	//Most of the time the sensor will be init with default values
	//But in case user has old/deprecated code, use the settings.x values
	setStandbyTime(g_SensorSettings.byTimeStandby);
 80016b8:	4b10      	ldr	r3, [pc, #64]	; (80016fc <BMP280_Init+0x2a8>)
 80016ba:	791b      	ldrb	r3, [r3, #4]
 80016bc:	4618      	mov	r0, r3
 80016be:	f000 f871 	bl	80017a4 <setStandbyTime>
	setFilter(g_SensorSettings.byFilter);
 80016c2:	4b0e      	ldr	r3, [pc, #56]	; (80016fc <BMP280_Init+0x2a8>)
 80016c4:	795b      	ldrb	r3, [r3, #5]
 80016c6:	4618      	mov	r0, r3
 80016c8:	f000 f890 	bl	80017ec <setFilter>
	setPressureOverSample(g_SensorSettings.byPressOverSample); //Default of 1x oversample
 80016cc:	4b0b      	ldr	r3, [pc, #44]	; (80016fc <BMP280_Init+0x2a8>)
 80016ce:	79db      	ldrb	r3, [r3, #7]
 80016d0:	4618      	mov	r0, r3
 80016d2:	f000 f8df 	bl	8001894 <setPressureOverSample>
	setHumidityOverSample(g_SensorSettings.byHumidOverSample); //Default of 1x oversample
 80016d6:	4b09      	ldr	r3, [pc, #36]	; (80016fc <BMP280_Init+0x2a8>)
 80016d8:	7a1b      	ldrb	r3, [r3, #8]
 80016da:	4618      	mov	r0, r3
 80016dc:	f000 f90a 	bl	80018f4 <setHumidityOverSample>
	setTempOverSample(g_SensorSettings.byTempOverSample); //Default of 1x oversample
 80016e0:	4b06      	ldr	r3, [pc, #24]	; (80016fc <BMP280_Init+0x2a8>)
 80016e2:	799b      	ldrb	r3, [r3, #6]
 80016e4:	4618      	mov	r0, r3
 80016e6:	f000 f8a5 	bl	8001834 <setTempOverSample>

	setMode(MODE_NORMAL); //Go!
 80016ea:	2003      	movs	r0, #3
 80016ec:	f000 f82a 	bl	8001744 <setMode>

	return(readRegister(BME280_CHIP_ID_REG)); //Should return 0x60
 80016f0:	20d0      	movs	r0, #208	; 0xd0
 80016f2:	f000 fc81 	bl	8001ff8 <readRegister>
 80016f6:	4603      	mov	r3, r0
}
 80016f8:	4618      	mov	r0, r3
 80016fa:	bd98      	pop	{r3, r4, r7, pc}
 80016fc:	20001348 	.word	0x20001348
 8001700:	2000135c 	.word	0x2000135c

08001704 <beginWithI2C>:
* @brief				This func begin with I2C interface
* @param				none
* @return				none
* @Note					none
*/
bool_t beginWithI2C(){
 8001704:	b580      	push	{r7, lr}
 8001706:	b082      	sub	sp, #8
 8001708:	af00      	add	r7, sp, #0
	I2C1Init();
 800170a:	f7ff fdaf 	bl	800126c <I2C1Init>
	g_SensorSettings.byComInterface = I2C_MODE; //Default to I2C
 800170e:	4b0c      	ldr	r3, [pc, #48]	; (8001740 <beginWithI2C+0x3c>)
 8001710:	2200      	movs	r2, #0
 8001712:	701a      	strb	r2, [r3, #0]
	g_SensorSettings.byI2CAddress = SENSOR_I2C_ADDRESS; //Default, jumper open is 0x77
 8001714:	4b0a      	ldr	r3, [pc, #40]	; (8001740 <beginWithI2C+0x3c>)
 8001716:	2277      	movs	r2, #119	; 0x77
 8001718:	705a      	strb	r2, [r3, #1]
	u8_t byChipID = BMP280_Init();
 800171a:	f7ff fe9b 	bl	8001454 <BMP280_Init>
 800171e:	4603      	mov	r3, r0
 8001720:	71fb      	strb	r3, [r7, #7]
	if(byChipID == 0x58) return(TRUE); //Begin normal init with these settings. Should return chip ID of 0x58 for BMP
 8001722:	79fb      	ldrb	r3, [r7, #7]
 8001724:	2b58      	cmp	r3, #88	; 0x58
 8001726:	d101      	bne.n	800172c <beginWithI2C+0x28>
 8001728:	2301      	movs	r3, #1
 800172a:	e005      	b.n	8001738 <beginWithI2C+0x34>
	if(byChipID == 0x60) return(TRUE); //Begin normal init with these settings. Should return chip ID of 0x60 for BME
 800172c:	79fb      	ldrb	r3, [r7, #7]
 800172e:	2b60      	cmp	r3, #96	; 0x60
 8001730:	d101      	bne.n	8001736 <beginWithI2C+0x32>
 8001732:	2301      	movs	r3, #1
 8001734:	e000      	b.n	8001738 <beginWithI2C+0x34>
	return(FALSE);
 8001736:	2300      	movs	r3, #0
}
 8001738:	4618      	mov	r0, r3
 800173a:	3708      	adds	r7, #8
 800173c:	46bd      	mov	sp, r7
 800173e:	bd80      	pop	{r7, pc}
 8001740:	20001348 	.word	0x20001348

08001744 <setMode>:
* @brief				This func setmode
* @param				u8_t byMode( sleep, force, normal)
* @return				none
* @Note					none
*/
static void_t setMode(u8_t byMode){
 8001744:	b580      	push	{r7, lr}
 8001746:	b084      	sub	sp, #16
 8001748:	af00      	add	r7, sp, #0
 800174a:	4603      	mov	r3, r0
 800174c:	71fb      	strb	r3, [r7, #7]
	if(byMode > MODE_NORMAL) byMode = 0; //Error check. Default to sleep mode
 800174e:	79fb      	ldrb	r3, [r7, #7]
 8001750:	2b03      	cmp	r3, #3
 8001752:	d901      	bls.n	8001758 <setMode+0x14>
 8001754:	2300      	movs	r3, #0
 8001756:	71fb      	strb	r3, [r7, #7]

	u8_t byControlData = readRegister(BME280_CTRL_MEAS_REG);
 8001758:	20f4      	movs	r0, #244	; 0xf4
 800175a:	f000 fc4d 	bl	8001ff8 <readRegister>
 800175e:	4603      	mov	r3, r0
 8001760:	73fb      	strb	r3, [r7, #15]
	byControlData &= ~( (1<<1) | (1<<0) ); //Clear the mode[1:0] bits
 8001762:	7bfb      	ldrb	r3, [r7, #15]
 8001764:	f023 0303 	bic.w	r3, r3, #3
 8001768:	73fb      	strb	r3, [r7, #15]
	byControlData |= byMode; //Set
 800176a:	7bfa      	ldrb	r2, [r7, #15]
 800176c:	79fb      	ldrb	r3, [r7, #7]
 800176e:	4313      	orrs	r3, r2
 8001770:	73fb      	strb	r3, [r7, #15]
	writeRegister(BME280_CTRL_MEAS_REG, byControlData);
 8001772:	7bfb      	ldrb	r3, [r7, #15]
 8001774:	4619      	mov	r1, r3
 8001776:	20f4      	movs	r0, #244	; 0xf4
 8001778:	f000 fc74 	bl	8002064 <writeRegister>
}
 800177c:	bf00      	nop
 800177e:	3710      	adds	r7, #16
 8001780:	46bd      	mov	sp, r7
 8001782:	bd80      	pop	{r7, pc}

08001784 <getMode>:
* @brief				This func get Mode (slepp, force, normal)
* @param				none
* @return				none
* @Note					none
*/
static u8_t getMode(void_t){
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
	u8_t byControlData = readRegister(BME280_CTRL_MEAS_REG);
 800178a:	20f4      	movs	r0, #244	; 0xf4
 800178c:	f000 fc34 	bl	8001ff8 <readRegister>
 8001790:	4603      	mov	r3, r0
 8001792:	71fb      	strb	r3, [r7, #7]
	return(byControlData & 0b00000011); //Clear bits 7 through 2
 8001794:	79fb      	ldrb	r3, [r7, #7]
 8001796:	f003 0303 	and.w	r3, r3, #3
 800179a:	b2db      	uxtb	r3, r3
}
 800179c:	4618      	mov	r0, r3
 800179e:	3708      	adds	r7, #8
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd80      	pop	{r7, pc}

080017a4 <setStandbyTime>:
//  6, 10ms
//  7, 20ms
* @return				none
* @Note					none
*/
void_t setStandbyTime(u8_t byTimeSetting){
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b084      	sub	sp, #16
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	4603      	mov	r3, r0
 80017ac:	71fb      	strb	r3, [r7, #7]
	if(byTimeSetting > STANDBY_MS_20) byTimeSetting = 0; //Error check. Default to 0.5ms
 80017ae:	79fb      	ldrb	r3, [r7, #7]
 80017b0:	2b07      	cmp	r3, #7
 80017b2:	d901      	bls.n	80017b8 <setStandbyTime+0x14>
 80017b4:	2300      	movs	r3, #0
 80017b6:	71fb      	strb	r3, [r7, #7]

	u8_t byControlData = readRegister(BME280_CONFIG_REG);
 80017b8:	20f5      	movs	r0, #245	; 0xf5
 80017ba:	f000 fc1d 	bl	8001ff8 <readRegister>
 80017be:	4603      	mov	r3, r0
 80017c0:	73fb      	strb	r3, [r7, #15]
	byControlData &= ~( (1<<7) | (1<<6) | (1<<5) ); //Clear the 7/6/5 bits
 80017c2:	7bfb      	ldrb	r3, [r7, #15]
 80017c4:	f003 031f 	and.w	r3, r3, #31
 80017c8:	73fb      	strb	r3, [r7, #15]
	byControlData |= (byTimeSetting << 5); //Align with bits 7/6/5
 80017ca:	79fb      	ldrb	r3, [r7, #7]
 80017cc:	015b      	lsls	r3, r3, #5
 80017ce:	b25a      	sxtb	r2, r3
 80017d0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017d4:	4313      	orrs	r3, r2
 80017d6:	b25b      	sxtb	r3, r3
 80017d8:	73fb      	strb	r3, [r7, #15]
	writeRegister(BME280_CONFIG_REG, byControlData);
 80017da:	7bfb      	ldrb	r3, [r7, #15]
 80017dc:	4619      	mov	r1, r3
 80017de:	20f5      	movs	r0, #245	; 0xf5
 80017e0:	f000 fc40 	bl	8002064 <writeRegister>
}
 80017e4:	bf00      	nop
 80017e6:	3710      	adds	r7, #16
 80017e8:	46bd      	mov	sp, r7
 80017ea:	bd80      	pop	{r7, pc}

080017ec <setFilter>:
//  3, coefficients = 8
//  4, coefficients = 16
* @return				none
* @Note					none
*/
void_t setFilter(u8_t byFilterSetting){
 80017ec:	b580      	push	{r7, lr}
 80017ee:	b084      	sub	sp, #16
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	4603      	mov	r3, r0
 80017f4:	71fb      	strb	r3, [r7, #7]
	if(byFilterSetting > FILTER_X16) byFilterSetting = 0; //Error check. Default to filter off
 80017f6:	79fb      	ldrb	r3, [r7, #7]
 80017f8:	2b04      	cmp	r3, #4
 80017fa:	d901      	bls.n	8001800 <setFilter+0x14>
 80017fc:	2300      	movs	r3, #0
 80017fe:	71fb      	strb	r3, [r7, #7]

	u8_t byControlData = readRegister(BME280_CONFIG_REG);
 8001800:	20f5      	movs	r0, #245	; 0xf5
 8001802:	f000 fbf9 	bl	8001ff8 <readRegister>
 8001806:	4603      	mov	r3, r0
 8001808:	73fb      	strb	r3, [r7, #15]
	byControlData &= ~( (1<<4) | (1<<3) | (1<<2) ); //Clear the 4/3/2 bits
 800180a:	7bfb      	ldrb	r3, [r7, #15]
 800180c:	f023 031c 	bic.w	r3, r3, #28
 8001810:	73fb      	strb	r3, [r7, #15]
	byControlData |= (byFilterSetting << 2); //Align with bits 4/3/2
 8001812:	79fb      	ldrb	r3, [r7, #7]
 8001814:	009b      	lsls	r3, r3, #2
 8001816:	b25a      	sxtb	r2, r3
 8001818:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800181c:	4313      	orrs	r3, r2
 800181e:	b25b      	sxtb	r3, r3
 8001820:	73fb      	strb	r3, [r7, #15]
	writeRegister(BME280_CONFIG_REG, byControlData);
 8001822:	7bfb      	ldrb	r3, [r7, #15]
 8001824:	4619      	mov	r1, r3
 8001826:	20f5      	movs	r0, #245	; 0xf5
 8001828:	f000 fc1c 	bl	8002064 <writeRegister>
}
 800182c:	bf00      	nop
 800182e:	3710      	adds	r7, #16
 8001830:	46bd      	mov	sp, r7
 8001832:	bd80      	pop	{r7, pc}

08001834 <setTempOverSample>:
* @brief				This func swt Oversamping for Meas Temperature
* @param				u8_t byOverSampleAmount
* @return				none
* @Note					none
*/
void_t setTempOverSample(u8_t byOverSampleAmount){
 8001834:	b580      	push	{r7, lr}
 8001836:	b084      	sub	sp, #16
 8001838:	af00      	add	r7, sp, #0
 800183a:	4603      	mov	r3, r0
 800183c:	71fb      	strb	r3, [r7, #7]
	byOverSampleAmount = checkSampleValue(byOverSampleAmount); //Error check
 800183e:	79fb      	ldrb	r3, [r7, #7]
 8001840:	4618      	mov	r0, r3
 8001842:	f000 f883 	bl	800194c <checkSampleValue>
 8001846:	4603      	mov	r3, r0
 8001848:	71fb      	strb	r3, [r7, #7]

	u8_t byOriginalMode = getMode(); //Get the current mode so we can go back to it at the end
 800184a:	f7ff ff9b 	bl	8001784 <getMode>
 800184e:	4603      	mov	r3, r0
 8001850:	73fb      	strb	r3, [r7, #15]

	setMode(MODE_SLEEP); //Config will only be writeable in sleep mode, so first go to sleep mode
 8001852:	2000      	movs	r0, #0
 8001854:	f7ff ff76 	bl	8001744 <setMode>

	//Set the osrs_t bits (7, 6, 5) to overSampleAmount
	u8_t byControlData = readRegister(BME280_CTRL_MEAS_REG);
 8001858:	20f4      	movs	r0, #244	; 0xf4
 800185a:	f000 fbcd 	bl	8001ff8 <readRegister>
 800185e:	4603      	mov	r3, r0
 8001860:	73bb      	strb	r3, [r7, #14]
	byControlData &= ~( (1<<7) | (1<<6) | (1<<5) ); //Clear bits 765
 8001862:	7bbb      	ldrb	r3, [r7, #14]
 8001864:	f003 031f 	and.w	r3, r3, #31
 8001868:	73bb      	strb	r3, [r7, #14]
	byControlData |= byOverSampleAmount << 5; //Align overSampleAmount to bits 7/6/5
 800186a:	79fb      	ldrb	r3, [r7, #7]
 800186c:	015b      	lsls	r3, r3, #5
 800186e:	b25a      	sxtb	r2, r3
 8001870:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001874:	4313      	orrs	r3, r2
 8001876:	b25b      	sxtb	r3, r3
 8001878:	73bb      	strb	r3, [r7, #14]
	writeRegister(BME280_CTRL_MEAS_REG, byControlData);
 800187a:	7bbb      	ldrb	r3, [r7, #14]
 800187c:	4619      	mov	r1, r3
 800187e:	20f4      	movs	r0, #244	; 0xf4
 8001880:	f000 fbf0 	bl	8002064 <writeRegister>

	setMode(byOriginalMode); //Return to the original user's choice
 8001884:	7bfb      	ldrb	r3, [r7, #15]
 8001886:	4618      	mov	r0, r3
 8001888:	f7ff ff5c 	bl	8001744 <setMode>
}
 800188c:	bf00      	nop
 800188e:	3710      	adds	r7, #16
 8001890:	46bd      	mov	sp, r7
 8001892:	bd80      	pop	{r7, pc}

08001894 <setPressureOverSample>:
* @param				u8_t byOverSampleAmount
* @return				none
* @Note					none
*/
void_t setPressureOverSample(u8_t byOverSampleAmount)
{
 8001894:	b580      	push	{r7, lr}
 8001896:	b084      	sub	sp, #16
 8001898:	af00      	add	r7, sp, #0
 800189a:	4603      	mov	r3, r0
 800189c:	71fb      	strb	r3, [r7, #7]
	byOverSampleAmount = checkSampleValue(byOverSampleAmount); //Error check
 800189e:	79fb      	ldrb	r3, [r7, #7]
 80018a0:	4618      	mov	r0, r3
 80018a2:	f000 f853 	bl	800194c <checkSampleValue>
 80018a6:	4603      	mov	r3, r0
 80018a8:	71fb      	strb	r3, [r7, #7]

	u8_t byOriginalMode = getMode(); //Get the current mode so we can go back to it at the end
 80018aa:	f7ff ff6b 	bl	8001784 <getMode>
 80018ae:	4603      	mov	r3, r0
 80018b0:	73fb      	strb	r3, [r7, #15]

	setMode(MODE_SLEEP); //Config will only be writeable in sleep mode, so first go to sleep mode
 80018b2:	2000      	movs	r0, #0
 80018b4:	f7ff ff46 	bl	8001744 <setMode>

	//Set the osrs_p bits (4, 3, 2) to overSampleAmount
	u8_t byControlData = readRegister(BME280_CTRL_MEAS_REG);
 80018b8:	20f4      	movs	r0, #244	; 0xf4
 80018ba:	f000 fb9d 	bl	8001ff8 <readRegister>
 80018be:	4603      	mov	r3, r0
 80018c0:	73bb      	strb	r3, [r7, #14]
	byControlData &= ~( (1<<4) | (1<<3) | (1<<2) ); //Clear bits 432
 80018c2:	7bbb      	ldrb	r3, [r7, #14]
 80018c4:	f023 031c 	bic.w	r3, r3, #28
 80018c8:	73bb      	strb	r3, [r7, #14]
	byControlData |= byOverSampleAmount << 2; //Align overSampleAmount to bits 4/3/2
 80018ca:	79fb      	ldrb	r3, [r7, #7]
 80018cc:	009b      	lsls	r3, r3, #2
 80018ce:	b25a      	sxtb	r2, r3
 80018d0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80018d4:	4313      	orrs	r3, r2
 80018d6:	b25b      	sxtb	r3, r3
 80018d8:	73bb      	strb	r3, [r7, #14]
	writeRegister(BME280_CTRL_MEAS_REG, byControlData);
 80018da:	7bbb      	ldrb	r3, [r7, #14]
 80018dc:	4619      	mov	r1, r3
 80018de:	20f4      	movs	r0, #244	; 0xf4
 80018e0:	f000 fbc0 	bl	8002064 <writeRegister>

	setMode(byOriginalMode); //Return to the original user's choice
 80018e4:	7bfb      	ldrb	r3, [r7, #15]
 80018e6:	4618      	mov	r0, r3
 80018e8:	f7ff ff2c 	bl	8001744 <setMode>
}
 80018ec:	bf00      	nop
 80018ee:	3710      	adds	r7, #16
 80018f0:	46bd      	mov	sp, r7
 80018f2:	bd80      	pop	{r7, pc}

080018f4 <setHumidityOverSample>:
* @param				u8_t byOverSampleAmount
* @return				none
* @Note					none
*/
void_t setHumidityOverSample(u8_t byOverSampleAmount)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b084      	sub	sp, #16
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	4603      	mov	r3, r0
 80018fc:	71fb      	strb	r3, [r7, #7]
	byOverSampleAmount = checkSampleValue(byOverSampleAmount); //Error check
 80018fe:	79fb      	ldrb	r3, [r7, #7]
 8001900:	4618      	mov	r0, r3
 8001902:	f000 f823 	bl	800194c <checkSampleValue>
 8001906:	4603      	mov	r3, r0
 8001908:	71fb      	strb	r3, [r7, #7]

	u8_t byOriginalMode = getMode(); //Get the current mode so we can go back to it at the end
 800190a:	f7ff ff3b 	bl	8001784 <getMode>
 800190e:	4603      	mov	r3, r0
 8001910:	73fb      	strb	r3, [r7, #15]

	setMode(MODE_SLEEP); //Config will only be writeable in sleep mode, so first go to sleep mode
 8001912:	2000      	movs	r0, #0
 8001914:	f7ff ff16 	bl	8001744 <setMode>

	//Set the osrs_h bits (2, 1, 0) to overSampleAmount
	u8_t byControlData = readRegister(BME280_CTRL_HUMIDITY_REG);
 8001918:	20f2      	movs	r0, #242	; 0xf2
 800191a:	f000 fb6d 	bl	8001ff8 <readRegister>
 800191e:	4603      	mov	r3, r0
 8001920:	73bb      	strb	r3, [r7, #14]
	byControlData &= ~( (1<<2) | (1<<1) | (1<<0) ); //Clear bits 2/1/0
 8001922:	7bbb      	ldrb	r3, [r7, #14]
 8001924:	f023 0307 	bic.w	r3, r3, #7
 8001928:	73bb      	strb	r3, [r7, #14]
	byControlData |= byOverSampleAmount << 0; //Align overSampleAmount to bits 2/1/0
 800192a:	7bba      	ldrb	r2, [r7, #14]
 800192c:	79fb      	ldrb	r3, [r7, #7]
 800192e:	4313      	orrs	r3, r2
 8001930:	73bb      	strb	r3, [r7, #14]
	writeRegister(BME280_CTRL_HUMIDITY_REG, byControlData);
 8001932:	7bbb      	ldrb	r3, [r7, #14]
 8001934:	4619      	mov	r1, r3
 8001936:	20f2      	movs	r0, #242	; 0xf2
 8001938:	f000 fb94 	bl	8002064 <writeRegister>

	setMode(byOriginalMode); //Return to the original user's choice
 800193c:	7bfb      	ldrb	r3, [r7, #15]
 800193e:	4618      	mov	r0, r3
 8001940:	f7ff ff00 	bl	8001744 <setMode>
}
 8001944:	bf00      	nop
 8001946:	3710      	adds	r7, #16
 8001948:	46bd      	mov	sp, r7
 800194a:	bd80      	pop	{r7, pc}

0800194c <checkSampleValue>:
* @return				none
* @Note					none
*/

static u8_t checkSampleValue(u8_t byUserValue)
{
 800194c:	b480      	push	{r7}
 800194e:	b083      	sub	sp, #12
 8001950:	af00      	add	r7, sp, #0
 8001952:	4603      	mov	r3, r0
 8001954:	71fb      	strb	r3, [r7, #7]
	switch(byUserValue)
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	2b10      	cmp	r3, #16
 800195a:	d831      	bhi.n	80019c0 <checkSampleValue+0x74>
 800195c:	a201      	add	r2, pc, #4	; (adr r2, 8001964 <checkSampleValue+0x18>)
 800195e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001962:	bf00      	nop
 8001964:	080019a9 	.word	0x080019a9
 8001968:	080019ad 	.word	0x080019ad
 800196c:	080019b1 	.word	0x080019b1
 8001970:	080019c1 	.word	0x080019c1
 8001974:	080019b5 	.word	0x080019b5
 8001978:	080019c1 	.word	0x080019c1
 800197c:	080019c1 	.word	0x080019c1
 8001980:	080019c1 	.word	0x080019c1
 8001984:	080019b9 	.word	0x080019b9
 8001988:	080019c1 	.word	0x080019c1
 800198c:	080019c1 	.word	0x080019c1
 8001990:	080019c1 	.word	0x080019c1
 8001994:	080019c1 	.word	0x080019c1
 8001998:	080019c1 	.word	0x080019c1
 800199c:	080019c1 	.word	0x080019c1
 80019a0:	080019c1 	.word	0x080019c1
 80019a4:	080019bd 	.word	0x080019bd
	{
		case(ZERO_SAMPLE_VALUE):
			return 0;
 80019a8:	2300      	movs	r3, #0
 80019aa:	e00a      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		case(ONE_SAMPLE_VALUE):
			return 1;
 80019ac:	2301      	movs	r3, #1
 80019ae:	e008      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		case(TWO_SAMPLE_VALUE):
			return 2;
 80019b0:	2302      	movs	r3, #2
 80019b2:	e006      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		case(FOUR_SAMPLE_VALUE):
			return 3;
 80019b4:	2303      	movs	r3, #3
 80019b6:	e004      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		case(EIGHT_SAMPLE_VALUE):
			return 4;
 80019b8:	2304      	movs	r3, #4
 80019ba:	e002      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		case(SIXTEEN_SAMPLE_VALUE):
			return 5;
 80019bc:	2305      	movs	r3, #5
 80019be:	e000      	b.n	80019c2 <checkSampleValue+0x76>
			break; //Valid
		default:
			return 1; //Default to 1x
 80019c0:	2301      	movs	r3, #1
			break; //Good
	}
}
 80019c2:	4618      	mov	r0, r3
 80019c4:	370c      	adds	r7, #12
 80019c6:	46bd      	mov	sp, r7
 80019c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019cc:	4770      	bx	lr
 80019ce:	bf00      	nop

080019d0 <readFloatPressure>:
* @param				none
* @return				none
* @Note					none
*/
u32_t readFloatPressure(void_t )
{
 80019d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80019d4:	b09c      	sub	sp, #112	; 0x70
 80019d6:	af00      	add	r7, sp, #0

	// Returns pressure in Pa as unsigned 32 bit ieger in Q24.8 format (24 ieger bits and 8 fractional bits).
	// Output value of “24674867” represents 24674867/256 = 96386.2 Pa = 963.862 hPa
    u8_t byBuffer[3];
    float_t fValuePress  = 0;
 80019d8:	f04f 0300 	mov.w	r3, #0
 80019dc:	66fb      	str	r3, [r7, #108]	; 0x6c
	readRegisterRegion(byBuffer, BME280_PRESSURE_MSB_REG, 3);
 80019de:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80019e2:	2203      	movs	r2, #3
 80019e4:	21f7      	movs	r1, #247	; 0xf7
 80019e6:	4618      	mov	r0, r3
 80019e8:	f000 fab0 	bl	8001f4c <readRegisterRegion>
    i32_t adc_P = ((u32_t)byBuffer[0] << 12) | ((u32_t)byBuffer[1] << 4) | ((byBuffer[2] >> 4) & 0x0F);
 80019ec:	f897 304c 	ldrb.w	r3, [r7, #76]	; 0x4c
 80019f0:	031a      	lsls	r2, r3, #12
 80019f2:	f897 304d 	ldrb.w	r3, [r7, #77]	; 0x4d
 80019f6:	011b      	lsls	r3, r3, #4
 80019f8:	431a      	orrs	r2, r3
 80019fa:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 80019fe:	091b      	lsrs	r3, r3, #4
 8001a00:	b2db      	uxtb	r3, r3
 8001a02:	f003 030f 	and.w	r3, r3, #15
 8001a06:	4313      	orrs	r3, r2
 8001a08:	66bb      	str	r3, [r7, #104]	; 0x68

	i64_t ibVar1, ibVar2, ibPressADC;
	ibVar1 = ((i64_t)g_fTempfine) - 128000;
 8001a0a:	4b6c      	ldr	r3, [pc, #432]	; (8001bbc <readFloatPressure+0x1ec>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	4618      	mov	r0, r3
 8001a10:	f7ff f9b2 	bl	8000d78 <__aeabi_f2lz>
 8001a14:	4602      	mov	r2, r0
 8001a16:	460b      	mov	r3, r1
 8001a18:	f5b2 34fa 	subs.w	r4, r2, #128000	; 0x1f400
 8001a1c:	f143 35ff 	adc.w	r5, r3, #4294967295
 8001a20:	e9c7 4518 	strd	r4, r5, [r7, #96]	; 0x60
	ibVar2 = ibVar1 * ibVar1 * (i64_t)g_Calibration.ibDigP6;
 8001a24:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8001a26:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001a28:	fb03 f102 	mul.w	r1, r3, r2
 8001a2c:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8001a2e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001a30:	fb03 f302 	mul.w	r3, r3, r2
 8001a34:	18ca      	adds	r2, r1, r3
 8001a36:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001a38:	fba3 4503 	umull	r4, r5, r3, r3
 8001a3c:	1953      	adds	r3, r2, r5
 8001a3e:	461d      	mov	r5, r3
 8001a40:	4b5f      	ldr	r3, [pc, #380]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001a42:	f9b3 3010 	ldrsh.w	r3, [r3, #16]
 8001a46:	b21a      	sxth	r2, r3
 8001a48:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001a4c:	fb02 f005 	mul.w	r0, r2, r5
 8001a50:	fb04 f103 	mul.w	r1, r4, r3
 8001a54:	4401      	add	r1, r0
 8001a56:	fba4 2302 	umull	r2, r3, r4, r2
 8001a5a:	4419      	add	r1, r3
 8001a5c:	460b      	mov	r3, r1
 8001a5e:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
 8001a62:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
	ibVar2 = ibVar2 + ((ibVar1 * (i64_t)g_Calibration.ibDigP5)<<17);
 8001a66:	4b56      	ldr	r3, [pc, #344]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001a68:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8001a6c:	b21a      	sxth	r2, r3
 8001a6e:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001a72:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8001a74:	fb03 f001 	mul.w	r0, r3, r1
 8001a78:	6e79      	ldr	r1, [r7, #100]	; 0x64
 8001a7a:	fb02 f101 	mul.w	r1, r2, r1
 8001a7e:	4408      	add	r0, r1
 8001a80:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8001a82:	fba1 2302 	umull	r2, r3, r1, r2
 8001a86:	18c1      	adds	r1, r0, r3
 8001a88:	460b      	mov	r3, r1
 8001a8a:	f04f 0000 	mov.w	r0, #0
 8001a8e:	f04f 0100 	mov.w	r1, #0
 8001a92:	0459      	lsls	r1, r3, #17
 8001a94:	ea41 31d2 	orr.w	r1, r1, r2, lsr #15
 8001a98:	0450      	lsls	r0, r2, #17
 8001a9a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8001a9e:	eb12 0800 	adds.w	r8, r2, r0
 8001aa2:	eb43 0901 	adc.w	r9, r3, r1
 8001aa6:	e9c7 8916 	strd	r8, r9, [r7, #88]	; 0x58
	ibVar2 = ibVar2 + (((i64_t)g_Calibration.ibDigP4)<<35);
 8001aaa:	4b45      	ldr	r3, [pc, #276]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001aac:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001ab0:	b21a      	sxth	r2, r3
 8001ab2:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001ab6:	f04f 0000 	mov.w	r0, #0
 8001aba:	f04f 0100 	mov.w	r1, #0
 8001abe:	00d1      	lsls	r1, r2, #3
 8001ac0:	2000      	movs	r0, #0
 8001ac2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8001ac6:	1814      	adds	r4, r2, r0
 8001ac8:	61bc      	str	r4, [r7, #24]
 8001aca:	414b      	adcs	r3, r1
 8001acc:	61fb      	str	r3, [r7, #28]
 8001ace:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
 8001ad2:	e9c7 3416 	strd	r3, r4, [r7, #88]	; 0x58
	ibVar1 = ((ibVar1 * ibVar1 * (i64_t)g_Calibration.ibDigP3)>>8) + ((ibVar1 * (i64_t)g_Calibration.ibDigP2)<<12);
 8001ad6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8001ad8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001ada:	fb03 f102 	mul.w	r1, r3, r2
 8001ade:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8001ae0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001ae2:	fb03 f302 	mul.w	r3, r3, r2
 8001ae6:	18ca      	adds	r2, r1, r3
 8001ae8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001aea:	fba3 4503 	umull	r4, r5, r3, r3
 8001aee:	1953      	adds	r3, r2, r5
 8001af0:	461d      	mov	r5, r3
 8001af2:	4b33      	ldr	r3, [pc, #204]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001af4:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001af8:	b21a      	sxth	r2, r3
 8001afa:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001afe:	fb02 f005 	mul.w	r0, r2, r5
 8001b02:	fb04 f103 	mul.w	r1, r4, r3
 8001b06:	4401      	add	r1, r0
 8001b08:	fba4 2302 	umull	r2, r3, r4, r2
 8001b0c:	4419      	add	r1, r3
 8001b0e:	460b      	mov	r3, r1
 8001b10:	f04f 0800 	mov.w	r8, #0
 8001b14:	f04f 0900 	mov.w	r9, #0
 8001b18:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8001b1c:	ea48 6803 	orr.w	r8, r8, r3, lsl #24
 8001b20:	ea4f 2923 	mov.w	r9, r3, asr #8
 8001b24:	4b26      	ldr	r3, [pc, #152]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001b26:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001b2a:	b21a      	sxth	r2, r3
 8001b2c:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001b30:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8001b32:	fb03 f001 	mul.w	r0, r3, r1
 8001b36:	6e79      	ldr	r1, [r7, #100]	; 0x64
 8001b38:	fb02 f101 	mul.w	r1, r2, r1
 8001b3c:	1844      	adds	r4, r0, r1
 8001b3e:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8001b40:	fba1 0102 	umull	r0, r1, r1, r2
 8001b44:	1863      	adds	r3, r4, r1
 8001b46:	4619      	mov	r1, r3
 8001b48:	f04f 0200 	mov.w	r2, #0
 8001b4c:	f04f 0300 	mov.w	r3, #0
 8001b50:	030b      	lsls	r3, r1, #12
 8001b52:	ea43 5310 	orr.w	r3, r3, r0, lsr #20
 8001b56:	0302      	lsls	r2, r0, #12
 8001b58:	eb18 0102 	adds.w	r1, r8, r2
 8001b5c:	6139      	str	r1, [r7, #16]
 8001b5e:	eb49 0303 	adc.w	r3, r9, r3
 8001b62:	617b      	str	r3, [r7, #20]
 8001b64:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 8001b68:	e9c7 3418 	strd	r3, r4, [r7, #96]	; 0x60
	ibVar1 = (((((i64_t)1)<<47)+ibVar1))*((i64_t)g_Calibration.byDigP1)>>33;
 8001b6c:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8001b70:	1c11      	adds	r1, r2, #0
 8001b72:	6439      	str	r1, [r7, #64]	; 0x40
 8001b74:	f543 4300 	adc.w	r3, r3, #32768	; 0x8000
 8001b78:	647b      	str	r3, [r7, #68]	; 0x44
 8001b7a:	4b11      	ldr	r3, [pc, #68]	; (8001bc0 <readFloatPressure+0x1f0>)
 8001b7c:	88db      	ldrh	r3, [r3, #6]
 8001b7e:	b29a      	uxth	r2, r3
 8001b80:	f04f 0300 	mov.w	r3, #0
 8001b84:	e9d7 4510 	ldrd	r4, r5, [r7, #64]	; 0x40
 8001b88:	4629      	mov	r1, r5
 8001b8a:	fb02 f001 	mul.w	r0, r2, r1
 8001b8e:	4621      	mov	r1, r4
 8001b90:	fb01 f103 	mul.w	r1, r1, r3
 8001b94:	4401      	add	r1, r0
 8001b96:	4620      	mov	r0, r4
 8001b98:	fba0 2302 	umull	r2, r3, r0, r2
 8001b9c:	4419      	add	r1, r3
 8001b9e:	460b      	mov	r3, r1
 8001ba0:	f04f 0000 	mov.w	r0, #0
 8001ba4:	f04f 0100 	mov.w	r1, #0
 8001ba8:	1058      	asrs	r0, r3, #1
 8001baa:	17d9      	asrs	r1, r3, #31
 8001bac:	e9c7 0118 	strd	r0, r1, [r7, #96]	; 0x60
	if (ibVar1 == 0)
 8001bb0:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8001bb4:	4313      	orrs	r3, r2
 8001bb6:	d105      	bne.n	8001bc4 <readFloatPressure+0x1f4>
	{
		return 0; // avoid exception caused by division by zero
 8001bb8:	2300      	movs	r3, #0
 8001bba:	e0f6      	b.n	8001daa <readFloatPressure+0x3da>
 8001bbc:	20001384 	.word	0x20001384
 8001bc0:	2000135c 	.word	0x2000135c
	}
	ibPressADC = 1048576 - adc_P;
 8001bc4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8001bc6:	f5c3 1380 	rsb	r3, r3, #1048576	; 0x100000
 8001bca:	461a      	mov	r2, r3
 8001bcc:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001bd0:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
	ibPressADC = (((ibPressADC<<31) - ibVar2)*3125)/ibVar1;
 8001bd4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001bd6:	105b      	asrs	r3, r3, #1
 8001bd8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001bda:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001bdc:	07db      	lsls	r3, r3, #31
 8001bde:	63bb      	str	r3, [r7, #56]	; 0x38
 8001be0:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8001be4:	e9d7 450e 	ldrd	r4, r5, [r7, #56]	; 0x38
 8001be8:	4621      	mov	r1, r4
 8001bea:	ebb1 0a02 	subs.w	sl, r1, r2
 8001bee:	4629      	mov	r1, r5
 8001bf0:	eb61 0b03 	sbc.w	fp, r1, r3
 8001bf4:	4652      	mov	r2, sl
 8001bf6:	465b      	mov	r3, fp
 8001bf8:	1891      	adds	r1, r2, r2
 8001bfa:	60b9      	str	r1, [r7, #8]
 8001bfc:	415b      	adcs	r3, r3
 8001bfe:	60fb      	str	r3, [r7, #12]
 8001c00:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001c04:	eb12 020a 	adds.w	r2, r2, sl
 8001c08:	eb43 030b 	adc.w	r3, r3, fp
 8001c0c:	f04f 0000 	mov.w	r0, #0
 8001c10:	f04f 0100 	mov.w	r1, #0
 8001c14:	0199      	lsls	r1, r3, #6
 8001c16:	ea41 6192 	orr.w	r1, r1, r2, lsr #26
 8001c1a:	0190      	lsls	r0, r2, #6
 8001c1c:	1812      	adds	r2, r2, r0
 8001c1e:	eb41 0303 	adc.w	r3, r1, r3
 8001c22:	f04f 0000 	mov.w	r0, #0
 8001c26:	f04f 0100 	mov.w	r1, #0
 8001c2a:	0099      	lsls	r1, r3, #2
 8001c2c:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001c30:	0090      	lsls	r0, r2, #2
 8001c32:	4602      	mov	r2, r0
 8001c34:	460b      	mov	r3, r1
 8001c36:	eb12 020a 	adds.w	r2, r2, sl
 8001c3a:	eb43 030b 	adc.w	r3, r3, fp
 8001c3e:	f04f 0000 	mov.w	r0, #0
 8001c42:	f04f 0100 	mov.w	r1, #0
 8001c46:	0099      	lsls	r1, r3, #2
 8001c48:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001c4c:	0090      	lsls	r0, r2, #2
 8001c4e:	4602      	mov	r2, r0
 8001c50:	460b      	mov	r3, r1
 8001c52:	eb12 010a 	adds.w	r1, r2, sl
 8001c56:	6339      	str	r1, [r7, #48]	; 0x30
 8001c58:	eb43 030b 	adc.w	r3, r3, fp
 8001c5c:	637b      	str	r3, [r7, #52]	; 0x34
 8001c5e:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8001c62:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8001c66:	f7ff f837 	bl	8000cd8 <__aeabi_ldivmod>
 8001c6a:	4602      	mov	r2, r0
 8001c6c:	460b      	mov	r3, r1
 8001c6e:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
	ibVar1 = (((i64_t)g_Calibration.ibDigP9) * (ibPressADC>>13) * (ibPressADC>>13)) >> 25;
 8001c72:	4b50      	ldr	r3, [pc, #320]	; (8001db4 <readFloatPressure+0x3e4>)
 8001c74:	f9b3 3016 	ldrsh.w	r3, [r3, #22]
 8001c78:	b218      	sxth	r0, r3
 8001c7a:	ea4f 71e0 	mov.w	r1, r0, asr #31
 8001c7e:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 8001c82:	f04f 0200 	mov.w	r2, #0
 8001c86:	f04f 0300 	mov.w	r3, #0
 8001c8a:	0b62      	lsrs	r2, r4, #13
 8001c8c:	ea42 42c5 	orr.w	r2, r2, r5, lsl #19
 8001c90:	136b      	asrs	r3, r5, #13
 8001c92:	fb02 f501 	mul.w	r5, r2, r1
 8001c96:	fb00 f403 	mul.w	r4, r0, r3
 8001c9a:	442c      	add	r4, r5
 8001c9c:	fba0 0102 	umull	r0, r1, r0, r2
 8001ca0:	1863      	adds	r3, r4, r1
 8001ca2:	4619      	mov	r1, r3
 8001ca4:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 8001ca8:	f04f 0200 	mov.w	r2, #0
 8001cac:	f04f 0300 	mov.w	r3, #0
 8001cb0:	0b62      	lsrs	r2, r4, #13
 8001cb2:	ea42 42c5 	orr.w	r2, r2, r5, lsl #19
 8001cb6:	136b      	asrs	r3, r5, #13
 8001cb8:	fb02 f501 	mul.w	r5, r2, r1
 8001cbc:	fb00 f403 	mul.w	r4, r0, r3
 8001cc0:	442c      	add	r4, r5
 8001cc2:	fba0 0102 	umull	r0, r1, r0, r2
 8001cc6:	1863      	adds	r3, r4, r1
 8001cc8:	4619      	mov	r1, r3
 8001cca:	f04f 0200 	mov.w	r2, #0
 8001cce:	f04f 0300 	mov.w	r3, #0
 8001cd2:	0e42      	lsrs	r2, r0, #25
 8001cd4:	ea42 12c1 	orr.w	r2, r2, r1, lsl #7
 8001cd8:	164b      	asrs	r3, r1, #25
 8001cda:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
	ibVar2 = (((i64_t)g_Calibration.ibDigP8) * ibPressADC) >> 19;
 8001cde:	4b35      	ldr	r3, [pc, #212]	; (8001db4 <readFloatPressure+0x3e4>)
 8001ce0:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8001ce4:	b21a      	sxth	r2, r3
 8001ce6:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8001cea:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8001cec:	fb03 f001 	mul.w	r0, r3, r1
 8001cf0:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8001cf2:	fb02 f101 	mul.w	r1, r2, r1
 8001cf6:	1844      	adds	r4, r0, r1
 8001cf8:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8001cfa:	fba1 0102 	umull	r0, r1, r1, r2
 8001cfe:	1863      	adds	r3, r4, r1
 8001d00:	4619      	mov	r1, r3
 8001d02:	f04f 0200 	mov.w	r2, #0
 8001d06:	f04f 0300 	mov.w	r3, #0
 8001d0a:	0cc2      	lsrs	r2, r0, #19
 8001d0c:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 8001d10:	14cb      	asrs	r3, r1, #19
 8001d12:	e9c7 2316 	strd	r2, r3, [r7, #88]	; 0x58
	ibPressADC = ((ibPressADC + ibVar1 + ibVar2) >> 8) + (((i64_t)g_Calibration.ibDigP7)<<4);
 8001d16:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8001d1a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8001d1e:	1884      	adds	r4, r0, r2
 8001d20:	62bc      	str	r4, [r7, #40]	; 0x28
 8001d22:	eb41 0303 	adc.w	r3, r1, r3
 8001d26:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001d28:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8001d2c:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	; 0x28
 8001d30:	4621      	mov	r1, r4
 8001d32:	1889      	adds	r1, r1, r2
 8001d34:	6239      	str	r1, [r7, #32]
 8001d36:	4629      	mov	r1, r5
 8001d38:	eb43 0101 	adc.w	r1, r3, r1
 8001d3c:	6279      	str	r1, [r7, #36]	; 0x24
 8001d3e:	f04f 0000 	mov.w	r0, #0
 8001d42:	f04f 0100 	mov.w	r1, #0
 8001d46:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8001d4a:	4623      	mov	r3, r4
 8001d4c:	0a18      	lsrs	r0, r3, #8
 8001d4e:	462b      	mov	r3, r5
 8001d50:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001d54:	462b      	mov	r3, r5
 8001d56:	1219      	asrs	r1, r3, #8
 8001d58:	4b16      	ldr	r3, [pc, #88]	; (8001db4 <readFloatPressure+0x3e4>)
 8001d5a:	f9b3 3012 	ldrsh.w	r3, [r3, #18]
 8001d5e:	b21c      	sxth	r4, r3
 8001d60:	ea4f 75e4 	mov.w	r5, r4, asr #31
 8001d64:	f04f 0200 	mov.w	r2, #0
 8001d68:	f04f 0300 	mov.w	r3, #0
 8001d6c:	012b      	lsls	r3, r5, #4
 8001d6e:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 8001d72:	0122      	lsls	r2, r4, #4
 8001d74:	1884      	adds	r4, r0, r2
 8001d76:	603c      	str	r4, [r7, #0]
 8001d78:	eb41 0303 	adc.w	r3, r1, r3
 8001d7c:	607b      	str	r3, [r7, #4]
 8001d7e:	e9d7 3400 	ldrd	r3, r4, [r7]
 8001d82:	e9c7 3414 	strd	r3, r4, [r7, #80]	; 0x50
	fValuePress = (float_t)ibPressADC / (256.0*100.0);
 8001d86:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8001d8a:	f7fe ff67 	bl	8000c5c <__aeabi_l2f>
 8001d8e:	ee06 0a90 	vmov	s13, r0
 8001d92:	ed9f 7a09 	vldr	s14, [pc, #36]	; 8001db8 <readFloatPressure+0x3e8>
 8001d96:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d9a:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
	return (u32_t)fValuePress;
 8001d9e:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8001da2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001da6:	ee17 3a90 	vmov	r3, s15
}
 8001daa:	4618      	mov	r0, r3
 8001dac:	3770      	adds	r7, #112	; 0x70
 8001dae:	46bd      	mov	sp, r7
 8001db0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001db4:	2000135c 	.word	0x2000135c
 8001db8:	46c80000 	.word	0x46c80000

08001dbc <setReferencePressure>:
* @param				float_t fRefPressure
* @return				none
* @Note					none
*/
void_t setReferencePressure(float_t fRefPressure)
{
 8001dbc:	b480      	push	{r7}
 8001dbe:	b083      	sub	sp, #12
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	ed87 0a01 	vstr	s0, [r7, #4]
	g_fReferencePressure = fRefPressure;
 8001dc6:	4a04      	ldr	r2, [pc, #16]	; (8001dd8 <setReferencePressure+0x1c>)
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	6013      	str	r3, [r2, #0]
}
 8001dcc:	bf00      	nop
 8001dce:	370c      	adds	r7, #12
 8001dd0:	46bd      	mov	sp, r7
 8001dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd6:	4770      	bx	lr
 8001dd8:	20000000 	.word	0x20000000
 8001ddc:	00000000 	.word	0x00000000

08001de0 <readFloatAltitudeMeters>:
* @param				none
* @return				none
* @Note					none
*/
u32_t readFloatAltitudeMeters(void_t)
{
 8001de0:	b580      	push	{r7, lr}
 8001de2:	ed2d 8b02 	vpush	{d8}
 8001de6:	b082      	sub	sp, #8
 8001de8:	af00      	add	r7, sp, #0
  // This calculation is NOT designed to work on non-Earthlike planets such as Mars or Venus;
  // see NRLMSISE-00. That's why it is the "international" formula, not "interplanetary".
  // Sparkfun is not liable for incorrect altitude calculations from this
  // code on those planets. Interplanetary selfies are welcome, however.
	float_t fValueAlti;
	fValueAlti = (float_t)((g_fReferencePressure - (float_t)readFloatPressure())/11.11);// For every 1m height, Pressure lose 11.11 Pa
 8001dea:	4b17      	ldr	r3, [pc, #92]	; (8001e48 <readFloatAltitudeMeters+0x68>)
 8001dec:	ed93 8a00 	vldr	s16, [r3]
 8001df0:	f7ff fdee 	bl	80019d0 <readFloatPressure>
 8001df4:	ee07 0a90 	vmov	s15, r0
 8001df8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001dfc:	ee78 7a67 	vsub.f32	s15, s16, s15
 8001e00:	ee17 0a90 	vmov	r0, s15
 8001e04:	f7fe fba0 	bl	8000548 <__aeabi_f2d>
 8001e08:	a30d      	add	r3, pc, #52	; (adr r3, 8001e40 <readFloatAltitudeMeters+0x60>)
 8001e0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e0e:	f7fe fd1d 	bl	800084c <__aeabi_ddiv>
 8001e12:	4602      	mov	r2, r0
 8001e14:	460b      	mov	r3, r1
 8001e16:	4610      	mov	r0, r2
 8001e18:	4619      	mov	r1, r3
 8001e1a:	f7fe fdff 	bl	8000a1c <__aeabi_d2f>
 8001e1e:	4603      	mov	r3, r0
 8001e20:	607b      	str	r3, [r7, #4]
	return (u32_t)fValueAlti;
 8001e22:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001e2a:	ee17 3a90 	vmov	r3, s15
}
 8001e2e:	4618      	mov	r0, r3
 8001e30:	3708      	adds	r7, #8
 8001e32:	46bd      	mov	sp, r7
 8001e34:	ecbd 8b02 	vpop	{d8}
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	bf00      	nop
 8001e3c:	f3af 8000 	nop.w
 8001e40:	eb851eb8 	.word	0xeb851eb8
 8001e44:	40263851 	.word	0x40263851
 8001e48:	20000000 	.word	0x20000000

08001e4c <readTempC>:
* @param				none
* @return				none
* @Note					none
*/
u8_t readTempC( void_t)
{
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b088      	sub	sp, #32
 8001e50:	af00      	add	r7, sp, #0
	// t_fine carries fine temperature as global value

	//get the reading (adc_T);
    u8_t byBuffer[3];
    float_t fOutput;
	readRegisterRegion(byBuffer, BME280_TEMPERATURE_MSB_REG, 3);
 8001e52:	f107 030c 	add.w	r3, r7, #12
 8001e56:	2203      	movs	r2, #3
 8001e58:	21fa      	movs	r1, #250	; 0xfa
 8001e5a:	4618      	mov	r0, r3
 8001e5c:	f000 f876 	bl	8001f4c <readRegisterRegion>
    i32_t adc_T = ((i32_t)byBuffer[0] << 12) | ((i32_t)byBuffer[1] << 4) | ((byBuffer[2] >> 4) & 0x0F);
 8001e60:	7b3b      	ldrb	r3, [r7, #12]
 8001e62:	031a      	lsls	r2, r3, #12
 8001e64:	7b7b      	ldrb	r3, [r7, #13]
 8001e66:	011b      	lsls	r3, r3, #4
 8001e68:	431a      	orrs	r2, r3
 8001e6a:	7bbb      	ldrb	r3, [r7, #14]
 8001e6c:	091b      	lsrs	r3, r3, #4
 8001e6e:	b2db      	uxtb	r3, r3
 8001e70:	f003 030f 	and.w	r3, r3, #15
 8001e74:	4313      	orrs	r3, r2
 8001e76:	61fb      	str	r3, [r7, #28]
//
//	//By datasheet, calibrate
	i32_t ibVar1, ibVar2;

	ibVar1 = ((((adc_T>>3) - ((i32_t)g_Calibration.byDigT1<<1))) * ((i32_t)g_Calibration.ibDigT2)) >> 11;
 8001e78:	69fb      	ldr	r3, [r7, #28]
 8001e7a:	10da      	asrs	r2, r3, #3
 8001e7c:	4b2d      	ldr	r3, [pc, #180]	; (8001f34 <readTempC+0xe8>)
 8001e7e:	881b      	ldrh	r3, [r3, #0]
 8001e80:	005b      	lsls	r3, r3, #1
 8001e82:	1ad3      	subs	r3, r2, r3
 8001e84:	4a2b      	ldr	r2, [pc, #172]	; (8001f34 <readTempC+0xe8>)
 8001e86:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8001e8a:	fb02 f303 	mul.w	r3, r2, r3
 8001e8e:	12db      	asrs	r3, r3, #11
 8001e90:	61bb      	str	r3, [r7, #24]
	ibVar2 = (((((adc_T>>4) - ((i32_t)g_Calibration.byDigT1)) * ((adc_T>>4) - ((i32_t)g_Calibration.byDigT1))) >> 12) * ((i32_t)g_Calibration.ibDigT3)) >> 14;
 8001e92:	69fb      	ldr	r3, [r7, #28]
 8001e94:	111b      	asrs	r3, r3, #4
 8001e96:	4a27      	ldr	r2, [pc, #156]	; (8001f34 <readTempC+0xe8>)
 8001e98:	8812      	ldrh	r2, [r2, #0]
 8001e9a:	1a9b      	subs	r3, r3, r2
 8001e9c:	69fa      	ldr	r2, [r7, #28]
 8001e9e:	1112      	asrs	r2, r2, #4
 8001ea0:	4924      	ldr	r1, [pc, #144]	; (8001f34 <readTempC+0xe8>)
 8001ea2:	8809      	ldrh	r1, [r1, #0]
 8001ea4:	1a52      	subs	r2, r2, r1
 8001ea6:	fb02 f303 	mul.w	r3, r2, r3
 8001eaa:	131b      	asrs	r3, r3, #12
 8001eac:	4a21      	ldr	r2, [pc, #132]	; (8001f34 <readTempC+0xe8>)
 8001eae:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8001eb2:	fb02 f303 	mul.w	r3, r2, r3
 8001eb6:	139b      	asrs	r3, r3, #14
 8001eb8:	617b      	str	r3, [r7, #20]
	g_fTempfine =(float_t)ibVar1 + (float_t)ibVar2;
 8001eba:	69bb      	ldr	r3, [r7, #24]
 8001ebc:	ee07 3a90 	vmov	s15, r3
 8001ec0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001ec4:	697b      	ldr	r3, [r7, #20]
 8001ec6:	ee07 3a90 	vmov	s15, r3
 8001eca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001ece:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ed2:	4b19      	ldr	r3, [pc, #100]	; (8001f38 <readTempC+0xec>)
 8001ed4:	edc3 7a00 	vstr	s15, [r3]
	fOutput = (float_t)(g_fTempfine * 5 + 128) / 256;
 8001ed8:	4b17      	ldr	r3, [pc, #92]	; (8001f38 <readTempC+0xec>)
 8001eda:	edd3 7a00 	vldr	s15, [r3]
 8001ede:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8001ee2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ee6:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8001f3c <readTempC+0xf0>
 8001eea:	ee37 7a87 	vadd.f32	s14, s15, s14
 8001eee:	eddf 6a14 	vldr	s13, [pc, #80]	; 8001f40 <readTempC+0xf4>
 8001ef2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001ef6:	edc7 7a04 	vstr	s15, [r7, #16]
	fOutput =(float_t)( fOutput / 100 + g_SensorSettings.fTempCorrection);
 8001efa:	edd7 7a04 	vldr	s15, [r7, #16]
 8001efe:	eddf 6a11 	vldr	s13, [pc, #68]	; 8001f44 <readTempC+0xf8>
 8001f02:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001f06:	4b10      	ldr	r3, [pc, #64]	; (8001f48 <readTempC+0xfc>)
 8001f08:	68db      	ldr	r3, [r3, #12]
 8001f0a:	ee07 3a90 	vmov	s15, r3
 8001f0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f12:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f16:	edc7 7a04 	vstr	s15, [r7, #16]
	return (u8_t)fOutput;
 8001f1a:	edd7 7a04 	vldr	s15, [r7, #16]
 8001f1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001f22:	edc7 7a01 	vstr	s15, [r7, #4]
 8001f26:	793b      	ldrb	r3, [r7, #4]
 8001f28:	b2db      	uxtb	r3, r3
}
 8001f2a:	4618      	mov	r0, r3
 8001f2c:	3720      	adds	r7, #32
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bd80      	pop	{r7, pc}
 8001f32:	bf00      	nop
 8001f34:	2000135c 	.word	0x2000135c
 8001f38:	20001384 	.word	0x20001384
 8001f3c:	43000000 	.word	0x43000000
 8001f40:	43800000 	.word	0x43800000
 8001f44:	42c80000 	.word	0x42c80000
 8001f48:	20001348 	.word	0x20001348

08001f4c <readRegisterRegion>:
////
////  Utility
////
////****************************************************************************//
static void readRegisterRegion(u8_t *pOutputPointer , u8_t byOffset, u8_t byLength)
{
 8001f4c:	b590      	push	{r4, r7, lr}
 8001f4e:	b085      	sub	sp, #20
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	460b      	mov	r3, r1
 8001f56:	70fb      	strb	r3, [r7, #3]
 8001f58:	4613      	mov	r3, r2
 8001f5a:	70bb      	strb	r3, [r7, #2]
	switch(g_SensorSettings.byComInterface){
 8001f5c:	4b25      	ldr	r3, [pc, #148]	; (8001ff4 <readRegisterRegion+0xa8>)
 8001f5e:	781b      	ldrb	r3, [r3, #0]
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d001      	beq.n	8001f68 <readRegisterRegion+0x1c>
 8001f64:	2b01      	cmp	r3, #1
		}
		I2C1Stop();

		break;
	case SPI_MODE:
		break;
 8001f66:	e041      	b.n	8001fec <readRegisterRegion+0xa0>
		I2C1Start();
 8001f68:	f7ff f9da 	bl	8001320 <I2C1Start>
		I2C1AddressDirection(g_SensorSettings.byI2CAddress <<1,I2C_Direction_Transmitter);
 8001f6c:	4b21      	ldr	r3, [pc, #132]	; (8001ff4 <readRegisterRegion+0xa8>)
 8001f6e:	785b      	ldrb	r3, [r3, #1]
 8001f70:	005b      	lsls	r3, r3, #1
 8001f72:	b2db      	uxtb	r3, r3
 8001f74:	2100      	movs	r1, #0
 8001f76:	4618      	mov	r0, r3
 8001f78:	f7ff f9f0 	bl	800135c <I2C1AddressDirection>
		I2C1Transmit(byOffset);
 8001f7c:	78fb      	ldrb	r3, [r7, #3]
 8001f7e:	4618      	mov	r0, r3
 8001f80:	f7ff fa1c 	bl	80013bc <I2C1Transmit>
		I2C1Stop();
 8001f84:	f7ff f9bc 	bl	8001300 <I2C1Stop>
		I2C1Start();
 8001f88:	f7ff f9ca 	bl	8001320 <I2C1Start>
		I2C1AddressDirection(g_SensorSettings.byI2CAddress<<1, I2C_Direction_Receiver);
 8001f8c:	4b19      	ldr	r3, [pc, #100]	; (8001ff4 <readRegisterRegion+0xa8>)
 8001f8e:	785b      	ldrb	r3, [r3, #1]
 8001f90:	005b      	lsls	r3, r3, #1
 8001f92:	b2db      	uxtb	r3, r3
 8001f94:	2101      	movs	r1, #1
 8001f96:	4618      	mov	r0, r3
 8001f98:	f7ff f9e0 	bl	800135c <I2C1AddressDirection>
		for(i8_t  i = 0; i < byLength;i++){
 8001f9c:	2300      	movs	r3, #0
 8001f9e:	73fb      	strb	r3, [r7, #15]
 8001fa0:	e01c      	b.n	8001fdc <readRegisterRegion+0x90>
			if(i == byLength -1){
 8001fa2:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8001fa6:	78bb      	ldrb	r3, [r7, #2]
 8001fa8:	3b01      	subs	r3, #1
 8001faa:	429a      	cmp	r2, r3
 8001fac:	d108      	bne.n	8001fc0 <readRegisterRegion+0x74>
				pOutputPointer[i] = I2C1ReceiveNack();
 8001fae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001fb2:	687a      	ldr	r2, [r7, #4]
 8001fb4:	18d4      	adds	r4, r2, r3
 8001fb6:	f7ff fa35 	bl	8001424 <I2C1ReceiveNack>
 8001fba:	4603      	mov	r3, r0
 8001fbc:	7023      	strb	r3, [r4, #0]
 8001fbe:	e007      	b.n	8001fd0 <readRegisterRegion+0x84>
				pOutputPointer[i] = I2C1ReceiveAck();
 8001fc0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001fc4:	687a      	ldr	r2, [r7, #4]
 8001fc6:	18d4      	adds	r4, r2, r3
 8001fc8:	f7ff fa14 	bl	80013f4 <I2C1ReceiveAck>
 8001fcc:	4603      	mov	r3, r0
 8001fce:	7023      	strb	r3, [r4, #0]
		for(i8_t  i = 0; i < byLength;i++){
 8001fd0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001fd4:	b2db      	uxtb	r3, r3
 8001fd6:	3301      	adds	r3, #1
 8001fd8:	b2db      	uxtb	r3, r3
 8001fda:	73fb      	strb	r3, [r7, #15]
 8001fdc:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8001fe0:	78bb      	ldrb	r3, [r7, #2]
 8001fe2:	429a      	cmp	r2, r3
 8001fe4:	dbdd      	blt.n	8001fa2 <readRegisterRegion+0x56>
		I2C1Stop();
 8001fe6:	f7ff f98b 	bl	8001300 <I2C1Stop>
		break;
 8001fea:	bf00      	nop
	}

}
 8001fec:	bf00      	nop
 8001fee:	3714      	adds	r7, #20
 8001ff0:	46bd      	mov	sp, r7
 8001ff2:	bd90      	pop	{r4, r7, pc}
 8001ff4:	20001348 	.word	0x20001348

08001ff8 <readRegister>:

static u8_t readRegister(u8_t byOffset)
{
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	b084      	sub	sp, #16
 8001ffc:	af00      	add	r7, sp, #0
 8001ffe:	4603      	mov	r3, r0
 8002000:	71fb      	strb	r3, [r7, #7]
	u8_t byResult = 0;
 8002002:	2300      	movs	r3, #0
 8002004:	73fb      	strb	r3, [r7, #15]
	switch(g_SensorSettings.byComInterface){
 8002006:	4b16      	ldr	r3, [pc, #88]	; (8002060 <readRegister+0x68>)
 8002008:	781b      	ldrb	r3, [r3, #0]
 800200a:	2b00      	cmp	r3, #0
 800200c:	d001      	beq.n	8002012 <readRegister+0x1a>
 800200e:	2b01      	cmp	r3, #1
			I2C1AddressDirection(g_SensorSettings.byI2CAddress << 1, I2C_Direction_Receiver);
			byResult = I2C1ReceiveNack();
			I2C1Stop();
			break;
		case SPI_MODE:
			break;
 8002010:	e020      	b.n	8002054 <readRegister+0x5c>
			I2C1Start();
 8002012:	f7ff f985 	bl	8001320 <I2C1Start>
			I2C1AddressDirection(g_SensorSettings.byI2CAddress << 1,I2C_Direction_Transmitter);
 8002016:	4b12      	ldr	r3, [pc, #72]	; (8002060 <readRegister+0x68>)
 8002018:	785b      	ldrb	r3, [r3, #1]
 800201a:	005b      	lsls	r3, r3, #1
 800201c:	b2db      	uxtb	r3, r3
 800201e:	2100      	movs	r1, #0
 8002020:	4618      	mov	r0, r3
 8002022:	f7ff f99b 	bl	800135c <I2C1AddressDirection>
			I2C1Transmit(byOffset);
 8002026:	79fb      	ldrb	r3, [r7, #7]
 8002028:	4618      	mov	r0, r3
 800202a:	f7ff f9c7 	bl	80013bc <I2C1Transmit>
			I2C1Stop();
 800202e:	f7ff f967 	bl	8001300 <I2C1Stop>
			I2C1Start();
 8002032:	f7ff f975 	bl	8001320 <I2C1Start>
			I2C1AddressDirection(g_SensorSettings.byI2CAddress << 1, I2C_Direction_Receiver);
 8002036:	4b0a      	ldr	r3, [pc, #40]	; (8002060 <readRegister+0x68>)
 8002038:	785b      	ldrb	r3, [r3, #1]
 800203a:	005b      	lsls	r3, r3, #1
 800203c:	b2db      	uxtb	r3, r3
 800203e:	2101      	movs	r1, #1
 8002040:	4618      	mov	r0, r3
 8002042:	f7ff f98b 	bl	800135c <I2C1AddressDirection>
			byResult = I2C1ReceiveNack();
 8002046:	f7ff f9ed 	bl	8001424 <I2C1ReceiveNack>
 800204a:	4603      	mov	r3, r0
 800204c:	73fb      	strb	r3, [r7, #15]
			I2C1Stop();
 800204e:	f7ff f957 	bl	8001300 <I2C1Stop>
			break;
 8002052:	bf00      	nop
		}
	return byResult;
 8002054:	7bfb      	ldrb	r3, [r7, #15]
}
 8002056:	4618      	mov	r0, r3
 8002058:	3710      	adds	r7, #16
 800205a:	46bd      	mov	sp, r7
 800205c:	bd80      	pop	{r7, pc}
 800205e:	bf00      	nop
 8002060:	20001348 	.word	0x20001348

08002064 <writeRegister>:
	u16_t byOutput = (i16_t)byBuffer[0] | (i16_t)(byBuffer[1] << 8);
	return byOutput;
}

static void_t writeRegister(u8_t byOffset, u8_t byDataToWrite)
{
 8002064:	b580      	push	{r7, lr}
 8002066:	b082      	sub	sp, #8
 8002068:	af00      	add	r7, sp, #0
 800206a:	4603      	mov	r3, r0
 800206c:	460a      	mov	r2, r1
 800206e:	71fb      	strb	r3, [r7, #7]
 8002070:	4613      	mov	r3, r2
 8002072:	71bb      	strb	r3, [r7, #6]
	switch(g_SensorSettings.byComInterface){
 8002074:	4b0f      	ldr	r3, [pc, #60]	; (80020b4 <writeRegister+0x50>)
 8002076:	781b      	ldrb	r3, [r3, #0]
 8002078:	2b00      	cmp	r3, #0
 800207a:	d001      	beq.n	8002080 <writeRegister+0x1c>
 800207c:	2b01      	cmp	r3, #1
			I2C1Transmit(byOffset);
			I2C1Transmit(byDataToWrite);
			I2C1Stop();
			break;
		case SPI_MODE:
			break;
 800207e:	e014      	b.n	80020aa <writeRegister+0x46>
			I2C1Start();
 8002080:	f7ff f94e 	bl	8001320 <I2C1Start>
			I2C1AddressDirection(g_SensorSettings.byI2CAddress << 1,I2C_Direction_Transmitter);
 8002084:	4b0b      	ldr	r3, [pc, #44]	; (80020b4 <writeRegister+0x50>)
 8002086:	785b      	ldrb	r3, [r3, #1]
 8002088:	005b      	lsls	r3, r3, #1
 800208a:	b2db      	uxtb	r3, r3
 800208c:	2100      	movs	r1, #0
 800208e:	4618      	mov	r0, r3
 8002090:	f7ff f964 	bl	800135c <I2C1AddressDirection>
			I2C1Transmit(byOffset);
 8002094:	79fb      	ldrb	r3, [r7, #7]
 8002096:	4618      	mov	r0, r3
 8002098:	f7ff f990 	bl	80013bc <I2C1Transmit>
			I2C1Transmit(byDataToWrite);
 800209c:	79bb      	ldrb	r3, [r7, #6]
 800209e:	4618      	mov	r0, r3
 80020a0:	f7ff f98c 	bl	80013bc <I2C1Transmit>
			I2C1Stop();
 80020a4:	f7ff f92c 	bl	8001300 <I2C1Stop>
			break;
 80020a8:	bf00      	nop
		}
}
 80020aa:	bf00      	nop
 80020ac:	3708      	adds	r7, #8
 80020ae:	46bd      	mov	sp, r7
 80020b0:	bd80      	pop	{r7, pc}
 80020b2:	bf00      	nop
 80020b4:	20001348 	.word	0x20001348

080020b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b086      	sub	sp, #24
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80020c0:	4a14      	ldr	r2, [pc, #80]	; (8002114 <_sbrk+0x5c>)
 80020c2:	4b15      	ldr	r3, [pc, #84]	; (8002118 <_sbrk+0x60>)
 80020c4:	1ad3      	subs	r3, r2, r3
 80020c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80020c8:	697b      	ldr	r3, [r7, #20]
 80020ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80020cc:	4b13      	ldr	r3, [pc, #76]	; (800211c <_sbrk+0x64>)
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d102      	bne.n	80020da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80020d4:	4b11      	ldr	r3, [pc, #68]	; (800211c <_sbrk+0x64>)
 80020d6:	4a12      	ldr	r2, [pc, #72]	; (8002120 <_sbrk+0x68>)
 80020d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80020da:	4b10      	ldr	r3, [pc, #64]	; (800211c <_sbrk+0x64>)
 80020dc:	681a      	ldr	r2, [r3, #0]
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	4413      	add	r3, r2
 80020e2:	693a      	ldr	r2, [r7, #16]
 80020e4:	429a      	cmp	r2, r3
 80020e6:	d207      	bcs.n	80020f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80020e8:	f003 fa04 	bl	80054f4 <__errno>
 80020ec:	4603      	mov	r3, r0
 80020ee:	220c      	movs	r2, #12
 80020f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80020f2:	f04f 33ff 	mov.w	r3, #4294967295
 80020f6:	e009      	b.n	800210c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80020f8:	4b08      	ldr	r3, [pc, #32]	; (800211c <_sbrk+0x64>)
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80020fe:	4b07      	ldr	r3, [pc, #28]	; (800211c <_sbrk+0x64>)
 8002100:	681a      	ldr	r2, [r3, #0]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	4413      	add	r3, r2
 8002106:	4a05      	ldr	r2, [pc, #20]	; (800211c <_sbrk+0x64>)
 8002108:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800210a:	68fb      	ldr	r3, [r7, #12]
}
 800210c:	4618      	mov	r0, r3
 800210e:	3718      	adds	r7, #24
 8002110:	46bd      	mov	sp, r7
 8002112:	bd80      	pop	{r7, pc}
 8002114:	20018000 	.word	0x20018000
 8002118:	00000400 	.word	0x00000400
 800211c:	200001a4 	.word	0x200001a4
 8002120:	200013a8 	.word	0x200013a8

08002124 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002124:	480d      	ldr	r0, [pc, #52]	; (800215c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002126:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002128:	f000 f826 	bl	8002178 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800212c:	480c      	ldr	r0, [pc, #48]	; (8002160 <LoopForever+0x6>)
  ldr r1, =_edata
 800212e:	490d      	ldr	r1, [pc, #52]	; (8002164 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002130:	4a0d      	ldr	r2, [pc, #52]	; (8002168 <LoopForever+0xe>)
  movs r3, #0
 8002132:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002134:	e002      	b.n	800213c <LoopCopyDataInit>

08002136 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002136:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002138:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800213a:	3304      	adds	r3, #4

0800213c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800213c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800213e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002140:	d3f9      	bcc.n	8002136 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002142:	4a0a      	ldr	r2, [pc, #40]	; (800216c <LoopForever+0x12>)
  ldr r4, =_ebss
 8002144:	4c0a      	ldr	r4, [pc, #40]	; (8002170 <LoopForever+0x16>)
  movs r3, #0
 8002146:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002148:	e001      	b.n	800214e <LoopFillZerobss>

0800214a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800214a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800214c:	3204      	adds	r2, #4

0800214e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800214e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002150:	d3fb      	bcc.n	800214a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002152:	f003 f9d5 	bl	8005500 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002156:	f7ff f83f 	bl	80011d8 <main>

0800215a <LoopForever>:

LoopForever:
    b LoopForever
 800215a:	e7fe      	b.n	800215a <LoopForever>
  ldr   r0, =_estack
 800215c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8002160:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002164:	20000090 	.word	0x20000090
  ldr r2, =_sidata
 8002168:	080066d8 	.word	0x080066d8
  ldr r2, =_sbss
 800216c:	20000090 	.word	0x20000090
  ldr r4, =_ebss
 8002170:	200013a4 	.word	0x200013a4

08002174 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002174:	e7fe      	b.n	8002174 <ADC_IRQHandler>
	...

08002178 <SystemInit>:
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
 800217c:	4b16      	ldr	r3, [pc, #88]	; (80021d8 <SystemInit+0x60>)
 800217e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002182:	4a15      	ldr	r2, [pc, #84]	; (80021d8 <SystemInit+0x60>)
 8002184:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002188:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800218c:	4b13      	ldr	r3, [pc, #76]	; (80021dc <SystemInit+0x64>)
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	4a12      	ldr	r2, [pc, #72]	; (80021dc <SystemInit+0x64>)
 8002192:	f043 0301 	orr.w	r3, r3, #1
 8002196:	6013      	str	r3, [r2, #0]
 8002198:	4b10      	ldr	r3, [pc, #64]	; (80021dc <SystemInit+0x64>)
 800219a:	2200      	movs	r2, #0
 800219c:	609a      	str	r2, [r3, #8]
 800219e:	4b0f      	ldr	r3, [pc, #60]	; (80021dc <SystemInit+0x64>)
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	4a0e      	ldr	r2, [pc, #56]	; (80021dc <SystemInit+0x64>)
 80021a4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80021a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80021ac:	6013      	str	r3, [r2, #0]
 80021ae:	4b0b      	ldr	r3, [pc, #44]	; (80021dc <SystemInit+0x64>)
 80021b0:	4a0b      	ldr	r2, [pc, #44]	; (80021e0 <SystemInit+0x68>)
 80021b2:	605a      	str	r2, [r3, #4]
 80021b4:	4b09      	ldr	r3, [pc, #36]	; (80021dc <SystemInit+0x64>)
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	4a08      	ldr	r2, [pc, #32]	; (80021dc <SystemInit+0x64>)
 80021ba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80021be:	6013      	str	r3, [r2, #0]
 80021c0:	4b06      	ldr	r3, [pc, #24]	; (80021dc <SystemInit+0x64>)
 80021c2:	2200      	movs	r2, #0
 80021c4:	60da      	str	r2, [r3, #12]
 80021c6:	f000 f889 	bl	80022dc <SetSysClock>
 80021ca:	4b03      	ldr	r3, [pc, #12]	; (80021d8 <SystemInit+0x60>)
 80021cc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80021d0:	609a      	str	r2, [r3, #8]
 80021d2:	bf00      	nop
 80021d4:	bd80      	pop	{r7, pc}
 80021d6:	bf00      	nop
 80021d8:	e000ed00 	.word	0xe000ed00
 80021dc:	40023800 	.word	0x40023800
 80021e0:	24003010 	.word	0x24003010

080021e4 <SystemCoreClockUpdate>:
 80021e4:	b480      	push	{r7}
 80021e6:	b087      	sub	sp, #28
 80021e8:	af00      	add	r7, sp, #0
 80021ea:	2300      	movs	r3, #0
 80021ec:	613b      	str	r3, [r7, #16]
 80021ee:	2300      	movs	r3, #0
 80021f0:	617b      	str	r3, [r7, #20]
 80021f2:	2302      	movs	r3, #2
 80021f4:	60fb      	str	r3, [r7, #12]
 80021f6:	2300      	movs	r3, #0
 80021f8:	60bb      	str	r3, [r7, #8]
 80021fa:	2302      	movs	r3, #2
 80021fc:	607b      	str	r3, [r7, #4]
 80021fe:	4b32      	ldr	r3, [pc, #200]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 8002200:	689b      	ldr	r3, [r3, #8]
 8002202:	f003 030c 	and.w	r3, r3, #12
 8002206:	613b      	str	r3, [r7, #16]
 8002208:	693b      	ldr	r3, [r7, #16]
 800220a:	2b04      	cmp	r3, #4
 800220c:	d007      	beq.n	800221e <SystemCoreClockUpdate+0x3a>
 800220e:	2b08      	cmp	r3, #8
 8002210:	d009      	beq.n	8002226 <SystemCoreClockUpdate+0x42>
 8002212:	2b00      	cmp	r3, #0
 8002214:	d13d      	bne.n	8002292 <SystemCoreClockUpdate+0xae>
 8002216:	4b2d      	ldr	r3, [pc, #180]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 8002218:	4a2d      	ldr	r2, [pc, #180]	; (80022d0 <SystemCoreClockUpdate+0xec>)
 800221a:	601a      	str	r2, [r3, #0]
 800221c:	e03d      	b.n	800229a <SystemCoreClockUpdate+0xb6>
 800221e:	4b2b      	ldr	r3, [pc, #172]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 8002220:	4a2c      	ldr	r2, [pc, #176]	; (80022d4 <SystemCoreClockUpdate+0xf0>)
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	e039      	b.n	800229a <SystemCoreClockUpdate+0xb6>
 8002226:	4b28      	ldr	r3, [pc, #160]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 8002228:	685b      	ldr	r3, [r3, #4]
 800222a:	0d9b      	lsrs	r3, r3, #22
 800222c:	f003 0301 	and.w	r3, r3, #1
 8002230:	60bb      	str	r3, [r7, #8]
 8002232:	4b25      	ldr	r3, [pc, #148]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 8002234:	685b      	ldr	r3, [r3, #4]
 8002236:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800223a:	607b      	str	r3, [r7, #4]
 800223c:	68bb      	ldr	r3, [r7, #8]
 800223e:	2b00      	cmp	r3, #0
 8002240:	d00c      	beq.n	800225c <SystemCoreClockUpdate+0x78>
 8002242:	4a24      	ldr	r2, [pc, #144]	; (80022d4 <SystemCoreClockUpdate+0xf0>)
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	fbb2 f3f3 	udiv	r3, r2, r3
 800224a:	4a1f      	ldr	r2, [pc, #124]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 800224c:	6852      	ldr	r2, [r2, #4]
 800224e:	0992      	lsrs	r2, r2, #6
 8002250:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002254:	fb02 f303 	mul.w	r3, r2, r3
 8002258:	617b      	str	r3, [r7, #20]
 800225a:	e00b      	b.n	8002274 <SystemCoreClockUpdate+0x90>
 800225c:	4a1c      	ldr	r2, [pc, #112]	; (80022d0 <SystemCoreClockUpdate+0xec>)
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	fbb2 f3f3 	udiv	r3, r2, r3
 8002264:	4a18      	ldr	r2, [pc, #96]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 8002266:	6852      	ldr	r2, [r2, #4]
 8002268:	0992      	lsrs	r2, r2, #6
 800226a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800226e:	fb02 f303 	mul.w	r3, r2, r3
 8002272:	617b      	str	r3, [r7, #20]
 8002274:	4b14      	ldr	r3, [pc, #80]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 8002276:	685b      	ldr	r3, [r3, #4]
 8002278:	0c1b      	lsrs	r3, r3, #16
 800227a:	f003 0303 	and.w	r3, r3, #3
 800227e:	3301      	adds	r3, #1
 8002280:	005b      	lsls	r3, r3, #1
 8002282:	60fb      	str	r3, [r7, #12]
 8002284:	697a      	ldr	r2, [r7, #20]
 8002286:	68fb      	ldr	r3, [r7, #12]
 8002288:	fbb2 f3f3 	udiv	r3, r2, r3
 800228c:	4a0f      	ldr	r2, [pc, #60]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 800228e:	6013      	str	r3, [r2, #0]
 8002290:	e003      	b.n	800229a <SystemCoreClockUpdate+0xb6>
 8002292:	4b0e      	ldr	r3, [pc, #56]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 8002294:	4a0e      	ldr	r2, [pc, #56]	; (80022d0 <SystemCoreClockUpdate+0xec>)
 8002296:	601a      	str	r2, [r3, #0]
 8002298:	bf00      	nop
 800229a:	4b0b      	ldr	r3, [pc, #44]	; (80022c8 <SystemCoreClockUpdate+0xe4>)
 800229c:	689b      	ldr	r3, [r3, #8]
 800229e:	091b      	lsrs	r3, r3, #4
 80022a0:	f003 030f 	and.w	r3, r3, #15
 80022a4:	4a0c      	ldr	r2, [pc, #48]	; (80022d8 <SystemCoreClockUpdate+0xf4>)
 80022a6:	5cd3      	ldrb	r3, [r2, r3]
 80022a8:	b2db      	uxtb	r3, r3
 80022aa:	613b      	str	r3, [r7, #16]
 80022ac:	4b07      	ldr	r3, [pc, #28]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	693b      	ldr	r3, [r7, #16]
 80022b2:	fa22 f303 	lsr.w	r3, r2, r3
 80022b6:	4a05      	ldr	r2, [pc, #20]	; (80022cc <SystemCoreClockUpdate+0xe8>)
 80022b8:	6013      	str	r3, [r2, #0]
 80022ba:	bf00      	nop
 80022bc:	371c      	adds	r7, #28
 80022be:	46bd      	mov	sp, r7
 80022c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	40023800 	.word	0x40023800
 80022cc:	20000004 	.word	0x20000004
 80022d0:	00f42400 	.word	0x00f42400
 80022d4:	017d7840 	.word	0x017d7840
 80022d8:	20000008 	.word	0x20000008

080022dc <SetSysClock>:
 80022dc:	b480      	push	{r7}
 80022de:	af00      	add	r7, sp, #0
 80022e0:	4b22      	ldr	r3, [pc, #136]	; (800236c <SetSysClock+0x90>)
 80022e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022e4:	4a21      	ldr	r2, [pc, #132]	; (800236c <SetSysClock+0x90>)
 80022e6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80022ea:	6413      	str	r3, [r2, #64]	; 0x40
 80022ec:	4b20      	ldr	r3, [pc, #128]	; (8002370 <SetSysClock+0x94>)
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	4a1f      	ldr	r2, [pc, #124]	; (8002370 <SetSysClock+0x94>)
 80022f2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80022f6:	6013      	str	r3, [r2, #0]
 80022f8:	4b1c      	ldr	r3, [pc, #112]	; (800236c <SetSysClock+0x90>)
 80022fa:	4a1c      	ldr	r2, [pc, #112]	; (800236c <SetSysClock+0x90>)
 80022fc:	689b      	ldr	r3, [r3, #8]
 80022fe:	6093      	str	r3, [r2, #8]
 8002300:	4b1a      	ldr	r3, [pc, #104]	; (800236c <SetSysClock+0x90>)
 8002302:	4a1a      	ldr	r2, [pc, #104]	; (800236c <SetSysClock+0x90>)
 8002304:	689b      	ldr	r3, [r3, #8]
 8002306:	6093      	str	r3, [r2, #8]
 8002308:	4b18      	ldr	r3, [pc, #96]	; (800236c <SetSysClock+0x90>)
 800230a:	689b      	ldr	r3, [r3, #8]
 800230c:	4a17      	ldr	r2, [pc, #92]	; (800236c <SetSysClock+0x90>)
 800230e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002312:	6093      	str	r3, [r2, #8]
 8002314:	4b15      	ldr	r3, [pc, #84]	; (800236c <SetSysClock+0x90>)
 8002316:	4a17      	ldr	r2, [pc, #92]	; (8002374 <SetSysClock+0x98>)
 8002318:	605a      	str	r2, [r3, #4]
 800231a:	4b14      	ldr	r3, [pc, #80]	; (800236c <SetSysClock+0x90>)
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	4a13      	ldr	r2, [pc, #76]	; (800236c <SetSysClock+0x90>)
 8002320:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002324:	6013      	str	r3, [r2, #0]
 8002326:	bf00      	nop
 8002328:	4b10      	ldr	r3, [pc, #64]	; (800236c <SetSysClock+0x90>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002330:	2b00      	cmp	r3, #0
 8002332:	d0f9      	beq.n	8002328 <SetSysClock+0x4c>
 8002334:	4b10      	ldr	r3, [pc, #64]	; (8002378 <SetSysClock+0x9c>)
 8002336:	f240 6202 	movw	r2, #1538	; 0x602
 800233a:	601a      	str	r2, [r3, #0]
 800233c:	4b0b      	ldr	r3, [pc, #44]	; (800236c <SetSysClock+0x90>)
 800233e:	689b      	ldr	r3, [r3, #8]
 8002340:	4a0a      	ldr	r2, [pc, #40]	; (800236c <SetSysClock+0x90>)
 8002342:	f023 0303 	bic.w	r3, r3, #3
 8002346:	6093      	str	r3, [r2, #8]
 8002348:	4b08      	ldr	r3, [pc, #32]	; (800236c <SetSysClock+0x90>)
 800234a:	689b      	ldr	r3, [r3, #8]
 800234c:	4a07      	ldr	r2, [pc, #28]	; (800236c <SetSysClock+0x90>)
 800234e:	f043 0302 	orr.w	r3, r3, #2
 8002352:	6093      	str	r3, [r2, #8]
 8002354:	bf00      	nop
 8002356:	4b05      	ldr	r3, [pc, #20]	; (800236c <SetSysClock+0x90>)
 8002358:	689b      	ldr	r3, [r3, #8]
 800235a:	f003 030c 	and.w	r3, r3, #12
 800235e:	2b08      	cmp	r3, #8
 8002360:	d1f9      	bne.n	8002356 <SetSysClock+0x7a>
 8002362:	bf00      	nop
 8002364:	46bd      	mov	sp, r7
 8002366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236a:	4770      	bx	lr
 800236c:	40023800 	.word	0x40023800
 8002370:	40007000 	.word	0x40007000
 8002374:	08015410 	.word	0x08015410
 8002378:	40023c00 	.word	0x40023c00

0800237c <GPIO_Init>:
 800237c:	b480      	push	{r7}
 800237e:	b087      	sub	sp, #28
 8002380:	af00      	add	r7, sp, #0
 8002382:	6078      	str	r0, [r7, #4]
 8002384:	6039      	str	r1, [r7, #0]
 8002386:	2300      	movs	r3, #0
 8002388:	617b      	str	r3, [r7, #20]
 800238a:	2300      	movs	r3, #0
 800238c:	613b      	str	r3, [r7, #16]
 800238e:	2300      	movs	r3, #0
 8002390:	60fb      	str	r3, [r7, #12]
 8002392:	2300      	movs	r3, #0
 8002394:	617b      	str	r3, [r7, #20]
 8002396:	e076      	b.n	8002486 <GPIO_Init+0x10a>
 8002398:	2201      	movs	r2, #1
 800239a:	697b      	ldr	r3, [r7, #20]
 800239c:	fa02 f303 	lsl.w	r3, r2, r3
 80023a0:	613b      	str	r3, [r7, #16]
 80023a2:	683b      	ldr	r3, [r7, #0]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	693a      	ldr	r2, [r7, #16]
 80023a8:	4013      	ands	r3, r2
 80023aa:	60fb      	str	r3, [r7, #12]
 80023ac:	68fa      	ldr	r2, [r7, #12]
 80023ae:	693b      	ldr	r3, [r7, #16]
 80023b0:	429a      	cmp	r2, r3
 80023b2:	d165      	bne.n	8002480 <GPIO_Init+0x104>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681a      	ldr	r2, [r3, #0]
 80023b8:	697b      	ldr	r3, [r7, #20]
 80023ba:	005b      	lsls	r3, r3, #1
 80023bc:	2103      	movs	r1, #3
 80023be:	fa01 f303 	lsl.w	r3, r1, r3
 80023c2:	43db      	mvns	r3, r3
 80023c4:	401a      	ands	r2, r3
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	601a      	str	r2, [r3, #0]
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	681a      	ldr	r2, [r3, #0]
 80023ce:	683b      	ldr	r3, [r7, #0]
 80023d0:	791b      	ldrb	r3, [r3, #4]
 80023d2:	4619      	mov	r1, r3
 80023d4:	697b      	ldr	r3, [r7, #20]
 80023d6:	005b      	lsls	r3, r3, #1
 80023d8:	fa01 f303 	lsl.w	r3, r1, r3
 80023dc:	431a      	orrs	r2, r3
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	601a      	str	r2, [r3, #0]
 80023e2:	683b      	ldr	r3, [r7, #0]
 80023e4:	791b      	ldrb	r3, [r3, #4]
 80023e6:	2b01      	cmp	r3, #1
 80023e8:	d003      	beq.n	80023f2 <GPIO_Init+0x76>
 80023ea:	683b      	ldr	r3, [r7, #0]
 80023ec:	791b      	ldrb	r3, [r3, #4]
 80023ee:	2b02      	cmp	r3, #2
 80023f0:	d12e      	bne.n	8002450 <GPIO_Init+0xd4>
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	689a      	ldr	r2, [r3, #8]
 80023f6:	697b      	ldr	r3, [r7, #20]
 80023f8:	005b      	lsls	r3, r3, #1
 80023fa:	2103      	movs	r1, #3
 80023fc:	fa01 f303 	lsl.w	r3, r1, r3
 8002400:	43db      	mvns	r3, r3
 8002402:	401a      	ands	r2, r3
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	609a      	str	r2, [r3, #8]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	689a      	ldr	r2, [r3, #8]
 800240c:	683b      	ldr	r3, [r7, #0]
 800240e:	795b      	ldrb	r3, [r3, #5]
 8002410:	4619      	mov	r1, r3
 8002412:	697b      	ldr	r3, [r7, #20]
 8002414:	005b      	lsls	r3, r3, #1
 8002416:	fa01 f303 	lsl.w	r3, r1, r3
 800241a:	431a      	orrs	r2, r3
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	609a      	str	r2, [r3, #8]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	685a      	ldr	r2, [r3, #4]
 8002424:	697b      	ldr	r3, [r7, #20]
 8002426:	b29b      	uxth	r3, r3
 8002428:	4619      	mov	r1, r3
 800242a:	2301      	movs	r3, #1
 800242c:	408b      	lsls	r3, r1
 800242e:	43db      	mvns	r3, r3
 8002430:	401a      	ands	r2, r3
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	605a      	str	r2, [r3, #4]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	685b      	ldr	r3, [r3, #4]
 800243a:	683a      	ldr	r2, [r7, #0]
 800243c:	7992      	ldrb	r2, [r2, #6]
 800243e:	4611      	mov	r1, r2
 8002440:	697a      	ldr	r2, [r7, #20]
 8002442:	b292      	uxth	r2, r2
 8002444:	fa01 f202 	lsl.w	r2, r1, r2
 8002448:	b292      	uxth	r2, r2
 800244a:	431a      	orrs	r2, r3
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	605a      	str	r2, [r3, #4]
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	68da      	ldr	r2, [r3, #12]
 8002454:	697b      	ldr	r3, [r7, #20]
 8002456:	b29b      	uxth	r3, r3
 8002458:	005b      	lsls	r3, r3, #1
 800245a:	2103      	movs	r1, #3
 800245c:	fa01 f303 	lsl.w	r3, r1, r3
 8002460:	43db      	mvns	r3, r3
 8002462:	401a      	ands	r2, r3
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	60da      	str	r2, [r3, #12]
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	68da      	ldr	r2, [r3, #12]
 800246c:	683b      	ldr	r3, [r7, #0]
 800246e:	79db      	ldrb	r3, [r3, #7]
 8002470:	4619      	mov	r1, r3
 8002472:	697b      	ldr	r3, [r7, #20]
 8002474:	005b      	lsls	r3, r3, #1
 8002476:	fa01 f303 	lsl.w	r3, r1, r3
 800247a:	431a      	orrs	r2, r3
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	60da      	str	r2, [r3, #12]
 8002480:	697b      	ldr	r3, [r7, #20]
 8002482:	3301      	adds	r3, #1
 8002484:	617b      	str	r3, [r7, #20]
 8002486:	697b      	ldr	r3, [r7, #20]
 8002488:	2b0f      	cmp	r3, #15
 800248a:	d985      	bls.n	8002398 <GPIO_Init+0x1c>
 800248c:	bf00      	nop
 800248e:	371c      	adds	r7, #28
 8002490:	46bd      	mov	sp, r7
 8002492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002496:	4770      	bx	lr

08002498 <GPIO_WriteBit>:
 8002498:	b480      	push	{r7}
 800249a:	b083      	sub	sp, #12
 800249c:	af00      	add	r7, sp, #0
 800249e:	6078      	str	r0, [r7, #4]
 80024a0:	460b      	mov	r3, r1
 80024a2:	807b      	strh	r3, [r7, #2]
 80024a4:	4613      	mov	r3, r2
 80024a6:	707b      	strb	r3, [r7, #1]
 80024a8:	787b      	ldrb	r3, [r7, #1]
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d003      	beq.n	80024b6 <GPIO_WriteBit+0x1e>
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	887a      	ldrh	r2, [r7, #2]
 80024b2:	831a      	strh	r2, [r3, #24]
 80024b4:	e002      	b.n	80024bc <GPIO_WriteBit+0x24>
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	887a      	ldrh	r2, [r7, #2]
 80024ba:	835a      	strh	r2, [r3, #26]
 80024bc:	bf00      	nop
 80024be:	370c      	adds	r7, #12
 80024c0:	46bd      	mov	sp, r7
 80024c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c6:	4770      	bx	lr

080024c8 <GPIO_PinAFConfig>:
 80024c8:	b480      	push	{r7}
 80024ca:	b085      	sub	sp, #20
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
 80024d0:	460b      	mov	r3, r1
 80024d2:	807b      	strh	r3, [r7, #2]
 80024d4:	4613      	mov	r3, r2
 80024d6:	707b      	strb	r3, [r7, #1]
 80024d8:	2300      	movs	r3, #0
 80024da:	60fb      	str	r3, [r7, #12]
 80024dc:	2300      	movs	r3, #0
 80024de:	60bb      	str	r3, [r7, #8]
 80024e0:	787a      	ldrb	r2, [r7, #1]
 80024e2:	887b      	ldrh	r3, [r7, #2]
 80024e4:	f003 0307 	and.w	r3, r3, #7
 80024e8:	009b      	lsls	r3, r3, #2
 80024ea:	fa02 f303 	lsl.w	r3, r2, r3
 80024ee:	60fb      	str	r3, [r7, #12]
 80024f0:	887b      	ldrh	r3, [r7, #2]
 80024f2:	08db      	lsrs	r3, r3, #3
 80024f4:	b29b      	uxth	r3, r3
 80024f6:	461a      	mov	r2, r3
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	3208      	adds	r2, #8
 80024fc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002500:	887b      	ldrh	r3, [r7, #2]
 8002502:	f003 0307 	and.w	r3, r3, #7
 8002506:	009b      	lsls	r3, r3, #2
 8002508:	210f      	movs	r1, #15
 800250a:	fa01 f303 	lsl.w	r3, r1, r3
 800250e:	43db      	mvns	r3, r3
 8002510:	8879      	ldrh	r1, [r7, #2]
 8002512:	08c9      	lsrs	r1, r1, #3
 8002514:	b289      	uxth	r1, r1
 8002516:	4608      	mov	r0, r1
 8002518:	ea02 0103 	and.w	r1, r2, r3
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	f100 0208 	add.w	r2, r0, #8
 8002522:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002526:	887b      	ldrh	r3, [r7, #2]
 8002528:	08db      	lsrs	r3, r3, #3
 800252a:	b29b      	uxth	r3, r3
 800252c:	461a      	mov	r2, r3
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	3208      	adds	r2, #8
 8002532:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002536:	68fa      	ldr	r2, [r7, #12]
 8002538:	4313      	orrs	r3, r2
 800253a:	60bb      	str	r3, [r7, #8]
 800253c:	887b      	ldrh	r3, [r7, #2]
 800253e:	08db      	lsrs	r3, r3, #3
 8002540:	b29b      	uxth	r3, r3
 8002542:	461a      	mov	r2, r3
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	3208      	adds	r2, #8
 8002548:	68b9      	ldr	r1, [r7, #8]
 800254a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800254e:	bf00      	nop
 8002550:	3714      	adds	r7, #20
 8002552:	46bd      	mov	sp, r7
 8002554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002558:	4770      	bx	lr
	...

0800255c <I2C_Init>:
 800255c:	b580      	push	{r7, lr}
 800255e:	b08a      	sub	sp, #40	; 0x28
 8002560:	af00      	add	r7, sp, #0
 8002562:	6078      	str	r0, [r7, #4]
 8002564:	6039      	str	r1, [r7, #0]
 8002566:	2300      	movs	r3, #0
 8002568:	84fb      	strh	r3, [r7, #38]	; 0x26
 800256a:	2300      	movs	r3, #0
 800256c:	847b      	strh	r3, [r7, #34]	; 0x22
 800256e:	2304      	movs	r3, #4
 8002570:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002572:	4b57      	ldr	r3, [pc, #348]	; (80026d0 <I2C_Init+0x174>)
 8002574:	61fb      	str	r3, [r7, #28]
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	889b      	ldrh	r3, [r3, #4]
 800257a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800257c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800257e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002582:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002584:	f107 030c 	add.w	r3, r7, #12
 8002588:	4618      	mov	r0, r3
 800258a:	f000 f9df 	bl	800294c <RCC_GetClocksFreq>
 800258e:	697b      	ldr	r3, [r7, #20]
 8002590:	61fb      	str	r3, [r7, #28]
 8002592:	69fb      	ldr	r3, [r7, #28]
 8002594:	4a4f      	ldr	r2, [pc, #316]	; (80026d4 <I2C_Init+0x178>)
 8002596:	fba2 2303 	umull	r2, r3, r2, r3
 800259a:	0c9b      	lsrs	r3, r3, #18
 800259c:	847b      	strh	r3, [r7, #34]	; 0x22
 800259e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80025a0:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80025a2:	4313      	orrs	r3, r2
 80025a4:	84fb      	strh	r3, [r7, #38]	; 0x26
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80025aa:	809a      	strh	r2, [r3, #4]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	881b      	ldrh	r3, [r3, #0]
 80025b0:	b29b      	uxth	r3, r3
 80025b2:	f023 0301 	bic.w	r3, r3, #1
 80025b6:	b29a      	uxth	r2, r3
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	801a      	strh	r2, [r3, #0]
 80025bc:	2300      	movs	r3, #0
 80025be:	84fb      	strh	r3, [r7, #38]	; 0x26
 80025c0:	683b      	ldr	r3, [r7, #0]
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	4a44      	ldr	r2, [pc, #272]	; (80026d8 <I2C_Init+0x17c>)
 80025c6:	4293      	cmp	r3, r2
 80025c8:	d815      	bhi.n	80025f6 <I2C_Init+0x9a>
 80025ca:	683b      	ldr	r3, [r7, #0]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	005b      	lsls	r3, r3, #1
 80025d0:	69fa      	ldr	r2, [r7, #28]
 80025d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80025d6:	84bb      	strh	r3, [r7, #36]	; 0x24
 80025d8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80025da:	2b03      	cmp	r3, #3
 80025dc:	d801      	bhi.n	80025e2 <I2C_Init+0x86>
 80025de:	2304      	movs	r3, #4
 80025e0:	84bb      	strh	r3, [r7, #36]	; 0x24
 80025e2:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80025e4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80025e6:	4313      	orrs	r3, r2
 80025e8:	84fb      	strh	r3, [r7, #38]	; 0x26
 80025ea:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80025ec:	3301      	adds	r3, #1
 80025ee:	b29a      	uxth	r2, r3
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	841a      	strh	r2, [r3, #32]
 80025f4:	e040      	b.n	8002678 <I2C_Init+0x11c>
 80025f6:	683b      	ldr	r3, [r7, #0]
 80025f8:	88db      	ldrh	r3, [r3, #6]
 80025fa:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 80025fe:	4293      	cmp	r3, r2
 8002600:	d109      	bne.n	8002616 <I2C_Init+0xba>
 8002602:	683b      	ldr	r3, [r7, #0]
 8002604:	681a      	ldr	r2, [r3, #0]
 8002606:	4613      	mov	r3, r2
 8002608:	005b      	lsls	r3, r3, #1
 800260a:	4413      	add	r3, r2
 800260c:	69fa      	ldr	r2, [r7, #28]
 800260e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002612:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002614:	e00e      	b.n	8002634 <I2C_Init+0xd8>
 8002616:	683b      	ldr	r3, [r7, #0]
 8002618:	681a      	ldr	r2, [r3, #0]
 800261a:	4613      	mov	r3, r2
 800261c:	009b      	lsls	r3, r3, #2
 800261e:	4413      	add	r3, r2
 8002620:	009a      	lsls	r2, r3, #2
 8002622:	4413      	add	r3, r2
 8002624:	69fa      	ldr	r2, [r7, #28]
 8002626:	fbb2 f3f3 	udiv	r3, r2, r3
 800262a:	84bb      	strh	r3, [r7, #36]	; 0x24
 800262c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800262e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002632:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002634:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002636:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800263a:	2b00      	cmp	r3, #0
 800263c:	d103      	bne.n	8002646 <I2C_Init+0xea>
 800263e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002640:	f043 0301 	orr.w	r3, r3, #1
 8002644:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002646:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8002648:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800264a:	4313      	orrs	r3, r2
 800264c:	b29b      	uxth	r3, r3
 800264e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002652:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002656:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002658:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800265a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800265e:	fb02 f303 	mul.w	r3, r2, r3
 8002662:	4a1e      	ldr	r2, [pc, #120]	; (80026dc <I2C_Init+0x180>)
 8002664:	fb82 1203 	smull	r1, r2, r2, r3
 8002668:	1192      	asrs	r2, r2, #6
 800266a:	17db      	asrs	r3, r3, #31
 800266c:	1ad3      	subs	r3, r2, r3
 800266e:	b29b      	uxth	r3, r3
 8002670:	3301      	adds	r3, #1
 8002672:	b29a      	uxth	r2, r3
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	841a      	strh	r2, [r3, #32]
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800267c:	839a      	strh	r2, [r3, #28]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	881b      	ldrh	r3, [r3, #0]
 8002682:	b29b      	uxth	r3, r3
 8002684:	f043 0301 	orr.w	r3, r3, #1
 8002688:	b29a      	uxth	r2, r3
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	801a      	strh	r2, [r3, #0]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	881b      	ldrh	r3, [r3, #0]
 8002692:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002694:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002696:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 800269a:	f023 0302 	bic.w	r3, r3, #2
 800269e:	84fb      	strh	r3, [r7, #38]	; 0x26
 80026a0:	683b      	ldr	r3, [r7, #0]
 80026a2:	889a      	ldrh	r2, [r3, #4]
 80026a4:	683b      	ldr	r3, [r7, #0]
 80026a6:	895b      	ldrh	r3, [r3, #10]
 80026a8:	4313      	orrs	r3, r2
 80026aa:	b29a      	uxth	r2, r3
 80026ac:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80026ae:	4313      	orrs	r3, r2
 80026b0:	84fb      	strh	r3, [r7, #38]	; 0x26
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80026b6:	801a      	strh	r2, [r3, #0]
 80026b8:	683b      	ldr	r3, [r7, #0]
 80026ba:	899a      	ldrh	r2, [r3, #12]
 80026bc:	683b      	ldr	r3, [r7, #0]
 80026be:	891b      	ldrh	r3, [r3, #8]
 80026c0:	4313      	orrs	r3, r2
 80026c2:	b29a      	uxth	r2, r3
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	811a      	strh	r2, [r3, #8]
 80026c8:	bf00      	nop
 80026ca:	3728      	adds	r7, #40	; 0x28
 80026cc:	46bd      	mov	sp, r7
 80026ce:	bd80      	pop	{r7, pc}
 80026d0:	007a1200 	.word	0x007a1200
 80026d4:	431bde83 	.word	0x431bde83
 80026d8:	000186a0 	.word	0x000186a0
 80026dc:	10624dd3 	.word	0x10624dd3

080026e0 <I2C_Cmd>:
 80026e0:	b480      	push	{r7}
 80026e2:	b083      	sub	sp, #12
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	6078      	str	r0, [r7, #4]
 80026e8:	460b      	mov	r3, r1
 80026ea:	70fb      	strb	r3, [r7, #3]
 80026ec:	78fb      	ldrb	r3, [r7, #3]
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d008      	beq.n	8002704 <I2C_Cmd+0x24>
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	881b      	ldrh	r3, [r3, #0]
 80026f6:	b29b      	uxth	r3, r3
 80026f8:	f043 0301 	orr.w	r3, r3, #1
 80026fc:	b29a      	uxth	r2, r3
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	801a      	strh	r2, [r3, #0]
 8002702:	e007      	b.n	8002714 <I2C_Cmd+0x34>
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	881b      	ldrh	r3, [r3, #0]
 8002708:	b29b      	uxth	r3, r3
 800270a:	f023 0301 	bic.w	r3, r3, #1
 800270e:	b29a      	uxth	r2, r3
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	801a      	strh	r2, [r3, #0]
 8002714:	bf00      	nop
 8002716:	370c      	adds	r7, #12
 8002718:	46bd      	mov	sp, r7
 800271a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800271e:	4770      	bx	lr

08002720 <I2C_GenerateSTART>:
 8002720:	b480      	push	{r7}
 8002722:	b083      	sub	sp, #12
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
 8002728:	460b      	mov	r3, r1
 800272a:	70fb      	strb	r3, [r7, #3]
 800272c:	78fb      	ldrb	r3, [r7, #3]
 800272e:	2b00      	cmp	r3, #0
 8002730:	d008      	beq.n	8002744 <I2C_GenerateSTART+0x24>
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	881b      	ldrh	r3, [r3, #0]
 8002736:	b29b      	uxth	r3, r3
 8002738:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800273c:	b29a      	uxth	r2, r3
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	801a      	strh	r2, [r3, #0]
 8002742:	e007      	b.n	8002754 <I2C_GenerateSTART+0x34>
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	881b      	ldrh	r3, [r3, #0]
 8002748:	b29b      	uxth	r3, r3
 800274a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800274e:	b29a      	uxth	r2, r3
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	801a      	strh	r2, [r3, #0]
 8002754:	bf00      	nop
 8002756:	370c      	adds	r7, #12
 8002758:	46bd      	mov	sp, r7
 800275a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800275e:	4770      	bx	lr

08002760 <I2C_GenerateSTOP>:
 8002760:	b480      	push	{r7}
 8002762:	b083      	sub	sp, #12
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	460b      	mov	r3, r1
 800276a:	70fb      	strb	r3, [r7, #3]
 800276c:	78fb      	ldrb	r3, [r7, #3]
 800276e:	2b00      	cmp	r3, #0
 8002770:	d008      	beq.n	8002784 <I2C_GenerateSTOP+0x24>
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	881b      	ldrh	r3, [r3, #0]
 8002776:	b29b      	uxth	r3, r3
 8002778:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800277c:	b29a      	uxth	r2, r3
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	801a      	strh	r2, [r3, #0]
 8002782:	e007      	b.n	8002794 <I2C_GenerateSTOP+0x34>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	881b      	ldrh	r3, [r3, #0]
 8002788:	b29b      	uxth	r3, r3
 800278a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800278e:	b29a      	uxth	r2, r3
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	801a      	strh	r2, [r3, #0]
 8002794:	bf00      	nop
 8002796:	370c      	adds	r7, #12
 8002798:	46bd      	mov	sp, r7
 800279a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800279e:	4770      	bx	lr

080027a0 <I2C_Send7bitAddress>:
 80027a0:	b480      	push	{r7}
 80027a2:	b083      	sub	sp, #12
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	6078      	str	r0, [r7, #4]
 80027a8:	460b      	mov	r3, r1
 80027aa:	70fb      	strb	r3, [r7, #3]
 80027ac:	4613      	mov	r3, r2
 80027ae:	70bb      	strb	r3, [r7, #2]
 80027b0:	78bb      	ldrb	r3, [r7, #2]
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d004      	beq.n	80027c0 <I2C_Send7bitAddress+0x20>
 80027b6:	78fb      	ldrb	r3, [r7, #3]
 80027b8:	f043 0301 	orr.w	r3, r3, #1
 80027bc:	70fb      	strb	r3, [r7, #3]
 80027be:	e003      	b.n	80027c8 <I2C_Send7bitAddress+0x28>
 80027c0:	78fb      	ldrb	r3, [r7, #3]
 80027c2:	f023 0301 	bic.w	r3, r3, #1
 80027c6:	70fb      	strb	r3, [r7, #3]
 80027c8:	78fb      	ldrb	r3, [r7, #3]
 80027ca:	b29a      	uxth	r2, r3
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	821a      	strh	r2, [r3, #16]
 80027d0:	bf00      	nop
 80027d2:	370c      	adds	r7, #12
 80027d4:	46bd      	mov	sp, r7
 80027d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027da:	4770      	bx	lr

080027dc <I2C_AcknowledgeConfig>:
 80027dc:	b480      	push	{r7}
 80027de:	b083      	sub	sp, #12
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	6078      	str	r0, [r7, #4]
 80027e4:	460b      	mov	r3, r1
 80027e6:	70fb      	strb	r3, [r7, #3]
 80027e8:	78fb      	ldrb	r3, [r7, #3]
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d008      	beq.n	8002800 <I2C_AcknowledgeConfig+0x24>
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	881b      	ldrh	r3, [r3, #0]
 80027f2:	b29b      	uxth	r3, r3
 80027f4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80027f8:	b29a      	uxth	r2, r3
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	801a      	strh	r2, [r3, #0]
 80027fe:	e007      	b.n	8002810 <I2C_AcknowledgeConfig+0x34>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	881b      	ldrh	r3, [r3, #0]
 8002804:	b29b      	uxth	r3, r3
 8002806:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800280a:	b29a      	uxth	r2, r3
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	801a      	strh	r2, [r3, #0]
 8002810:	bf00      	nop
 8002812:	370c      	adds	r7, #12
 8002814:	46bd      	mov	sp, r7
 8002816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800281a:	4770      	bx	lr

0800281c <I2C_SendData>:
 800281c:	b480      	push	{r7}
 800281e:	b083      	sub	sp, #12
 8002820:	af00      	add	r7, sp, #0
 8002822:	6078      	str	r0, [r7, #4]
 8002824:	460b      	mov	r3, r1
 8002826:	70fb      	strb	r3, [r7, #3]
 8002828:	78fb      	ldrb	r3, [r7, #3]
 800282a:	b29a      	uxth	r2, r3
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	821a      	strh	r2, [r3, #16]
 8002830:	bf00      	nop
 8002832:	370c      	adds	r7, #12
 8002834:	46bd      	mov	sp, r7
 8002836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800283a:	4770      	bx	lr

0800283c <I2C_ReceiveData>:
 800283c:	b480      	push	{r7}
 800283e:	b083      	sub	sp, #12
 8002840:	af00      	add	r7, sp, #0
 8002842:	6078      	str	r0, [r7, #4]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	8a1b      	ldrh	r3, [r3, #16]
 8002848:	b29b      	uxth	r3, r3
 800284a:	b2db      	uxtb	r3, r3
 800284c:	4618      	mov	r0, r3
 800284e:	370c      	adds	r7, #12
 8002850:	46bd      	mov	sp, r7
 8002852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002856:	4770      	bx	lr

08002858 <I2C_CheckEvent>:
 8002858:	b480      	push	{r7}
 800285a:	b087      	sub	sp, #28
 800285c:	af00      	add	r7, sp, #0
 800285e:	6078      	str	r0, [r7, #4]
 8002860:	6039      	str	r1, [r7, #0]
 8002862:	2300      	movs	r3, #0
 8002864:	613b      	str	r3, [r7, #16]
 8002866:	2300      	movs	r3, #0
 8002868:	60fb      	str	r3, [r7, #12]
 800286a:	2300      	movs	r3, #0
 800286c:	60bb      	str	r3, [r7, #8]
 800286e:	2300      	movs	r3, #0
 8002870:	75fb      	strb	r3, [r7, #23]
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	8a9b      	ldrh	r3, [r3, #20]
 8002876:	b29b      	uxth	r3, r3
 8002878:	60fb      	str	r3, [r7, #12]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	8b1b      	ldrh	r3, [r3, #24]
 800287e:	b29b      	uxth	r3, r3
 8002880:	60bb      	str	r3, [r7, #8]
 8002882:	68bb      	ldr	r3, [r7, #8]
 8002884:	041b      	lsls	r3, r3, #16
 8002886:	60bb      	str	r3, [r7, #8]
 8002888:	68fa      	ldr	r2, [r7, #12]
 800288a:	68bb      	ldr	r3, [r7, #8]
 800288c:	4313      	orrs	r3, r2
 800288e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002892:	613b      	str	r3, [r7, #16]
 8002894:	693a      	ldr	r2, [r7, #16]
 8002896:	683b      	ldr	r3, [r7, #0]
 8002898:	4013      	ands	r3, r2
 800289a:	683a      	ldr	r2, [r7, #0]
 800289c:	429a      	cmp	r2, r3
 800289e:	d102      	bne.n	80028a6 <I2C_CheckEvent+0x4e>
 80028a0:	2301      	movs	r3, #1
 80028a2:	75fb      	strb	r3, [r7, #23]
 80028a4:	e001      	b.n	80028aa <I2C_CheckEvent+0x52>
 80028a6:	2300      	movs	r3, #0
 80028a8:	75fb      	strb	r3, [r7, #23]
 80028aa:	7dfb      	ldrb	r3, [r7, #23]
 80028ac:	4618      	mov	r0, r3
 80028ae:	371c      	adds	r7, #28
 80028b0:	46bd      	mov	sp, r7
 80028b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028b6:	4770      	bx	lr

080028b8 <I2C_GetFlagStatus>:
 80028b8:	b480      	push	{r7}
 80028ba:	b087      	sub	sp, #28
 80028bc:	af00      	add	r7, sp, #0
 80028be:	6078      	str	r0, [r7, #4]
 80028c0:	6039      	str	r1, [r7, #0]
 80028c2:	2300      	movs	r3, #0
 80028c4:	75fb      	strb	r3, [r7, #23]
 80028c6:	2300      	movs	r3, #0
 80028c8:	613b      	str	r3, [r7, #16]
 80028ca:	2300      	movs	r3, #0
 80028cc:	60fb      	str	r3, [r7, #12]
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	60fb      	str	r3, [r7, #12]
 80028d2:	683b      	ldr	r3, [r7, #0]
 80028d4:	0f1b      	lsrs	r3, r3, #28
 80028d6:	613b      	str	r3, [r7, #16]
 80028d8:	683b      	ldr	r3, [r7, #0]
 80028da:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80028de:	603b      	str	r3, [r7, #0]
 80028e0:	693b      	ldr	r3, [r7, #16]
 80028e2:	2b00      	cmp	r3, #0
 80028e4:	d003      	beq.n	80028ee <I2C_GetFlagStatus+0x36>
 80028e6:	68fb      	ldr	r3, [r7, #12]
 80028e8:	3314      	adds	r3, #20
 80028ea:	60fb      	str	r3, [r7, #12]
 80028ec:	e005      	b.n	80028fa <I2C_GetFlagStatus+0x42>
 80028ee:	683b      	ldr	r3, [r7, #0]
 80028f0:	0c1b      	lsrs	r3, r3, #16
 80028f2:	603b      	str	r3, [r7, #0]
 80028f4:	68fb      	ldr	r3, [r7, #12]
 80028f6:	3318      	adds	r3, #24
 80028f8:	60fb      	str	r3, [r7, #12]
 80028fa:	68fb      	ldr	r3, [r7, #12]
 80028fc:	681a      	ldr	r2, [r3, #0]
 80028fe:	683b      	ldr	r3, [r7, #0]
 8002900:	4013      	ands	r3, r2
 8002902:	2b00      	cmp	r3, #0
 8002904:	d002      	beq.n	800290c <I2C_GetFlagStatus+0x54>
 8002906:	2301      	movs	r3, #1
 8002908:	75fb      	strb	r3, [r7, #23]
 800290a:	e001      	b.n	8002910 <I2C_GetFlagStatus+0x58>
 800290c:	2300      	movs	r3, #0
 800290e:	75fb      	strb	r3, [r7, #23]
 8002910:	7dfb      	ldrb	r3, [r7, #23]
 8002912:	4618      	mov	r0, r3
 8002914:	371c      	adds	r7, #28
 8002916:	46bd      	mov	sp, r7
 8002918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291c:	4770      	bx	lr

0800291e <I2C_ClearFlag>:
 800291e:	b480      	push	{r7}
 8002920:	b085      	sub	sp, #20
 8002922:	af00      	add	r7, sp, #0
 8002924:	6078      	str	r0, [r7, #4]
 8002926:	6039      	str	r1, [r7, #0]
 8002928:	2300      	movs	r3, #0
 800292a:	60fb      	str	r3, [r7, #12]
 800292c:	683b      	ldr	r3, [r7, #0]
 800292e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002932:	60fb      	str	r3, [r7, #12]
 8002934:	68fb      	ldr	r3, [r7, #12]
 8002936:	b29b      	uxth	r3, r3
 8002938:	43db      	mvns	r3, r3
 800293a:	b29a      	uxth	r2, r3
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	829a      	strh	r2, [r3, #20]
 8002940:	bf00      	nop
 8002942:	3714      	adds	r7, #20
 8002944:	46bd      	mov	sp, r7
 8002946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800294a:	4770      	bx	lr

0800294c <RCC_GetClocksFreq>:
 800294c:	b480      	push	{r7}
 800294e:	b089      	sub	sp, #36	; 0x24
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	2300      	movs	r3, #0
 8002956:	61bb      	str	r3, [r7, #24]
 8002958:	2300      	movs	r3, #0
 800295a:	617b      	str	r3, [r7, #20]
 800295c:	2300      	movs	r3, #0
 800295e:	61fb      	str	r3, [r7, #28]
 8002960:	2302      	movs	r3, #2
 8002962:	613b      	str	r3, [r7, #16]
 8002964:	2300      	movs	r3, #0
 8002966:	60fb      	str	r3, [r7, #12]
 8002968:	2302      	movs	r3, #2
 800296a:	60bb      	str	r3, [r7, #8]
 800296c:	4b47      	ldr	r3, [pc, #284]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 800296e:	689b      	ldr	r3, [r3, #8]
 8002970:	f003 030c 	and.w	r3, r3, #12
 8002974:	61bb      	str	r3, [r7, #24]
 8002976:	69bb      	ldr	r3, [r7, #24]
 8002978:	2b04      	cmp	r3, #4
 800297a:	d007      	beq.n	800298c <RCC_GetClocksFreq+0x40>
 800297c:	2b08      	cmp	r3, #8
 800297e:	d009      	beq.n	8002994 <RCC_GetClocksFreq+0x48>
 8002980:	2b00      	cmp	r3, #0
 8002982:	d13d      	bne.n	8002a00 <RCC_GetClocksFreq+0xb4>
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	4a42      	ldr	r2, [pc, #264]	; (8002a90 <RCC_GetClocksFreq+0x144>)
 8002988:	601a      	str	r2, [r3, #0]
 800298a:	e03d      	b.n	8002a08 <RCC_GetClocksFreq+0xbc>
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	4a41      	ldr	r2, [pc, #260]	; (8002a94 <RCC_GetClocksFreq+0x148>)
 8002990:	601a      	str	r2, [r3, #0]
 8002992:	e039      	b.n	8002a08 <RCC_GetClocksFreq+0xbc>
 8002994:	4b3d      	ldr	r3, [pc, #244]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 8002996:	685b      	ldr	r3, [r3, #4]
 8002998:	0d9b      	lsrs	r3, r3, #22
 800299a:	f003 0301 	and.w	r3, r3, #1
 800299e:	60fb      	str	r3, [r7, #12]
 80029a0:	4b3a      	ldr	r3, [pc, #232]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 80029a2:	685b      	ldr	r3, [r3, #4]
 80029a4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80029a8:	60bb      	str	r3, [r7, #8]
 80029aa:	68fb      	ldr	r3, [r7, #12]
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d00c      	beq.n	80029ca <RCC_GetClocksFreq+0x7e>
 80029b0:	4a38      	ldr	r2, [pc, #224]	; (8002a94 <RCC_GetClocksFreq+0x148>)
 80029b2:	68bb      	ldr	r3, [r7, #8]
 80029b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80029b8:	4a34      	ldr	r2, [pc, #208]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 80029ba:	6852      	ldr	r2, [r2, #4]
 80029bc:	0992      	lsrs	r2, r2, #6
 80029be:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80029c2:	fb02 f303 	mul.w	r3, r2, r3
 80029c6:	61fb      	str	r3, [r7, #28]
 80029c8:	e00b      	b.n	80029e2 <RCC_GetClocksFreq+0x96>
 80029ca:	4a31      	ldr	r2, [pc, #196]	; (8002a90 <RCC_GetClocksFreq+0x144>)
 80029cc:	68bb      	ldr	r3, [r7, #8]
 80029ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80029d2:	4a2e      	ldr	r2, [pc, #184]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 80029d4:	6852      	ldr	r2, [r2, #4]
 80029d6:	0992      	lsrs	r2, r2, #6
 80029d8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80029dc:	fb02 f303 	mul.w	r3, r2, r3
 80029e0:	61fb      	str	r3, [r7, #28]
 80029e2:	4b2a      	ldr	r3, [pc, #168]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 80029e4:	685b      	ldr	r3, [r3, #4]
 80029e6:	0c1b      	lsrs	r3, r3, #16
 80029e8:	f003 0303 	and.w	r3, r3, #3
 80029ec:	3301      	adds	r3, #1
 80029ee:	005b      	lsls	r3, r3, #1
 80029f0:	613b      	str	r3, [r7, #16]
 80029f2:	69fa      	ldr	r2, [r7, #28]
 80029f4:	693b      	ldr	r3, [r7, #16]
 80029f6:	fbb2 f2f3 	udiv	r2, r2, r3
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	601a      	str	r2, [r3, #0]
 80029fe:	e003      	b.n	8002a08 <RCC_GetClocksFreq+0xbc>
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	4a23      	ldr	r2, [pc, #140]	; (8002a90 <RCC_GetClocksFreq+0x144>)
 8002a04:	601a      	str	r2, [r3, #0]
 8002a06:	bf00      	nop
 8002a08:	4b20      	ldr	r3, [pc, #128]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 8002a0a:	689b      	ldr	r3, [r3, #8]
 8002a0c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002a10:	61bb      	str	r3, [r7, #24]
 8002a12:	69bb      	ldr	r3, [r7, #24]
 8002a14:	091b      	lsrs	r3, r3, #4
 8002a16:	61bb      	str	r3, [r7, #24]
 8002a18:	4a1f      	ldr	r2, [pc, #124]	; (8002a98 <RCC_GetClocksFreq+0x14c>)
 8002a1a:	69bb      	ldr	r3, [r7, #24]
 8002a1c:	4413      	add	r3, r2
 8002a1e:	781b      	ldrb	r3, [r3, #0]
 8002a20:	b2db      	uxtb	r3, r3
 8002a22:	617b      	str	r3, [r7, #20]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	681a      	ldr	r2, [r3, #0]
 8002a28:	697b      	ldr	r3, [r7, #20]
 8002a2a:	40da      	lsrs	r2, r3
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	605a      	str	r2, [r3, #4]
 8002a30:	4b16      	ldr	r3, [pc, #88]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 8002a32:	689b      	ldr	r3, [r3, #8]
 8002a34:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8002a38:	61bb      	str	r3, [r7, #24]
 8002a3a:	69bb      	ldr	r3, [r7, #24]
 8002a3c:	0a9b      	lsrs	r3, r3, #10
 8002a3e:	61bb      	str	r3, [r7, #24]
 8002a40:	4a15      	ldr	r2, [pc, #84]	; (8002a98 <RCC_GetClocksFreq+0x14c>)
 8002a42:	69bb      	ldr	r3, [r7, #24]
 8002a44:	4413      	add	r3, r2
 8002a46:	781b      	ldrb	r3, [r3, #0]
 8002a48:	b2db      	uxtb	r3, r3
 8002a4a:	617b      	str	r3, [r7, #20]
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	685a      	ldr	r2, [r3, #4]
 8002a50:	697b      	ldr	r3, [r7, #20]
 8002a52:	40da      	lsrs	r2, r3
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	609a      	str	r2, [r3, #8]
 8002a58:	4b0c      	ldr	r3, [pc, #48]	; (8002a8c <RCC_GetClocksFreq+0x140>)
 8002a5a:	689b      	ldr	r3, [r3, #8]
 8002a5c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8002a60:	61bb      	str	r3, [r7, #24]
 8002a62:	69bb      	ldr	r3, [r7, #24]
 8002a64:	0b5b      	lsrs	r3, r3, #13
 8002a66:	61bb      	str	r3, [r7, #24]
 8002a68:	4a0b      	ldr	r2, [pc, #44]	; (8002a98 <RCC_GetClocksFreq+0x14c>)
 8002a6a:	69bb      	ldr	r3, [r7, #24]
 8002a6c:	4413      	add	r3, r2
 8002a6e:	781b      	ldrb	r3, [r3, #0]
 8002a70:	b2db      	uxtb	r3, r3
 8002a72:	617b      	str	r3, [r7, #20]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	697b      	ldr	r3, [r7, #20]
 8002a7a:	40da      	lsrs	r2, r3
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	60da      	str	r2, [r3, #12]
 8002a80:	bf00      	nop
 8002a82:	3724      	adds	r7, #36	; 0x24
 8002a84:	46bd      	mov	sp, r7
 8002a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8a:	4770      	bx	lr
 8002a8c:	40023800 	.word	0x40023800
 8002a90:	00f42400 	.word	0x00f42400
 8002a94:	017d7840 	.word	0x017d7840
 8002a98:	20000018 	.word	0x20000018

08002a9c <RCC_AHB1PeriphClockCmd>:
 8002a9c:	b480      	push	{r7}
 8002a9e:	b083      	sub	sp, #12
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	6078      	str	r0, [r7, #4]
 8002aa4:	460b      	mov	r3, r1
 8002aa6:	70fb      	strb	r3, [r7, #3]
 8002aa8:	78fb      	ldrb	r3, [r7, #3]
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d006      	beq.n	8002abc <RCC_AHB1PeriphClockCmd+0x20>
 8002aae:	4b0a      	ldr	r3, [pc, #40]	; (8002ad8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8002ab0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ab2:	4909      	ldr	r1, [pc, #36]	; (8002ad8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	4313      	orrs	r3, r2
 8002ab8:	630b      	str	r3, [r1, #48]	; 0x30
 8002aba:	e006      	b.n	8002aca <RCC_AHB1PeriphClockCmd+0x2e>
 8002abc:	4b06      	ldr	r3, [pc, #24]	; (8002ad8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8002abe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	43db      	mvns	r3, r3
 8002ac4:	4904      	ldr	r1, [pc, #16]	; (8002ad8 <RCC_AHB1PeriphClockCmd+0x3c>)
 8002ac6:	4013      	ands	r3, r2
 8002ac8:	630b      	str	r3, [r1, #48]	; 0x30
 8002aca:	bf00      	nop
 8002acc:	370c      	adds	r7, #12
 8002ace:	46bd      	mov	sp, r7
 8002ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad4:	4770      	bx	lr
 8002ad6:	bf00      	nop
 8002ad8:	40023800 	.word	0x40023800

08002adc <RCC_APB1PeriphClockCmd>:
 8002adc:	b480      	push	{r7}
 8002ade:	b083      	sub	sp, #12
 8002ae0:	af00      	add	r7, sp, #0
 8002ae2:	6078      	str	r0, [r7, #4]
 8002ae4:	460b      	mov	r3, r1
 8002ae6:	70fb      	strb	r3, [r7, #3]
 8002ae8:	78fb      	ldrb	r3, [r7, #3]
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	d006      	beq.n	8002afc <RCC_APB1PeriphClockCmd+0x20>
 8002aee:	4b0a      	ldr	r3, [pc, #40]	; (8002b18 <RCC_APB1PeriphClockCmd+0x3c>)
 8002af0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002af2:	4909      	ldr	r1, [pc, #36]	; (8002b18 <RCC_APB1PeriphClockCmd+0x3c>)
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	4313      	orrs	r3, r2
 8002af8:	640b      	str	r3, [r1, #64]	; 0x40
 8002afa:	e006      	b.n	8002b0a <RCC_APB1PeriphClockCmd+0x2e>
 8002afc:	4b06      	ldr	r3, [pc, #24]	; (8002b18 <RCC_APB1PeriphClockCmd+0x3c>)
 8002afe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	43db      	mvns	r3, r3
 8002b04:	4904      	ldr	r1, [pc, #16]	; (8002b18 <RCC_APB1PeriphClockCmd+0x3c>)
 8002b06:	4013      	ands	r3, r2
 8002b08:	640b      	str	r3, [r1, #64]	; 0x40
 8002b0a:	bf00      	nop
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b14:	4770      	bx	lr
 8002b16:	bf00      	nop
 8002b18:	40023800 	.word	0x40023800

08002b1c <NVIC_SetPriority>:
 8002b1c:	b480      	push	{r7}
 8002b1e:	b083      	sub	sp, #12
 8002b20:	af00      	add	r7, sp, #0
 8002b22:	4603      	mov	r3, r0
 8002b24:	6039      	str	r1, [r7, #0]
 8002b26:	71fb      	strb	r3, [r7, #7]
 8002b28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	da0b      	bge.n	8002b48 <NVIC_SetPriority+0x2c>
 8002b30:	683b      	ldr	r3, [r7, #0]
 8002b32:	b2da      	uxtb	r2, r3
 8002b34:	490c      	ldr	r1, [pc, #48]	; (8002b68 <NVIC_SetPriority+0x4c>)
 8002b36:	79fb      	ldrb	r3, [r7, #7]
 8002b38:	f003 030f 	and.w	r3, r3, #15
 8002b3c:	3b04      	subs	r3, #4
 8002b3e:	0112      	lsls	r2, r2, #4
 8002b40:	b2d2      	uxtb	r2, r2
 8002b42:	440b      	add	r3, r1
 8002b44:	761a      	strb	r2, [r3, #24]
 8002b46:	e009      	b.n	8002b5c <NVIC_SetPriority+0x40>
 8002b48:	683b      	ldr	r3, [r7, #0]
 8002b4a:	b2da      	uxtb	r2, r3
 8002b4c:	4907      	ldr	r1, [pc, #28]	; (8002b6c <NVIC_SetPriority+0x50>)
 8002b4e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b52:	0112      	lsls	r2, r2, #4
 8002b54:	b2d2      	uxtb	r2, r2
 8002b56:	440b      	add	r3, r1
 8002b58:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002b5c:	bf00      	nop
 8002b5e:	370c      	adds	r7, #12
 8002b60:	46bd      	mov	sp, r7
 8002b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b66:	4770      	bx	lr
 8002b68:	e000ed00 	.word	0xe000ed00
 8002b6c:	e000e100 	.word	0xe000e100

08002b70 <SysTick_Config>:
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b082      	sub	sp, #8
 8002b74:	af00      	add	r7, sp, #0
 8002b76:	6078      	str	r0, [r7, #4]
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	3b01      	subs	r3, #1
 8002b7c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002b80:	d301      	bcc.n	8002b86 <SysTick_Config+0x16>
 8002b82:	2301      	movs	r3, #1
 8002b84:	e00f      	b.n	8002ba6 <SysTick_Config+0x36>
 8002b86:	4a0a      	ldr	r2, [pc, #40]	; (8002bb0 <SysTick_Config+0x40>)
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	3b01      	subs	r3, #1
 8002b8c:	6053      	str	r3, [r2, #4]
 8002b8e:	210f      	movs	r1, #15
 8002b90:	f04f 30ff 	mov.w	r0, #4294967295
 8002b94:	f7ff ffc2 	bl	8002b1c <NVIC_SetPriority>
 8002b98:	4b05      	ldr	r3, [pc, #20]	; (8002bb0 <SysTick_Config+0x40>)
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	609a      	str	r2, [r3, #8]
 8002b9e:	4b04      	ldr	r3, [pc, #16]	; (8002bb0 <SysTick_Config+0x40>)
 8002ba0:	2207      	movs	r2, #7
 8002ba2:	601a      	str	r2, [r3, #0]
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	4618      	mov	r0, r3
 8002ba8:	3708      	adds	r7, #8
 8002baa:	46bd      	mov	sp, r7
 8002bac:	bd80      	pop	{r7, pc}
 8002bae:	bf00      	nop
 8002bb0:	e000e010 	.word	0xe000e010

08002bb4 <TimerInit>:
 8002bb4:	b580      	push	{r7, lr}
 8002bb6:	b084      	sub	sp, #16
 8002bb8:	af00      	add	r7, sp, #0
 8002bba:	463b      	mov	r3, r7
 8002bbc:	4618      	mov	r0, r3
 8002bbe:	f7ff fec5 	bl	800294c <RCC_GetClocksFreq>
 8002bc2:	683b      	ldr	r3, [r7, #0]
 8002bc4:	4a0a      	ldr	r2, [pc, #40]	; (8002bf0 <TimerInit+0x3c>)
 8002bc6:	fba2 2303 	umull	r2, r3, r2, r3
 8002bca:	099b      	lsrs	r3, r3, #6
 8002bcc:	4618      	mov	r0, r3
 8002bce:	f7ff ffcf 	bl	8002b70 <SysTick_Config>
 8002bd2:	2101      	movs	r1, #1
 8002bd4:	f04f 30ff 	mov.w	r0, #4294967295
 8002bd8:	f7ff ffa0 	bl	8002b1c <NVIC_SetPriority>
 8002bdc:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8002be0:	2100      	movs	r1, #0
 8002be2:	4804      	ldr	r0, [pc, #16]	; (8002bf4 <TimerInit+0x40>)
 8002be4:	f001 ff66 	bl	8004ab4 <memsetl>
 8002be8:	bf00      	nop
 8002bea:	3710      	adds	r7, #16
 8002bec:	46bd      	mov	sp, r7
 8002bee:	bd80      	pop	{r7, pc}
 8002bf0:	10624dd3 	.word	0x10624dd3
 8002bf4:	200001a8 	.word	0x200001a8

08002bf8 <TimerStart>:
 8002bf8:	b590      	push	{r4, r7, lr}
 8002bfa:	b087      	sub	sp, #28
 8002bfc:	af00      	add	r7, sp, #0
 8002bfe:	60f8      	str	r0, [r7, #12]
 8002c00:	60b9      	str	r1, [r7, #8]
 8002c02:	603b      	str	r3, [r7, #0]
 8002c04:	4613      	mov	r3, r2
 8002c06:	71fb      	strb	r3, [r7, #7]
 8002c08:	2300      	movs	r3, #0
 8002c0a:	75fb      	strb	r3, [r7, #23]
 8002c0c:	e04c      	b.n	8002ca8 <TimerStart+0xb0>
 8002c0e:	7dfa      	ldrb	r2, [r7, #23]
 8002c10:	4929      	ldr	r1, [pc, #164]	; (8002cb8 <TimerStart+0xc0>)
 8002c12:	4613      	mov	r3, r2
 8002c14:	005b      	lsls	r3, r3, #1
 8002c16:	4413      	add	r3, r2
 8002c18:	00db      	lsls	r3, r3, #3
 8002c1a:	440b      	add	r3, r1
 8002c1c:	3310      	adds	r3, #16
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	d13e      	bne.n	8002ca2 <TimerStart+0xaa>
 8002c24:	7dfa      	ldrb	r2, [r7, #23]
 8002c26:	4924      	ldr	r1, [pc, #144]	; (8002cb8 <TimerStart+0xc0>)
 8002c28:	4613      	mov	r3, r2
 8002c2a:	005b      	lsls	r3, r3, #1
 8002c2c:	4413      	add	r3, r2
 8002c2e:	00db      	lsls	r3, r3, #3
 8002c30:	440b      	add	r3, r1
 8002c32:	68fa      	ldr	r2, [r7, #12]
 8002c34:	601a      	str	r2, [r3, #0]
 8002c36:	7dfa      	ldrb	r2, [r7, #23]
 8002c38:	491f      	ldr	r1, [pc, #124]	; (8002cb8 <TimerStart+0xc0>)
 8002c3a:	4613      	mov	r3, r2
 8002c3c:	005b      	lsls	r3, r3, #1
 8002c3e:	4413      	add	r3, r2
 8002c40:	00db      	lsls	r3, r3, #3
 8002c42:	440b      	add	r3, r1
 8002c44:	3310      	adds	r3, #16
 8002c46:	683a      	ldr	r2, [r7, #0]
 8002c48:	601a      	str	r2, [r3, #0]
 8002c4a:	7dfa      	ldrb	r2, [r7, #23]
 8002c4c:	491a      	ldr	r1, [pc, #104]	; (8002cb8 <TimerStart+0xc0>)
 8002c4e:	4613      	mov	r3, r2
 8002c50:	005b      	lsls	r3, r3, #1
 8002c52:	4413      	add	r3, r2
 8002c54:	00db      	lsls	r3, r3, #3
 8002c56:	440b      	add	r3, r1
 8002c58:	330c      	adds	r3, #12
 8002c5a:	79fa      	ldrb	r2, [r7, #7]
 8002c5c:	701a      	strb	r2, [r3, #0]
 8002c5e:	7dfa      	ldrb	r2, [r7, #23]
 8002c60:	4915      	ldr	r1, [pc, #84]	; (8002cb8 <TimerStart+0xc0>)
 8002c62:	4613      	mov	r3, r2
 8002c64:	005b      	lsls	r3, r3, #1
 8002c66:	4413      	add	r3, r2
 8002c68:	00db      	lsls	r3, r3, #3
 8002c6a:	440b      	add	r3, r1
 8002c6c:	3314      	adds	r3, #20
 8002c6e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002c70:	601a      	str	r2, [r3, #0]
 8002c72:	7dfc      	ldrb	r4, [r7, #23]
 8002c74:	f000 f872 	bl	8002d5c <GetMilSecTick>
 8002c78:	4601      	mov	r1, r0
 8002c7a:	4a0f      	ldr	r2, [pc, #60]	; (8002cb8 <TimerStart+0xc0>)
 8002c7c:	4623      	mov	r3, r4
 8002c7e:	005b      	lsls	r3, r3, #1
 8002c80:	4423      	add	r3, r4
 8002c82:	00db      	lsls	r3, r3, #3
 8002c84:	4413      	add	r3, r2
 8002c86:	3304      	adds	r3, #4
 8002c88:	6019      	str	r1, [r3, #0]
 8002c8a:	7dfa      	ldrb	r2, [r7, #23]
 8002c8c:	490a      	ldr	r1, [pc, #40]	; (8002cb8 <TimerStart+0xc0>)
 8002c8e:	4613      	mov	r3, r2
 8002c90:	005b      	lsls	r3, r3, #1
 8002c92:	4413      	add	r3, r2
 8002c94:	00db      	lsls	r3, r3, #3
 8002c96:	440b      	add	r3, r1
 8002c98:	3308      	adds	r3, #8
 8002c9a:	68ba      	ldr	r2, [r7, #8]
 8002c9c:	601a      	str	r2, [r3, #0]
 8002c9e:	7dfb      	ldrb	r3, [r7, #23]
 8002ca0:	e006      	b.n	8002cb0 <TimerStart+0xb8>
 8002ca2:	7dfb      	ldrb	r3, [r7, #23]
 8002ca4:	3301      	adds	r3, #1
 8002ca6:	75fb      	strb	r3, [r7, #23]
 8002ca8:	7dfb      	ldrb	r3, [r7, #23]
 8002caa:	2b0f      	cmp	r3, #15
 8002cac:	d9af      	bls.n	8002c0e <TimerStart+0x16>
 8002cae:	23ff      	movs	r3, #255	; 0xff
 8002cb0:	4618      	mov	r0, r3
 8002cb2:	371c      	adds	r7, #28
 8002cb4:	46bd      	mov	sp, r7
 8002cb6:	bd90      	pop	{r4, r7, pc}
 8002cb8:	200001a8 	.word	0x200001a8

08002cbc <TimerStop>:
 8002cbc:	b480      	push	{r7}
 8002cbe:	b083      	sub	sp, #12
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	4603      	mov	r3, r0
 8002cc4:	71fb      	strb	r3, [r7, #7]
 8002cc6:	79fb      	ldrb	r3, [r7, #7]
 8002cc8:	2b0f      	cmp	r3, #15
 8002cca:	d80a      	bhi.n	8002ce2 <TimerStop+0x26>
 8002ccc:	79fa      	ldrb	r2, [r7, #7]
 8002cce:	4922      	ldr	r1, [pc, #136]	; (8002d58 <TimerStop+0x9c>)
 8002cd0:	4613      	mov	r3, r2
 8002cd2:	005b      	lsls	r3, r3, #1
 8002cd4:	4413      	add	r3, r2
 8002cd6:	00db      	lsls	r3, r3, #3
 8002cd8:	440b      	add	r3, r1
 8002cda:	3310      	adds	r3, #16
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d101      	bne.n	8002ce6 <TimerStop+0x2a>
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	e031      	b.n	8002d4a <TimerStop+0x8e>
 8002ce6:	79fa      	ldrb	r2, [r7, #7]
 8002ce8:	491b      	ldr	r1, [pc, #108]	; (8002d58 <TimerStop+0x9c>)
 8002cea:	4613      	mov	r3, r2
 8002cec:	005b      	lsls	r3, r3, #1
 8002cee:	4413      	add	r3, r2
 8002cf0:	00db      	lsls	r3, r3, #3
 8002cf2:	440b      	add	r3, r1
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	601a      	str	r2, [r3, #0]
 8002cf8:	79fa      	ldrb	r2, [r7, #7]
 8002cfa:	4917      	ldr	r1, [pc, #92]	; (8002d58 <TimerStop+0x9c>)
 8002cfc:	4613      	mov	r3, r2
 8002cfe:	005b      	lsls	r3, r3, #1
 8002d00:	4413      	add	r3, r2
 8002d02:	00db      	lsls	r3, r3, #3
 8002d04:	440b      	add	r3, r1
 8002d06:	3310      	adds	r3, #16
 8002d08:	2200      	movs	r2, #0
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	79fa      	ldrb	r2, [r7, #7]
 8002d0e:	4912      	ldr	r1, [pc, #72]	; (8002d58 <TimerStop+0x9c>)
 8002d10:	4613      	mov	r3, r2
 8002d12:	005b      	lsls	r3, r3, #1
 8002d14:	4413      	add	r3, r2
 8002d16:	00db      	lsls	r3, r3, #3
 8002d18:	440b      	add	r3, r1
 8002d1a:	330c      	adds	r3, #12
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	701a      	strb	r2, [r3, #0]
 8002d20:	79fa      	ldrb	r2, [r7, #7]
 8002d22:	490d      	ldr	r1, [pc, #52]	; (8002d58 <TimerStop+0x9c>)
 8002d24:	4613      	mov	r3, r2
 8002d26:	005b      	lsls	r3, r3, #1
 8002d28:	4413      	add	r3, r2
 8002d2a:	00db      	lsls	r3, r3, #3
 8002d2c:	440b      	add	r3, r1
 8002d2e:	3308      	adds	r3, #8
 8002d30:	2200      	movs	r2, #0
 8002d32:	601a      	str	r2, [r3, #0]
 8002d34:	79fa      	ldrb	r2, [r7, #7]
 8002d36:	4908      	ldr	r1, [pc, #32]	; (8002d58 <TimerStop+0x9c>)
 8002d38:	4613      	mov	r3, r2
 8002d3a:	005b      	lsls	r3, r3, #1
 8002d3c:	4413      	add	r3, r2
 8002d3e:	00db      	lsls	r3, r3, #3
 8002d40:	440b      	add	r3, r1
 8002d42:	3304      	adds	r3, #4
 8002d44:	2200      	movs	r2, #0
 8002d46:	601a      	str	r2, [r3, #0]
 8002d48:	2301      	movs	r3, #1
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	370c      	adds	r7, #12
 8002d4e:	46bd      	mov	sp, r7
 8002d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d54:	4770      	bx	lr
 8002d56:	bf00      	nop
 8002d58:	200001a8 	.word	0x200001a8

08002d5c <GetMilSecTick>:
 8002d5c:	b480      	push	{r7}
 8002d5e:	af00      	add	r7, sp, #0
 8002d60:	4b03      	ldr	r3, [pc, #12]	; (8002d70 <GetMilSecTick+0x14>)
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	4618      	mov	r0, r3
 8002d66:	46bd      	mov	sp, r7
 8002d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6c:	4770      	bx	lr
 8002d6e:	bf00      	nop
 8002d70:	20000328 	.word	0x20000328

08002d74 <processTimerScheduler>:
 8002d74:	b580      	push	{r7, lr}
 8002d76:	b084      	sub	sp, #16
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	2300      	movs	r3, #0
 8002d7c:	73fb      	strb	r3, [r7, #15]
 8002d7e:	e068      	b.n	8002e52 <processTimerScheduler+0xde>
 8002d80:	7bfa      	ldrb	r2, [r7, #15]
 8002d82:	4937      	ldr	r1, [pc, #220]	; (8002e60 <processTimerScheduler+0xec>)
 8002d84:	4613      	mov	r3, r2
 8002d86:	005b      	lsls	r3, r3, #1
 8002d88:	4413      	add	r3, r2
 8002d8a:	00db      	lsls	r3, r3, #3
 8002d8c:	440b      	add	r3, r1
 8002d8e:	3310      	adds	r3, #16
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d05a      	beq.n	8002e4c <processTimerScheduler+0xd8>
 8002d96:	7bfb      	ldrb	r3, [r7, #15]
 8002d98:	4618      	mov	r0, r3
 8002d9a:	f000 f863 	bl	8002e64 <TimeExpired>
 8002d9e:	4603      	mov	r3, r0
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d053      	beq.n	8002e4c <processTimerScheduler+0xd8>
 8002da4:	7bfa      	ldrb	r2, [r7, #15]
 8002da6:	492e      	ldr	r1, [pc, #184]	; (8002e60 <processTimerScheduler+0xec>)
 8002da8:	4613      	mov	r3, r2
 8002daa:	005b      	lsls	r3, r3, #1
 8002dac:	4413      	add	r3, r2
 8002dae:	00db      	lsls	r3, r3, #3
 8002db0:	440b      	add	r3, r1
 8002db2:	3310      	adds	r3, #16
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	60bb      	str	r3, [r7, #8]
 8002db8:	7bfa      	ldrb	r2, [r7, #15]
 8002dba:	4929      	ldr	r1, [pc, #164]	; (8002e60 <processTimerScheduler+0xec>)
 8002dbc:	4613      	mov	r3, r2
 8002dbe:	005b      	lsls	r3, r3, #1
 8002dc0:	4413      	add	r3, r2
 8002dc2:	00db      	lsls	r3, r3, #3
 8002dc4:	440b      	add	r3, r1
 8002dc6:	3314      	adds	r3, #20
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	607b      	str	r3, [r7, #4]
 8002dcc:	7bfa      	ldrb	r2, [r7, #15]
 8002dce:	4924      	ldr	r1, [pc, #144]	; (8002e60 <processTimerScheduler+0xec>)
 8002dd0:	4613      	mov	r3, r2
 8002dd2:	005b      	lsls	r3, r3, #1
 8002dd4:	4413      	add	r3, r2
 8002dd6:	00db      	lsls	r3, r3, #3
 8002dd8:	440b      	add	r3, r1
 8002dda:	330c      	adds	r3, #12
 8002ddc:	781b      	ldrb	r3, [r3, #0]
 8002dde:	b2db      	uxtb	r3, r3
 8002de0:	2bff      	cmp	r3, #255	; 0xff
 8002de2:	d020      	beq.n	8002e26 <processTimerScheduler+0xb2>
 8002de4:	7bfa      	ldrb	r2, [r7, #15]
 8002de6:	491e      	ldr	r1, [pc, #120]	; (8002e60 <processTimerScheduler+0xec>)
 8002de8:	4613      	mov	r3, r2
 8002dea:	005b      	lsls	r3, r3, #1
 8002dec:	4413      	add	r3, r2
 8002dee:	00db      	lsls	r3, r3, #3
 8002df0:	440b      	add	r3, r1
 8002df2:	330c      	adds	r3, #12
 8002df4:	781b      	ldrb	r3, [r3, #0]
 8002df6:	b2db      	uxtb	r3, r3
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d014      	beq.n	8002e26 <processTimerScheduler+0xb2>
 8002dfc:	7bfa      	ldrb	r2, [r7, #15]
 8002dfe:	4918      	ldr	r1, [pc, #96]	; (8002e60 <processTimerScheduler+0xec>)
 8002e00:	4613      	mov	r3, r2
 8002e02:	005b      	lsls	r3, r3, #1
 8002e04:	4413      	add	r3, r2
 8002e06:	00db      	lsls	r3, r3, #3
 8002e08:	440b      	add	r3, r1
 8002e0a:	330c      	adds	r3, #12
 8002e0c:	781b      	ldrb	r3, [r3, #0]
 8002e0e:	b2db      	uxtb	r3, r3
 8002e10:	3b01      	subs	r3, #1
 8002e12:	b2d8      	uxtb	r0, r3
 8002e14:	4912      	ldr	r1, [pc, #72]	; (8002e60 <processTimerScheduler+0xec>)
 8002e16:	4613      	mov	r3, r2
 8002e18:	005b      	lsls	r3, r3, #1
 8002e1a:	4413      	add	r3, r2
 8002e1c:	00db      	lsls	r3, r3, #3
 8002e1e:	440b      	add	r3, r1
 8002e20:	330c      	adds	r3, #12
 8002e22:	4602      	mov	r2, r0
 8002e24:	701a      	strb	r2, [r3, #0]
 8002e26:	7bfa      	ldrb	r2, [r7, #15]
 8002e28:	490d      	ldr	r1, [pc, #52]	; (8002e60 <processTimerScheduler+0xec>)
 8002e2a:	4613      	mov	r3, r2
 8002e2c:	005b      	lsls	r3, r3, #1
 8002e2e:	4413      	add	r3, r2
 8002e30:	00db      	lsls	r3, r3, #3
 8002e32:	440b      	add	r3, r1
 8002e34:	330c      	adds	r3, #12
 8002e36:	781b      	ldrb	r3, [r3, #0]
 8002e38:	b2db      	uxtb	r3, r3
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	d103      	bne.n	8002e46 <processTimerScheduler+0xd2>
 8002e3e:	7bfb      	ldrb	r3, [r7, #15]
 8002e40:	4618      	mov	r0, r3
 8002e42:	f7ff ff3b 	bl	8002cbc <TimerStop>
 8002e46:	68bb      	ldr	r3, [r7, #8]
 8002e48:	6878      	ldr	r0, [r7, #4]
 8002e4a:	4798      	blx	r3
 8002e4c:	7bfb      	ldrb	r3, [r7, #15]
 8002e4e:	3301      	adds	r3, #1
 8002e50:	73fb      	strb	r3, [r7, #15]
 8002e52:	7bfb      	ldrb	r3, [r7, #15]
 8002e54:	2b0f      	cmp	r3, #15
 8002e56:	d993      	bls.n	8002d80 <processTimerScheduler+0xc>
 8002e58:	bf00      	nop
 8002e5a:	3710      	adds	r7, #16
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	bd80      	pop	{r7, pc}
 8002e60:	200001a8 	.word	0x200001a8

08002e64 <TimeExpired>:
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b084      	sub	sp, #16
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	4603      	mov	r3, r0
 8002e6c:	71fb      	strb	r3, [r7, #7]
 8002e6e:	2300      	movs	r3, #0
 8002e70:	60fb      	str	r3, [r7, #12]
 8002e72:	b672      	cpsid	i
 8002e74:	f7ff ff72 	bl	8002d5c <GetMilSecTick>
 8002e78:	60b8      	str	r0, [r7, #8]
 8002e7a:	79fb      	ldrb	r3, [r7, #7]
 8002e7c:	2b0f      	cmp	r3, #15
 8002e7e:	d80a      	bhi.n	8002e96 <TimeExpired+0x32>
 8002e80:	79fa      	ldrb	r2, [r7, #7]
 8002e82:	492a      	ldr	r1, [pc, #168]	; (8002f2c <TimeExpired+0xc8>)
 8002e84:	4613      	mov	r3, r2
 8002e86:	005b      	lsls	r3, r3, #1
 8002e88:	4413      	add	r3, r2
 8002e8a:	00db      	lsls	r3, r3, #3
 8002e8c:	440b      	add	r3, r1
 8002e8e:	3310      	adds	r3, #16
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d102      	bne.n	8002e9c <TimeExpired+0x38>
 8002e96:	b662      	cpsie	i
 8002e98:	2300      	movs	r3, #0
 8002e9a:	e042      	b.n	8002f22 <TimeExpired+0xbe>
 8002e9c:	79fa      	ldrb	r2, [r7, #7]
 8002e9e:	4923      	ldr	r1, [pc, #140]	; (8002f2c <TimeExpired+0xc8>)
 8002ea0:	4613      	mov	r3, r2
 8002ea2:	005b      	lsls	r3, r3, #1
 8002ea4:	4413      	add	r3, r2
 8002ea6:	00db      	lsls	r3, r3, #3
 8002ea8:	440b      	add	r3, r1
 8002eaa:	3304      	adds	r3, #4
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	68ba      	ldr	r2, [r7, #8]
 8002eb0:	429a      	cmp	r2, r3
 8002eb2:	d30c      	bcc.n	8002ece <TimeExpired+0x6a>
 8002eb4:	79fa      	ldrb	r2, [r7, #7]
 8002eb6:	491d      	ldr	r1, [pc, #116]	; (8002f2c <TimeExpired+0xc8>)
 8002eb8:	4613      	mov	r3, r2
 8002eba:	005b      	lsls	r3, r3, #1
 8002ebc:	4413      	add	r3, r2
 8002ebe:	00db      	lsls	r3, r3, #3
 8002ec0:	440b      	add	r3, r1
 8002ec2:	3304      	adds	r3, #4
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	68ba      	ldr	r2, [r7, #8]
 8002ec8:	1ad3      	subs	r3, r2, r3
 8002eca:	60fb      	str	r3, [r7, #12]
 8002ecc:	e00e      	b.n	8002eec <TimeExpired+0x88>
 8002ece:	79fa      	ldrb	r2, [r7, #7]
 8002ed0:	4916      	ldr	r1, [pc, #88]	; (8002f2c <TimeExpired+0xc8>)
 8002ed2:	4613      	mov	r3, r2
 8002ed4:	005b      	lsls	r3, r3, #1
 8002ed6:	4413      	add	r3, r2
 8002ed8:	00db      	lsls	r3, r3, #3
 8002eda:	440b      	add	r3, r1
 8002edc:	3304      	adds	r3, #4
 8002ede:	681a      	ldr	r2, [r3, #0]
 8002ee0:	68bb      	ldr	r3, [r7, #8]
 8002ee2:	1ad3      	subs	r3, r2, r3
 8002ee4:	60fb      	str	r3, [r7, #12]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	43db      	mvns	r3, r3
 8002eea:	60fb      	str	r3, [r7, #12]
 8002eec:	79fa      	ldrb	r2, [r7, #7]
 8002eee:	490f      	ldr	r1, [pc, #60]	; (8002f2c <TimeExpired+0xc8>)
 8002ef0:	4613      	mov	r3, r2
 8002ef2:	005b      	lsls	r3, r3, #1
 8002ef4:	4413      	add	r3, r2
 8002ef6:	00db      	lsls	r3, r3, #3
 8002ef8:	440b      	add	r3, r1
 8002efa:	3308      	adds	r3, #8
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	68fa      	ldr	r2, [r7, #12]
 8002f00:	429a      	cmp	r2, r3
 8002f02:	d202      	bcs.n	8002f0a <TimeExpired+0xa6>
 8002f04:	b662      	cpsie	i
 8002f06:	2300      	movs	r3, #0
 8002f08:	e00b      	b.n	8002f22 <TimeExpired+0xbe>
 8002f0a:	79fa      	ldrb	r2, [r7, #7]
 8002f0c:	4907      	ldr	r1, [pc, #28]	; (8002f2c <TimeExpired+0xc8>)
 8002f0e:	4613      	mov	r3, r2
 8002f10:	005b      	lsls	r3, r3, #1
 8002f12:	4413      	add	r3, r2
 8002f14:	00db      	lsls	r3, r3, #3
 8002f16:	440b      	add	r3, r1
 8002f18:	3304      	adds	r3, #4
 8002f1a:	68ba      	ldr	r2, [r7, #8]
 8002f1c:	601a      	str	r2, [r3, #0]
 8002f1e:	b662      	cpsie	i
 8002f20:	2301      	movs	r3, #1
 8002f22:	4618      	mov	r0, r3
 8002f24:	3710      	adds	r7, #16
 8002f26:	46bd      	mov	sp, r7
 8002f28:	bd80      	pop	{r7, pc}
 8002f2a:	bf00      	nop
 8002f2c:	200001a8 	.word	0x200001a8

08002f30 <SysTick_Handler>:
 8002f30:	b480      	push	{r7}
 8002f32:	af00      	add	r7, sp, #0
 8002f34:	4b04      	ldr	r3, [pc, #16]	; (8002f48 <SysTick_Handler+0x18>)
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	3301      	adds	r3, #1
 8002f3a:	4a03      	ldr	r2, [pc, #12]	; (8002f48 <SysTick_Handler+0x18>)
 8002f3c:	6013      	str	r3, [r2, #0]
 8002f3e:	bf00      	nop
 8002f40:	46bd      	mov	sp, r7
 8002f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f46:	4770      	bx	lr
 8002f48:	20000328 	.word	0x20000328

08002f4c <delayMicroseconds>:
 8002f4c:	b480      	push	{r7}
 8002f4e:	b083      	sub	sp, #12
 8002f50:	af00      	add	r7, sp, #0
 8002f52:	6078      	str	r0, [r7, #4]
 8002f54:	bf00      	nop
 8002f56:	370c      	adds	r7, #12
 8002f58:	46bd      	mov	sp, r7
 8002f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f5e:	4770      	bx	lr

08002f60 <ucg_gpio_init>:
 8002f60:	b580      	push	{r7, lr}
 8002f62:	b082      	sub	sp, #8
 8002f64:	af00      	add	r7, sp, #0
 8002f66:	2101      	movs	r1, #1
 8002f68:	2007      	movs	r0, #7
 8002f6a:	f7ff fd97 	bl	8002a9c <RCC_AHB1PeriphClockCmd>
 8002f6e:	2301      	movs	r3, #1
 8002f70:	713b      	strb	r3, [r7, #4]
 8002f72:	2303      	movs	r3, #3
 8002f74:	717b      	strb	r3, [r7, #5]
 8002f76:	2300      	movs	r3, #0
 8002f78:	71bb      	strb	r3, [r7, #6]
 8002f7a:	2300      	movs	r3, #0
 8002f7c:	71fb      	strb	r3, [r7, #7]
 8002f7e:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8002f82:	603b      	str	r3, [r7, #0]
 8002f84:	463b      	mov	r3, r7
 8002f86:	4619      	mov	r1, r3
 8002f88:	480a      	ldr	r0, [pc, #40]	; (8002fb4 <ucg_gpio_init+0x54>)
 8002f8a:	f7ff f9f7 	bl	800237c <GPIO_Init>
 8002f8e:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8002f92:	603b      	str	r3, [r7, #0]
 8002f94:	463b      	mov	r3, r7
 8002f96:	4619      	mov	r1, r3
 8002f98:	4807      	ldr	r0, [pc, #28]	; (8002fb8 <ucg_gpio_init+0x58>)
 8002f9a:	f7ff f9ef 	bl	800237c <GPIO_Init>
 8002f9e:	2380      	movs	r3, #128	; 0x80
 8002fa0:	603b      	str	r3, [r7, #0]
 8002fa2:	463b      	mov	r3, r7
 8002fa4:	4619      	mov	r1, r3
 8002fa6:	4805      	ldr	r0, [pc, #20]	; (8002fbc <ucg_gpio_init+0x5c>)
 8002fa8:	f7ff f9e8 	bl	800237c <GPIO_Init>
 8002fac:	bf00      	nop
 8002fae:	3708      	adds	r7, #8
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	bd80      	pop	{r7, pc}
 8002fb4:	40020000 	.word	0x40020000
 8002fb8:	40020400 	.word	0x40020400
 8002fbc:	40020800 	.word	0x40020800

08002fc0 <ucg_com_arduino_send_generic_SW_SPI>:
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b084      	sub	sp, #16
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
 8002fc8:	460b      	mov	r3, r1
 8002fca:	70fb      	strb	r3, [r7, #3]
 8002fcc:	2308      	movs	r3, #8
 8002fce:	73fb      	strb	r3, [r7, #15]
 8002fd0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	da05      	bge.n	8002fe4 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8002fd8:	2201      	movs	r2, #1
 8002fda:	2180      	movs	r1, #128	; 0x80
 8002fdc:	4814      	ldr	r0, [pc, #80]	; (8003030 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002fde:	f7ff fa5b 	bl	8002498 <GPIO_WriteBit>
 8002fe2:	e004      	b.n	8002fee <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	2180      	movs	r1, #128	; 0x80
 8002fe8:	4811      	ldr	r0, [pc, #68]	; (8003030 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002fea:	f7ff fa55 	bl	8002498 <GPIO_WriteBit>
 8002fee:	2001      	movs	r0, #1
 8002ff0:	f7ff ffac 	bl	8002f4c <delayMicroseconds>
 8002ff4:	2201      	movs	r2, #1
 8002ff6:	2120      	movs	r1, #32
 8002ff8:	480d      	ldr	r0, [pc, #52]	; (8003030 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002ffa:	f7ff fa4d 	bl	8002498 <GPIO_WriteBit>
 8002ffe:	2001      	movs	r0, #1
 8003000:	f7ff ffa4 	bl	8002f4c <delayMicroseconds>
 8003004:	7bfb      	ldrb	r3, [r7, #15]
 8003006:	3b01      	subs	r3, #1
 8003008:	73fb      	strb	r3, [r7, #15]
 800300a:	2200      	movs	r2, #0
 800300c:	2120      	movs	r1, #32
 800300e:	4808      	ldr	r0, [pc, #32]	; (8003030 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8003010:	f7ff fa42 	bl	8002498 <GPIO_WriteBit>
 8003014:	2001      	movs	r0, #1
 8003016:	f7ff ff99 	bl	8002f4c <delayMicroseconds>
 800301a:	78fb      	ldrb	r3, [r7, #3]
 800301c:	005b      	lsls	r3, r3, #1
 800301e:	70fb      	strb	r3, [r7, #3]
 8003020:	7bfb      	ldrb	r3, [r7, #15]
 8003022:	2b00      	cmp	r3, #0
 8003024:	d1d4      	bne.n	8002fd0 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8003026:	bf00      	nop
 8003028:	3710      	adds	r7, #16
 800302a:	46bd      	mov	sp, r7
 800302c:	bd80      	pop	{r7, pc}
 800302e:	bf00      	nop
 8003030:	40020000 	.word	0x40020000

08003034 <ucg_com_arduino_generic_SW_SPI>:
 8003034:	b580      	push	{r7, lr}
 8003036:	b084      	sub	sp, #16
 8003038:	af00      	add	r7, sp, #0
 800303a:	60f8      	str	r0, [r7, #12]
 800303c:	607b      	str	r3, [r7, #4]
 800303e:	460b      	mov	r3, r1
 8003040:	817b      	strh	r3, [r7, #10]
 8003042:	4613      	mov	r3, r2
 8003044:	813b      	strh	r3, [r7, #8]
 8003046:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800304a:	3b0a      	subs	r3, #10
 800304c:	2b0b      	cmp	r3, #11
 800304e:	f200 80dc 	bhi.w	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003052:	a201      	add	r2, pc, #4	; (adr r2, 8003058 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8003054:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003058:	08003089 	.word	0x08003089
 800305c:	0800320b 	.word	0x0800320b
 8003060:	080030db 	.word	0x080030db
 8003064:	080030e5 	.word	0x080030e5
 8003068:	080030f5 	.word	0x080030f5
 800306c:	08003105 	.word	0x08003105
 8003070:	08003117 	.word	0x08003117
 8003074:	08003137 	.word	0x08003137
 8003078:	0800315f 	.word	0x0800315f
 800307c:	08003195 	.word	0x08003195
 8003080:	080031b3 	.word	0x080031b3
 8003084:	08003203 	.word	0x08003203
 8003088:	f7ff ff6a 	bl	8002f60 <ucg_gpio_init>
 800308c:	2201      	movs	r2, #1
 800308e:	2180      	movs	r1, #128	; 0x80
 8003090:	4860      	ldr	r0, [pc, #384]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003092:	f7ff fa01 	bl	8002498 <GPIO_WriteBit>
 8003096:	2201      	movs	r2, #1
 8003098:	2140      	movs	r1, #64	; 0x40
 800309a:	485f      	ldr	r0, [pc, #380]	; (8003218 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 800309c:	f7ff f9fc 	bl	8002498 <GPIO_WriteBit>
 80030a0:	2201      	movs	r2, #1
 80030a2:	2180      	movs	r1, #128	; 0x80
 80030a4:	485d      	ldr	r0, [pc, #372]	; (800321c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 80030a6:	f7ff f9f7 	bl	8002498 <GPIO_WriteBit>
 80030aa:	2201      	movs	r2, #1
 80030ac:	f44f 7100 	mov.w	r1, #512	; 0x200
 80030b0:	4858      	ldr	r0, [pc, #352]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80030b2:	f7ff f9f1 	bl	8002498 <GPIO_WriteBit>
 80030b6:	2200      	movs	r2, #0
 80030b8:	2120      	movs	r1, #32
 80030ba:	4856      	ldr	r0, [pc, #344]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80030bc:	f7ff f9ec 	bl	8002498 <GPIO_WriteBit>
 80030c0:	2201      	movs	r2, #1
 80030c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80030c6:	4854      	ldr	r0, [pc, #336]	; (8003218 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80030c8:	f7ff f9e6 	bl	8002498 <GPIO_WriteBit>
 80030cc:	2201      	movs	r2, #1
 80030ce:	f44f 7180 	mov.w	r1, #256	; 0x100
 80030d2:	4850      	ldr	r0, [pc, #320]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80030d4:	f7ff f9e0 	bl	8002498 <GPIO_WriteBit>
 80030d8:	e097      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80030da:	893b      	ldrh	r3, [r7, #8]
 80030dc:	4618      	mov	r0, r3
 80030de:	f7ff ff35 	bl	8002f4c <delayMicroseconds>
 80030e2:	e092      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80030e4:	893b      	ldrh	r3, [r7, #8]
 80030e6:	b2db      	uxtb	r3, r3
 80030e8:	461a      	mov	r2, r3
 80030ea:	2180      	movs	r1, #128	; 0x80
 80030ec:	484b      	ldr	r0, [pc, #300]	; (800321c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 80030ee:	f7ff f9d3 	bl	8002498 <GPIO_WriteBit>
 80030f2:	e08a      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80030f4:	893b      	ldrh	r3, [r7, #8]
 80030f6:	b2db      	uxtb	r3, r3
 80030f8:	461a      	mov	r2, r3
 80030fa:	2140      	movs	r1, #64	; 0x40
 80030fc:	4846      	ldr	r0, [pc, #280]	; (8003218 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80030fe:	f7ff f9cb 	bl	8002498 <GPIO_WriteBit>
 8003102:	e082      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003104:	893b      	ldrh	r3, [r7, #8]
 8003106:	b2db      	uxtb	r3, r3
 8003108:	461a      	mov	r2, r3
 800310a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800310e:	4841      	ldr	r0, [pc, #260]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003110:	f7ff f9c2 	bl	8002498 <GPIO_WriteBit>
 8003114:	e079      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003116:	893b      	ldrh	r3, [r7, #8]
 8003118:	b2db      	uxtb	r3, r3
 800311a:	4619      	mov	r1, r3
 800311c:	68f8      	ldr	r0, [r7, #12]
 800311e:	f7ff ff4f 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 8003122:	e072      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	781b      	ldrb	r3, [r3, #0]
 8003128:	4619      	mov	r1, r3
 800312a:	68f8      	ldr	r0, [r7, #12]
 800312c:	f7ff ff48 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 8003130:	893b      	ldrh	r3, [r7, #8]
 8003132:	3b01      	subs	r3, #1
 8003134:	813b      	strh	r3, [r7, #8]
 8003136:	893b      	ldrh	r3, [r7, #8]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d1f3      	bne.n	8003124 <ucg_com_arduino_generic_SW_SPI+0xf0>
 800313c:	e065      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	781b      	ldrb	r3, [r3, #0]
 8003142:	4619      	mov	r1, r3
 8003144:	68f8      	ldr	r0, [r7, #12]
 8003146:	f7ff ff3b 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	3301      	adds	r3, #1
 800314e:	781b      	ldrb	r3, [r3, #0]
 8003150:	4619      	mov	r1, r3
 8003152:	68f8      	ldr	r0, [r7, #12]
 8003154:	f7ff ff34 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 8003158:	893b      	ldrh	r3, [r7, #8]
 800315a:	3b01      	subs	r3, #1
 800315c:	813b      	strh	r3, [r7, #8]
 800315e:	893b      	ldrh	r3, [r7, #8]
 8003160:	2b00      	cmp	r3, #0
 8003162:	d1ec      	bne.n	800313e <ucg_com_arduino_generic_SW_SPI+0x10a>
 8003164:	e051      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	781b      	ldrb	r3, [r3, #0]
 800316a:	4619      	mov	r1, r3
 800316c:	68f8      	ldr	r0, [r7, #12]
 800316e:	f7ff ff27 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	3301      	adds	r3, #1
 8003176:	781b      	ldrb	r3, [r3, #0]
 8003178:	4619      	mov	r1, r3
 800317a:	68f8      	ldr	r0, [r7, #12]
 800317c:	f7ff ff20 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	3302      	adds	r3, #2
 8003184:	781b      	ldrb	r3, [r3, #0]
 8003186:	4619      	mov	r1, r3
 8003188:	68f8      	ldr	r0, [r7, #12]
 800318a:	f7ff ff19 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 800318e:	893b      	ldrh	r3, [r7, #8]
 8003190:	3b01      	subs	r3, #1
 8003192:	813b      	strh	r3, [r7, #8]
 8003194:	893b      	ldrh	r3, [r7, #8]
 8003196:	2b00      	cmp	r3, #0
 8003198:	d1e5      	bne.n	8003166 <ucg_com_arduino_generic_SW_SPI+0x132>
 800319a:	e036      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	1c5a      	adds	r2, r3, #1
 80031a0:	607a      	str	r2, [r7, #4]
 80031a2:	781b      	ldrb	r3, [r3, #0]
 80031a4:	4619      	mov	r1, r3
 80031a6:	68f8      	ldr	r0, [r7, #12]
 80031a8:	f7ff ff0a 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 80031ac:	893b      	ldrh	r3, [r7, #8]
 80031ae:	3b01      	subs	r3, #1
 80031b0:	813b      	strh	r3, [r7, #8]
 80031b2:	893b      	ldrh	r3, [r7, #8]
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d1f1      	bne.n	800319c <ucg_com_arduino_generic_SW_SPI+0x168>
 80031b8:	e027      	b.n	800320a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	781b      	ldrb	r3, [r3, #0]
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d010      	beq.n	80031e4 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	781b      	ldrb	r3, [r3, #0]
 80031c6:	2b01      	cmp	r3, #1
 80031c8:	d106      	bne.n	80031d8 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 80031ca:	2200      	movs	r2, #0
 80031cc:	f44f 7100 	mov.w	r1, #512	; 0x200
 80031d0:	4810      	ldr	r0, [pc, #64]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80031d2:	f7ff f961 	bl	8002498 <GPIO_WriteBit>
 80031d6:	e005      	b.n	80031e4 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 80031d8:	2201      	movs	r2, #1
 80031da:	f44f 7100 	mov.w	r1, #512	; 0x200
 80031de:	480d      	ldr	r0, [pc, #52]	; (8003214 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80031e0:	f7ff f95a 	bl	8002498 <GPIO_WriteBit>
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	3301      	adds	r3, #1
 80031e8:	607b      	str	r3, [r7, #4]
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	781b      	ldrb	r3, [r3, #0]
 80031ee:	4619      	mov	r1, r3
 80031f0:	68f8      	ldr	r0, [r7, #12]
 80031f2:	f7ff fee5 	bl	8002fc0 <ucg_com_arduino_send_generic_SW_SPI>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	3301      	adds	r3, #1
 80031fa:	607b      	str	r3, [r7, #4]
 80031fc:	893b      	ldrh	r3, [r7, #8]
 80031fe:	3b01      	subs	r3, #1
 8003200:	813b      	strh	r3, [r7, #8]
 8003202:	893b      	ldrh	r3, [r7, #8]
 8003204:	2b00      	cmp	r3, #0
 8003206:	d1d8      	bne.n	80031ba <ucg_com_arduino_generic_SW_SPI+0x186>
 8003208:	bf00      	nop
 800320a:	2301      	movs	r3, #1
 800320c:	4618      	mov	r0, r3
 800320e:	3710      	adds	r7, #16
 8003210:	46bd      	mov	sp, r7
 8003212:	bd80      	pop	{r7, pc}
 8003214:	40020000 	.word	0x40020000
 8003218:	40020400 	.word	0x40020400
 800321c:	40020800 	.word	0x40020800

08003220 <Ucglib4WireSWSPI_begin>:
 8003220:	b580      	push	{r7, lr}
 8003222:	b082      	sub	sp, #8
 8003224:	af00      	add	r7, sp, #0
 8003226:	6078      	str	r0, [r7, #4]
 8003228:	460b      	mov	r3, r1
 800322a:	70fb      	strb	r3, [r7, #3]
 800322c:	4b07      	ldr	r3, [pc, #28]	; (800324c <Ucglib4WireSWSPI_begin+0x2c>)
 800322e:	4a08      	ldr	r2, [pc, #32]	; (8003250 <Ucglib4WireSWSPI_begin+0x30>)
 8003230:	4908      	ldr	r1, [pc, #32]	; (8003254 <Ucglib4WireSWSPI_begin+0x34>)
 8003232:	6878      	ldr	r0, [r7, #4]
 8003234:	f001 f9a2 	bl	800457c <ucg_Init>
 8003238:	78fb      	ldrb	r3, [r7, #3]
 800323a:	4619      	mov	r1, r3
 800323c:	6878      	ldr	r0, [r7, #4]
 800323e:	f000 ff86 	bl	800414e <ucg_SetFontMode>
 8003242:	bf00      	nop
 8003244:	3708      	adds	r7, #8
 8003246:	46bd      	mov	sp, r7
 8003248:	bd80      	pop	{r7, pc}
 800324a:	bf00      	nop
 800324c:	08003035 	.word	0x08003035
 8003250:	0800388d 	.word	0x0800388d
 8003254:	080039b5 	.word	0x080039b5

08003258 <ucg_DrawBox>:
 8003258:	b580      	push	{r7, lr}
 800325a:	b084      	sub	sp, #16
 800325c:	af00      	add	r7, sp, #0
 800325e:	60f8      	str	r0, [r7, #12]
 8003260:	4608      	mov	r0, r1
 8003262:	4611      	mov	r1, r2
 8003264:	461a      	mov	r2, r3
 8003266:	4603      	mov	r3, r0
 8003268:	817b      	strh	r3, [r7, #10]
 800326a:	460b      	mov	r3, r1
 800326c:	813b      	strh	r3, [r7, #8]
 800326e:	4613      	mov	r3, r2
 8003270:	80fb      	strh	r3, [r7, #6]
 8003272:	e014      	b.n	800329e <ucg_DrawBox+0x46>
 8003274:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003278:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800327c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003280:	68f8      	ldr	r0, [r7, #12]
 8003282:	f001 f9ed 	bl	8004660 <ucg_DrawHLine>
 8003286:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 800328a:	b29b      	uxth	r3, r3
 800328c:	3b01      	subs	r3, #1
 800328e:	b29b      	uxth	r3, r3
 8003290:	833b      	strh	r3, [r7, #24]
 8003292:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8003296:	b29b      	uxth	r3, r3
 8003298:	3301      	adds	r3, #1
 800329a:	b29b      	uxth	r3, r3
 800329c:	813b      	strh	r3, [r7, #8]
 800329e:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	dce6      	bgt.n	8003274 <ucg_DrawBox+0x1c>
 80032a6:	bf00      	nop
 80032a8:	3710      	adds	r7, #16
 80032aa:	46bd      	mov	sp, r7
 80032ac:	bd80      	pop	{r7, pc}

080032ae <ucg_ClearScreen>:
 80032ae:	b580      	push	{r7, lr}
 80032b0:	b084      	sub	sp, #16
 80032b2:	af02      	add	r7, sp, #8
 80032b4:	6078      	str	r0, [r7, #4]
 80032b6:	2300      	movs	r3, #0
 80032b8:	9300      	str	r3, [sp, #0]
 80032ba:	2300      	movs	r3, #0
 80032bc:	2200      	movs	r2, #0
 80032be:	2100      	movs	r1, #0
 80032c0:	6878      	ldr	r0, [r7, #4]
 80032c2:	f001 f9ec 	bl	800469e <ucg_SetColor>
 80032c6:	6878      	ldr	r0, [r7, #4]
 80032c8:	f000 fb3b 	bl	8003942 <ucg_SetMaxClipRange>
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80032d8:	9300      	str	r3, [sp, #0]
 80032da:	4613      	mov	r3, r2
 80032dc:	2200      	movs	r2, #0
 80032de:	2100      	movs	r1, #0
 80032e0:	6878      	ldr	r0, [r7, #4]
 80032e2:	f7ff ffb9 	bl	8003258 <ucg_DrawBox>
 80032e6:	23ff      	movs	r3, #255	; 0xff
 80032e8:	9300      	str	r3, [sp, #0]
 80032ea:	23ff      	movs	r3, #255	; 0xff
 80032ec:	22ff      	movs	r2, #255	; 0xff
 80032ee:	2100      	movs	r1, #0
 80032f0:	6878      	ldr	r0, [r7, #4]
 80032f2:	f001 f9d4 	bl	800469e <ucg_SetColor>
 80032f6:	bf00      	nop
 80032f8:	3708      	adds	r7, #8
 80032fa:	46bd      	mov	sp, r7
 80032fc:	bd80      	pop	{r7, pc}

080032fe <ucg_ccs_init>:
 80032fe:	b480      	push	{r7}
 8003300:	b083      	sub	sp, #12
 8003302:	af00      	add	r7, sp, #0
 8003304:	6078      	str	r0, [r7, #4]
 8003306:	4608      	mov	r0, r1
 8003308:	4611      	mov	r1, r2
 800330a:	461a      	mov	r2, r3
 800330c:	4603      	mov	r3, r0
 800330e:	70fb      	strb	r3, [r7, #3]
 8003310:	460b      	mov	r3, r1
 8003312:	70bb      	strb	r3, [r7, #2]
 8003314:	4613      	mov	r3, r2
 8003316:	803b      	strh	r3, [r7, #0]
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	78fa      	ldrb	r2, [r7, #3]
 800331c:	705a      	strb	r2, [r3, #1]
 800331e:	78bb      	ldrb	r3, [r7, #2]
 8003320:	b29a      	uxth	r2, r3
 8003322:	78fb      	ldrb	r3, [r7, #3]
 8003324:	b29b      	uxth	r3, r3
 8003326:	1ad3      	subs	r3, r2, r3
 8003328:	b29b      	uxth	r3, r3
 800332a:	b21a      	sxth	r2, r3
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	809a      	strh	r2, [r3, #4]
 8003330:	883b      	ldrh	r3, [r7, #0]
 8003332:	3b01      	subs	r3, #1
 8003334:	b29b      	uxth	r3, r3
 8003336:	b21a      	sxth	r2, r3
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	811a      	strh	r2, [r3, #8]
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	2201      	movs	r2, #1
 8003340:	805a      	strh	r2, [r3, #2]
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003348:	461a      	mov	r2, r3
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003350:	fb92 f3f3 	sdiv	r3, r2, r3
 8003354:	b21a      	sxth	r2, r3
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	80da      	strh	r2, [r3, #6]
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003360:	2b00      	cmp	r3, #0
 8003362:	da0c      	bge.n	800337e <ucg_ccs_init+0x80>
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800336a:	b29b      	uxth	r3, r3
 800336c:	425b      	negs	r3, r3
 800336e:	b29b      	uxth	r3, r3
 8003370:	b21a      	sxth	r2, r3
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	809a      	strh	r2, [r3, #4]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800337c:	805a      	strh	r2, [r3, #2]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003384:	687a      	ldr	r2, [r7, #4]
 8003386:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800338a:	fb93 f1f2 	sdiv	r1, r3, r2
 800338e:	fb02 f201 	mul.w	r2, r2, r1
 8003392:	1a9b      	subs	r3, r3, r2
 8003394:	b21a      	sxth	r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	815a      	strh	r2, [r3, #10]
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80033a0:	0fda      	lsrs	r2, r3, #31
 80033a2:	4413      	add	r3, r2
 80033a4:	105b      	asrs	r3, r3, #1
 80033a6:	b21a      	sxth	r2, r3
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	819a      	strh	r2, [r3, #12]
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	78fa      	ldrb	r2, [r7, #3]
 80033b0:	701a      	strb	r2, [r3, #0]
 80033b2:	bf00      	nop
 80033b4:	370c      	adds	r7, #12
 80033b6:	46bd      	mov	sp, r7
 80033b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033bc:	4770      	bx	lr

080033be <ucg_ccs_step>:
 80033be:	b480      	push	{r7}
 80033c0:	b083      	sub	sp, #12
 80033c2:	af00      	add	r7, sp, #0
 80033c4:	6078      	str	r0, [r7, #4]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	781a      	ldrb	r2, [r3, #0]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80033d0:	b2db      	uxtb	r3, r3
 80033d2:	4413      	add	r3, r2
 80033d4:	b2da      	uxtb	r2, r3
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	701a      	strb	r2, [r3, #0]
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80033e0:	b29a      	uxth	r2, r3
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80033e8:	b29b      	uxth	r3, r3
 80033ea:	4413      	add	r3, r2
 80033ec:	b29b      	uxth	r3, r3
 80033ee:	b21a      	sxth	r2, r3
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	819a      	strh	r2, [r3, #12]
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003400:	429a      	cmp	r2, r3
 8003402:	db16      	blt.n	8003432 <ucg_ccs_step+0x74>
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	781a      	ldrb	r2, [r3, #0]
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800340e:	b2db      	uxtb	r3, r3
 8003410:	4413      	add	r3, r2
 8003412:	b2da      	uxtb	r2, r3
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	701a      	strb	r2, [r3, #0]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 800341e:	b29a      	uxth	r2, r3
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003426:	b29b      	uxth	r3, r3
 8003428:	1ad3      	subs	r3, r2, r3
 800342a:	b29b      	uxth	r3, r3
 800342c:	b21a      	sxth	r2, r3
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	819a      	strh	r2, [r3, #12]
 8003432:	bf00      	nop
 8003434:	370c      	adds	r7, #12
 8003436:	46bd      	mov	sp, r7
 8003438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800343c:	4770      	bx	lr

0800343e <ucg_ccs_seek>:
 800343e:	b480      	push	{r7}
 8003440:	b085      	sub	sp, #20
 8003442:	af00      	add	r7, sp, #0
 8003444:	6078      	str	r0, [r7, #4]
 8003446:	460b      	mov	r3, r1
 8003448:	807b      	strh	r3, [r7, #2]
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003450:	b2da      	uxtb	r2, r3
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	701a      	strb	r2, [r3, #0]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	781a      	ldrb	r2, [r3, #0]
 800345a:	887b      	ldrh	r3, [r7, #2]
 800345c:	b2db      	uxtb	r3, r3
 800345e:	fb12 f303 	smulbb	r3, r2, r3
 8003462:	b2da      	uxtb	r2, r3
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	701a      	strb	r2, [r3, #0]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800346e:	b29a      	uxth	r2, r3
 8003470:	887b      	ldrh	r3, [r7, #2]
 8003472:	fb12 f303 	smulbb	r3, r2, r3
 8003476:	b29a      	uxth	r2, r3
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800347e:	0fd9      	lsrs	r1, r3, #31
 8003480:	440b      	add	r3, r1
 8003482:	105b      	asrs	r3, r3, #1
 8003484:	b21b      	sxth	r3, r3
 8003486:	b29b      	uxth	r3, r3
 8003488:	4413      	add	r3, r2
 800348a:	b29b      	uxth	r3, r3
 800348c:	81fb      	strh	r3, [r7, #14]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003494:	2b00      	cmp	r3, #0
 8003496:	db0e      	blt.n	80034b6 <ucg_ccs_seek+0x78>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	781a      	ldrb	r2, [r3, #0]
 800349c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80034a0:	6879      	ldr	r1, [r7, #4]
 80034a2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80034a6:	fb93 f3f1 	sdiv	r3, r3, r1
 80034aa:	b2db      	uxtb	r3, r3
 80034ac:	4413      	add	r3, r2
 80034ae:	b2da      	uxtb	r2, r3
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	701a      	strb	r2, [r3, #0]
 80034b4:	e00d      	b.n	80034d2 <ucg_ccs_seek+0x94>
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	781a      	ldrb	r2, [r3, #0]
 80034ba:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80034be:	6879      	ldr	r1, [r7, #4]
 80034c0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80034c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80034c8:	b2db      	uxtb	r3, r3
 80034ca:	1ad3      	subs	r3, r2, r3
 80034cc:	b2da      	uxtb	r2, r3
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	701a      	strb	r2, [r3, #0]
 80034d2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80034d6:	687a      	ldr	r2, [r7, #4]
 80034d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80034dc:	fb93 f1f2 	sdiv	r1, r3, r2
 80034e0:	fb02 f201 	mul.w	r2, r2, r1
 80034e4:	1a9b      	subs	r3, r3, r2
 80034e6:	b21a      	sxth	r2, r3
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	819a      	strh	r2, [r3, #12]
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	781a      	ldrb	r2, [r3, #0]
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	785b      	ldrb	r3, [r3, #1]
 80034f4:	4413      	add	r3, r2
 80034f6:	b2da      	uxtb	r2, r3
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	701a      	strb	r2, [r3, #0]
 80034fc:	bf00      	nop
 80034fe:	3714      	adds	r7, #20
 8003500:	46bd      	mov	sp, r7
 8003502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003506:	4770      	bx	lr

08003508 <ucg_dev_default_cb>:
 8003508:	b580      	push	{r7, lr}
 800350a:	b084      	sub	sp, #16
 800350c:	af00      	add	r7, sp, #0
 800350e:	60f8      	str	r0, [r7, #12]
 8003510:	460b      	mov	r3, r1
 8003512:	607a      	str	r2, [r7, #4]
 8003514:	817b      	strh	r3, [r7, #10]
 8003516:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800351a:	2b0c      	cmp	r3, #12
 800351c:	d00a      	beq.n	8003534 <ucg_dev_default_cb+0x2c>
 800351e:	2b17      	cmp	r3, #23
 8003520:	d10f      	bne.n	8003542 <ucg_dev_default_cb+0x3a>
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	68db      	ldr	r3, [r3, #12]
 8003526:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800352a:	687a      	ldr	r2, [r7, #4]
 800352c:	68f8      	ldr	r0, [r7, #12]
 800352e:	4798      	blx	r3
 8003530:	4603      	mov	r3, r0
 8003532:	e007      	b.n	8003544 <ucg_dev_default_cb+0x3c>
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	687a      	ldr	r2, [r7, #4]
 8003538:	3370      	adds	r3, #112	; 0x70
 800353a:	6810      	ldr	r0, [r2, #0]
 800353c:	6851      	ldr	r1, [r2, #4]
 800353e:	c303      	stmia	r3!, {r0, r1}
 8003540:	bf00      	nop
 8003542:	2301      	movs	r3, #1
 8003544:	4618      	mov	r0, r3
 8003546:	3710      	adds	r7, #16
 8003548:	46bd      	mov	sp, r7
 800354a:	bd80      	pop	{r7, pc}

0800354c <ucg_ext_none>:
 800354c:	b480      	push	{r7}
 800354e:	b085      	sub	sp, #20
 8003550:	af00      	add	r7, sp, #0
 8003552:	60f8      	str	r0, [r7, #12]
 8003554:	460b      	mov	r3, r1
 8003556:	607a      	str	r2, [r7, #4]
 8003558:	817b      	strh	r3, [r7, #10]
 800355a:	2301      	movs	r3, #1
 800355c:	4618      	mov	r0, r3
 800355e:	3714      	adds	r7, #20
 8003560:	46bd      	mov	sp, r7
 8003562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003566:	4770      	bx	lr

08003568 <ucg_handle_st7735_l90fx>:
 8003568:	b590      	push	{r4, r7, lr}
 800356a:	b085      	sub	sp, #20
 800356c:	af00      	add	r7, sp, #0
 800356e:	6078      	str	r0, [r7, #4]
 8003570:	6878      	ldr	r0, [r7, #4]
 8003572:	f001 fb55 	bl	8004c20 <ucg_clip_l90fx>
 8003576:	4603      	mov	r3, r0
 8003578:	2b00      	cmp	r3, #0
 800357a:	d053      	beq.n	8003624 <ucg_handle_st7735_l90fx+0xbc>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003582:	2b01      	cmp	r3, #1
 8003584:	d008      	beq.n	8003598 <ucg_handle_st7735_l90fx+0x30>
 8003586:	2b02      	cmp	r3, #2
 8003588:	d00b      	beq.n	80035a2 <ucg_handle_st7735_l90fx+0x3a>
 800358a:	2b00      	cmp	r3, #0
 800358c:	d11b      	bne.n	80035c6 <ucg_handle_st7735_l90fx+0x5e>
 800358e:	4928      	ldr	r1, [pc, #160]	; (8003630 <ucg_handle_st7735_l90fx+0xc8>)
 8003590:	6878      	ldr	r0, [r7, #4]
 8003592:	f001 fe73 	bl	800527c <ucg_com_SendCmdSeq>
 8003596:	e028      	b.n	80035ea <ucg_handle_st7735_l90fx+0x82>
 8003598:	4926      	ldr	r1, [pc, #152]	; (8003634 <ucg_handle_st7735_l90fx+0xcc>)
 800359a:	6878      	ldr	r0, [r7, #4]
 800359c:	f001 fe6e 	bl	800527c <ucg_com_SendCmdSeq>
 80035a0:	e023      	b.n	80035ea <ucg_handle_st7735_l90fx+0x82>
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80035a6:	81fb      	strh	r3, [r7, #14]
 80035a8:	89fb      	ldrh	r3, [r7, #14]
 80035aa:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80035ae:	b29b      	uxth	r3, r3
 80035b0:	b21a      	sxth	r2, r3
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	849a      	strh	r2, [r3, #36]	; 0x24
 80035b6:	4920      	ldr	r1, [pc, #128]	; (8003638 <ucg_handle_st7735_l90fx+0xd0>)
 80035b8:	6878      	ldr	r0, [r7, #4]
 80035ba:	f001 fe5f 	bl	800527c <ucg_com_SendCmdSeq>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	89fa      	ldrh	r2, [r7, #14]
 80035c2:	849a      	strh	r2, [r3, #36]	; 0x24
 80035c4:	e011      	b.n	80035ea <ucg_handle_st7735_l90fx+0x82>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80035ca:	81fb      	strh	r3, [r7, #14]
 80035cc:	89fb      	ldrh	r3, [r7, #14]
 80035ce:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80035d2:	b29b      	uxth	r3, r3
 80035d4:	b21a      	sxth	r2, r3
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	84da      	strh	r2, [r3, #38]	; 0x26
 80035da:	4918      	ldr	r1, [pc, #96]	; (800363c <ucg_handle_st7735_l90fx+0xd4>)
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	f001 fe4d 	bl	800527c <ucg_com_SendCmdSeq>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	89fa      	ldrh	r2, [r7, #14]
 80035e6:	84da      	strh	r2, [r3, #38]	; 0x26
 80035e8:	bf00      	nop
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80035f0:	723b      	strb	r3, [r7, #8]
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80035f8:	727b      	strb	r3, [r7, #9]
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8003600:	72bb      	strb	r3, [r7, #10]
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	69dc      	ldr	r4, [r3, #28]
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800360c:	b29a      	uxth	r2, r3
 800360e:	f107 0308 	add.w	r3, r7, #8
 8003612:	2113      	movs	r1, #19
 8003614:	6878      	ldr	r0, [r7, #4]
 8003616:	47a0      	blx	r4
 8003618:	2101      	movs	r1, #1
 800361a:	6878      	ldr	r0, [r7, #4]
 800361c:	f001 fd7a 	bl	8005114 <ucg_com_SetCSLineStatus>
 8003620:	2301      	movs	r3, #1
 8003622:	e000      	b.n	8003626 <ucg_handle_st7735_l90fx+0xbe>
 8003624:	2300      	movs	r3, #0
 8003626:	4618      	mov	r0, r3
 8003628:	3714      	adds	r7, #20
 800362a:	46bd      	mov	sp, r7
 800362c:	bd90      	pop	{r4, r7, pc}
 800362e:	bf00      	nop
 8003630:	08005e2c 	.word	0x08005e2c
 8003634:	08005e4c 	.word	0x08005e4c
 8003638:	08005e70 	.word	0x08005e70
 800363c:	08005e94 	.word	0x08005e94

08003640 <ucg_handle_st7735_l90se>:
 8003640:	b590      	push	{r4, r7, lr}
 8003642:	b087      	sub	sp, #28
 8003644:	af00      	add	r7, sp, #0
 8003646:	6078      	str	r0, [r7, #4]
 8003648:	2300      	movs	r3, #0
 800364a:	75fb      	strb	r3, [r7, #23]
 800364c:	e01a      	b.n	8003684 <ucg_handle_st7735_l90se+0x44>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8003654:	7dfa      	ldrb	r2, [r7, #23]
 8003656:	4613      	mov	r3, r2
 8003658:	00db      	lsls	r3, r3, #3
 800365a:	1a9b      	subs	r3, r3, r2
 800365c:	005b      	lsls	r3, r3, #1
 800365e:	18c8      	adds	r0, r1, r3
 8003660:	7dfb      	ldrb	r3, [r7, #23]
 8003662:	687a      	ldr	r2, [r7, #4]
 8003664:	4413      	add	r3, r2
 8003666:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 800366a:	7dfb      	ldrb	r3, [r7, #23]
 800366c:	687a      	ldr	r2, [r7, #4]
 800366e:	4413      	add	r3, r2
 8003670:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800367a:	f7ff fe40 	bl	80032fe <ucg_ccs_init>
 800367e:	7dfb      	ldrb	r3, [r7, #23]
 8003680:	3301      	adds	r3, #1
 8003682:	75fb      	strb	r3, [r7, #23]
 8003684:	7dfb      	ldrb	r3, [r7, #23]
 8003686:	2b02      	cmp	r3, #2
 8003688:	d9e1      	bls.n	800364e <ucg_handle_st7735_l90se+0xe>
 800368a:	6878      	ldr	r0, [r7, #4]
 800368c:	f001 fc48 	bl	8004f20 <ucg_clip_l90se>
 8003690:	4603      	mov	r3, r0
 8003692:	2b00      	cmp	r3, #0
 8003694:	d071      	beq.n	800377a <ucg_handle_st7735_l90se+0x13a>
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 800369c:	2b01      	cmp	r3, #1
 800369e:	d008      	beq.n	80036b2 <ucg_handle_st7735_l90se+0x72>
 80036a0:	2b02      	cmp	r3, #2
 80036a2:	d00b      	beq.n	80036bc <ucg_handle_st7735_l90se+0x7c>
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d11b      	bne.n	80036e0 <ucg_handle_st7735_l90se+0xa0>
 80036a8:	4936      	ldr	r1, [pc, #216]	; (8003784 <ucg_handle_st7735_l90se+0x144>)
 80036aa:	6878      	ldr	r0, [r7, #4]
 80036ac:	f001 fde6 	bl	800527c <ucg_com_SendCmdSeq>
 80036b0:	e028      	b.n	8003704 <ucg_handle_st7735_l90se+0xc4>
 80036b2:	4935      	ldr	r1, [pc, #212]	; (8003788 <ucg_handle_st7735_l90se+0x148>)
 80036b4:	6878      	ldr	r0, [r7, #4]
 80036b6:	f001 fde1 	bl	800527c <ucg_com_SendCmdSeq>
 80036ba:	e023      	b.n	8003704 <ucg_handle_st7735_l90se+0xc4>
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80036c0:	827b      	strh	r3, [r7, #18]
 80036c2:	8a7b      	ldrh	r3, [r7, #18]
 80036c4:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80036c8:	b29b      	uxth	r3, r3
 80036ca:	b21a      	sxth	r2, r3
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	849a      	strh	r2, [r3, #36]	; 0x24
 80036d0:	492e      	ldr	r1, [pc, #184]	; (800378c <ucg_handle_st7735_l90se+0x14c>)
 80036d2:	6878      	ldr	r0, [r7, #4]
 80036d4:	f001 fdd2 	bl	800527c <ucg_com_SendCmdSeq>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	8a7a      	ldrh	r2, [r7, #18]
 80036dc:	849a      	strh	r2, [r3, #36]	; 0x24
 80036de:	e011      	b.n	8003704 <ucg_handle_st7735_l90se+0xc4>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80036e4:	827b      	strh	r3, [r7, #18]
 80036e6:	8a7b      	ldrh	r3, [r7, #18]
 80036e8:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80036ec:	b29b      	uxth	r3, r3
 80036ee:	b21a      	sxth	r2, r3
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	84da      	strh	r2, [r3, #38]	; 0x26
 80036f4:	4926      	ldr	r1, [pc, #152]	; (8003790 <ucg_handle_st7735_l90se+0x150>)
 80036f6:	6878      	ldr	r0, [r7, #4]
 80036f8:	f001 fdc0 	bl	800527c <ucg_com_SendCmdSeq>
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	8a7a      	ldrh	r2, [r7, #18]
 8003700:	84da      	strh	r2, [r3, #38]	; 0x26
 8003702:	bf00      	nop
 8003704:	2300      	movs	r3, #0
 8003706:	82bb      	strh	r3, [r7, #20]
 8003708:	e02a      	b.n	8003760 <ucg_handle_st7735_l90se+0x120>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8003710:	733b      	strb	r3, [r7, #12]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8003718:	737b      	strb	r3, [r7, #13]
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8003720:	73bb      	strb	r3, [r7, #14]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	69dc      	ldr	r4, [r3, #28]
 8003726:	f107 030c 	add.w	r3, r7, #12
 800372a:	2201      	movs	r2, #1
 800372c:	2113      	movs	r1, #19
 800372e:	6878      	ldr	r0, [r7, #4]
 8003730:	47a0      	blx	r4
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	3346      	adds	r3, #70	; 0x46
 8003736:	4618      	mov	r0, r3
 8003738:	f7ff fe41 	bl	80033be <ucg_ccs_step>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	3346      	adds	r3, #70	; 0x46
 8003740:	330e      	adds	r3, #14
 8003742:	4618      	mov	r0, r3
 8003744:	f7ff fe3b 	bl	80033be <ucg_ccs_step>
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	3346      	adds	r3, #70	; 0x46
 800374c:	331c      	adds	r3, #28
 800374e:	4618      	mov	r0, r3
 8003750:	f7ff fe35 	bl	80033be <ucg_ccs_step>
 8003754:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8003758:	b29b      	uxth	r3, r3
 800375a:	3301      	adds	r3, #1
 800375c:	b29b      	uxth	r3, r3
 800375e:	82bb      	strh	r3, [r7, #20]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003766:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800376a:	429a      	cmp	r2, r3
 800376c:	dbcd      	blt.n	800370a <ucg_handle_st7735_l90se+0xca>
 800376e:	2101      	movs	r1, #1
 8003770:	6878      	ldr	r0, [r7, #4]
 8003772:	f001 fccf 	bl	8005114 <ucg_com_SetCSLineStatus>
 8003776:	2301      	movs	r3, #1
 8003778:	e000      	b.n	800377c <ucg_handle_st7735_l90se+0x13c>
 800377a:	2300      	movs	r3, #0
 800377c:	4618      	mov	r0, r3
 800377e:	371c      	adds	r7, #28
 8003780:	46bd      	mov	sp, r7
 8003782:	bd90      	pop	{r4, r7, pc}
 8003784:	08005e2c 	.word	0x08005e2c
 8003788:	08005e4c 	.word	0x08005e4c
 800378c:	08005e70 	.word	0x08005e70
 8003790:	08005e94 	.word	0x08005e94

08003794 <ucg_dev_ic_st7735_18>:
 8003794:	b590      	push	{r4, r7, lr}
 8003796:	b087      	sub	sp, #28
 8003798:	af00      	add	r7, sp, #0
 800379a:	60f8      	str	r0, [r7, #12]
 800379c:	460b      	mov	r3, r1
 800379e:	607a      	str	r2, [r7, #4]
 80037a0:	817b      	strh	r3, [r7, #10]
 80037a2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80037a6:	3b0a      	subs	r3, #10
 80037a8:	2b0b      	cmp	r3, #11
 80037aa:	d85f      	bhi.n	800386c <ucg_dev_ic_st7735_18+0xd8>
 80037ac:	a201      	add	r2, pc, #4	; (adr r2, 80037b4 <ucg_dev_ic_st7735_18+0x20>)
 80037ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80037b2:	bf00      	nop
 80037b4:	080037e5 	.word	0x080037e5
 80037b8:	080037ff 	.word	0x080037ff
 80037bc:	0800386d 	.word	0x0800386d
 80037c0:	0800386d 	.word	0x0800386d
 80037c4:	0800386d 	.word	0x0800386d
 80037c8:	0800380b 	.word	0x0800380b
 80037cc:	0800386d 	.word	0x0800386d
 80037d0:	0800386d 	.word	0x0800386d
 80037d4:	0800386d 	.word	0x0800386d
 80037d8:	0800386d 	.word	0x0800386d
 80037dc:	0800381b 	.word	0x0800381b
 80037e0:	08003863 	.word	0x08003863
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	2202      	movs	r2, #2
 80037e8:	841a      	strh	r2, [r3, #32]
 80037ea:	68fb      	ldr	r3, [r7, #12]
 80037ec:	2201      	movs	r2, #1
 80037ee:	845a      	strh	r2, [r3, #34]	; 0x22
 80037f0:	2242      	movs	r2, #66	; 0x42
 80037f2:	2164      	movs	r1, #100	; 0x64
 80037f4:	68f8      	ldr	r0, [r7, #12]
 80037f6:	f001 fbdc 	bl	8004fb2 <ucg_com_PowerUp>
 80037fa:	4603      	mov	r3, r0
 80037fc:	e03e      	b.n	800387c <ucg_dev_ic_st7735_18+0xe8>
 80037fe:	4921      	ldr	r1, [pc, #132]	; (8003884 <ucg_dev_ic_st7735_18+0xf0>)
 8003800:	68f8      	ldr	r0, [r7, #12]
 8003802:	f001 fd3b 	bl	800527c <ucg_com_SendCmdSeq>
 8003806:	2301      	movs	r3, #1
 8003808:	e038      	b.n	800387c <ucg_dev_ic_st7735_18+0xe8>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	2280      	movs	r2, #128	; 0x80
 800380e:	801a      	strh	r2, [r3, #0]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	2280      	movs	r2, #128	; 0x80
 8003814:	805a      	strh	r2, [r3, #2]
 8003816:	2301      	movs	r3, #1
 8003818:	e030      	b.n	800387c <ucg_dev_ic_st7735_18+0xe8>
 800381a:	68f8      	ldr	r0, [r7, #12]
 800381c:	f001 f9e7 	bl	8004bee <ucg_clip_is_pixel_visible>
 8003820:	4603      	mov	r3, r0
 8003822:	2b00      	cmp	r3, #0
 8003824:	d01b      	beq.n	800385e <ucg_dev_ic_st7735_18+0xca>
 8003826:	4918      	ldr	r1, [pc, #96]	; (8003888 <ucg_dev_ic_st7735_18+0xf4>)
 8003828:	68f8      	ldr	r0, [r7, #12]
 800382a:	f001 fd27 	bl	800527c <ucg_com_SendCmdSeq>
 800382e:	68fb      	ldr	r3, [r7, #12]
 8003830:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8003834:	753b      	strb	r3, [r7, #20]
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800383c:	757b      	strb	r3, [r7, #21]
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8003844:	75bb      	strb	r3, [r7, #22]
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	69dc      	ldr	r4, [r3, #28]
 800384a:	f107 0314 	add.w	r3, r7, #20
 800384e:	2201      	movs	r2, #1
 8003850:	2113      	movs	r1, #19
 8003852:	68f8      	ldr	r0, [r7, #12]
 8003854:	47a0      	blx	r4
 8003856:	2101      	movs	r1, #1
 8003858:	68f8      	ldr	r0, [r7, #12]
 800385a:	f001 fc5b 	bl	8005114 <ucg_com_SetCSLineStatus>
 800385e:	2301      	movs	r3, #1
 8003860:	e00c      	b.n	800387c <ucg_dev_ic_st7735_18+0xe8>
 8003862:	68f8      	ldr	r0, [r7, #12]
 8003864:	f7ff fe80 	bl	8003568 <ucg_handle_st7735_l90fx>
 8003868:	2301      	movs	r3, #1
 800386a:	e007      	b.n	800387c <ucg_dev_ic_st7735_18+0xe8>
 800386c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003870:	687a      	ldr	r2, [r7, #4]
 8003872:	4619      	mov	r1, r3
 8003874:	68f8      	ldr	r0, [r7, #12]
 8003876:	f7ff fe47 	bl	8003508 <ucg_dev_default_cb>
 800387a:	4603      	mov	r3, r0
 800387c:	4618      	mov	r0, r3
 800387e:	371c      	adds	r7, #28
 8003880:	46bd      	mov	sp, r7
 8003882:	bd90      	pop	{r4, r7, pc}
 8003884:	08005eb8 	.word	0x08005eb8
 8003888:	08005e0c 	.word	0x08005e0c

0800388c <ucg_ext_st7735_18>:
 800388c:	b580      	push	{r7, lr}
 800388e:	b084      	sub	sp, #16
 8003890:	af00      	add	r7, sp, #0
 8003892:	60f8      	str	r0, [r7, #12]
 8003894:	460b      	mov	r3, r1
 8003896:	607a      	str	r2, [r7, #4]
 8003898:	817b      	strh	r3, [r7, #10]
 800389a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800389e:	2b17      	cmp	r3, #23
 80038a0:	d103      	bne.n	80038aa <ucg_ext_st7735_18+0x1e>
 80038a2:	68f8      	ldr	r0, [r7, #12]
 80038a4:	f7ff fecc 	bl	8003640 <ucg_handle_st7735_l90se>
 80038a8:	bf00      	nop
 80038aa:	2301      	movs	r3, #1
 80038ac:	4618      	mov	r0, r3
 80038ae:	3710      	adds	r7, #16
 80038b0:	46bd      	mov	sp, r7
 80038b2:	bd80      	pop	{r7, pc}

080038b4 <ucg_PowerDown>:
 80038b4:	b580      	push	{r7, lr}
 80038b6:	b082      	sub	sp, #8
 80038b8:	af00      	add	r7, sp, #0
 80038ba:	6078      	str	r0, [r7, #4]
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	781b      	ldrb	r3, [r3, #0]
 80038c0:	f003 0301 	and.w	r3, r3, #1
 80038c4:	b2db      	uxtb	r3, r3
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d00a      	beq.n	80038e0 <ucg_PowerDown+0x2c>
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	689b      	ldr	r3, [r3, #8]
 80038ce:	2200      	movs	r2, #0
 80038d0:	210b      	movs	r1, #11
 80038d2:	6878      	ldr	r0, [r7, #4]
 80038d4:	4798      	blx	r3
 80038d6:	687a      	ldr	r2, [r7, #4]
 80038d8:	7813      	ldrb	r3, [r2, #0]
 80038da:	f36f 0300 	bfc	r3, #0, #1
 80038de:	7013      	strb	r3, [r2, #0]
 80038e0:	bf00      	nop
 80038e2:	3708      	adds	r7, #8
 80038e4:	46bd      	mov	sp, r7
 80038e6:	bd80      	pop	{r7, pc}

080038e8 <ucg_PowerUp>:
 80038e8:	b580      	push	{r7, lr}
 80038ea:	b084      	sub	sp, #16
 80038ec:	af00      	add	r7, sp, #0
 80038ee:	6078      	str	r0, [r7, #4]
 80038f0:	6878      	ldr	r0, [r7, #4]
 80038f2:	f7ff ffdf 	bl	80038b4 <ucg_PowerDown>
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	689b      	ldr	r3, [r3, #8]
 80038fa:	2200      	movs	r2, #0
 80038fc:	210a      	movs	r1, #10
 80038fe:	6878      	ldr	r0, [r7, #4]
 8003900:	4798      	blx	r3
 8003902:	4603      	mov	r3, r0
 8003904:	81fb      	strh	r3, [r7, #14]
 8003906:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800390a:	2b00      	cmp	r3, #0
 800390c:	d004      	beq.n	8003918 <ucg_PowerUp+0x30>
 800390e:	687a      	ldr	r2, [r7, #4]
 8003910:	7813      	ldrb	r3, [r2, #0]
 8003912:	f043 0301 	orr.w	r3, r3, #1
 8003916:	7013      	strb	r3, [r2, #0]
 8003918:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800391c:	4618      	mov	r0, r3
 800391e:	3710      	adds	r7, #16
 8003920:	46bd      	mov	sp, r7
 8003922:	bd80      	pop	{r7, pc}

08003924 <ucg_SetClipBox>:
 8003924:	b580      	push	{r7, lr}
 8003926:	b082      	sub	sp, #8
 8003928:	af00      	add	r7, sp, #0
 800392a:	6078      	str	r0, [r7, #4]
 800392c:	6039      	str	r1, [r7, #0]
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	689b      	ldr	r3, [r3, #8]
 8003932:	683a      	ldr	r2, [r7, #0]
 8003934:	210c      	movs	r1, #12
 8003936:	6878      	ldr	r0, [r7, #4]
 8003938:	4798      	blx	r3
 800393a:	bf00      	nop
 800393c:	3708      	adds	r7, #8
 800393e:	46bd      	mov	sp, r7
 8003940:	bd80      	pop	{r7, pc}

08003942 <ucg_SetMaxClipRange>:
 8003942:	b580      	push	{r7, lr}
 8003944:	b084      	sub	sp, #16
 8003946:	af00      	add	r7, sp, #0
 8003948:	6078      	str	r0, [r7, #4]
 800394a:	687a      	ldr	r2, [r7, #4]
 800394c:	f107 030c 	add.w	r3, r7, #12
 8003950:	3202      	adds	r2, #2
 8003952:	6810      	ldr	r0, [r2, #0]
 8003954:	6018      	str	r0, [r3, #0]
 8003956:	2300      	movs	r3, #0
 8003958:	813b      	strh	r3, [r7, #8]
 800395a:	2300      	movs	r3, #0
 800395c:	817b      	strh	r3, [r7, #10]
 800395e:	f107 0308 	add.w	r3, r7, #8
 8003962:	4619      	mov	r1, r3
 8003964:	6878      	ldr	r0, [r7, #4]
 8003966:	f7ff ffdd 	bl	8003924 <ucg_SetClipBox>
 800396a:	bf00      	nop
 800396c:	3710      	adds	r7, #16
 800396e:	46bd      	mov	sp, r7
 8003970:	bd80      	pop	{r7, pc}

08003972 <ucg_GetDimension>:
 8003972:	b580      	push	{r7, lr}
 8003974:	b082      	sub	sp, #8
 8003976:	af00      	add	r7, sp, #0
 8003978:	6078      	str	r0, [r7, #4]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	689b      	ldr	r3, [r3, #8]
 800397e:	687a      	ldr	r2, [r7, #4]
 8003980:	3202      	adds	r2, #2
 8003982:	210f      	movs	r1, #15
 8003984:	6878      	ldr	r0, [r7, #4]
 8003986:	4798      	blx	r3
 8003988:	6878      	ldr	r0, [r7, #4]
 800398a:	f7ff ffda 	bl	8003942 <ucg_SetMaxClipRange>
 800398e:	bf00      	nop
 8003990:	3708      	adds	r7, #8
 8003992:	46bd      	mov	sp, r7
 8003994:	bd80      	pop	{r7, pc}

08003996 <ucg_DrawL90FXWithArg>:
 8003996:	b580      	push	{r7, lr}
 8003998:	b082      	sub	sp, #8
 800399a:	af00      	add	r7, sp, #0
 800399c:	6078      	str	r0, [r7, #4]
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	689b      	ldr	r3, [r3, #8]
 80039a2:	687a      	ldr	r2, [r7, #4]
 80039a4:	3224      	adds	r2, #36	; 0x24
 80039a6:	2115      	movs	r1, #21
 80039a8:	6878      	ldr	r0, [r7, #4]
 80039aa:	4798      	blx	r3
 80039ac:	bf00      	nop
 80039ae:	3708      	adds	r7, #8
 80039b0:	46bd      	mov	sp, r7
 80039b2:	bd80      	pop	{r7, pc}

080039b4 <ucg_dev_st7735_18x128x128>:
 80039b4:	b580      	push	{r7, lr}
 80039b6:	b084      	sub	sp, #16
 80039b8:	af00      	add	r7, sp, #0
 80039ba:	60f8      	str	r0, [r7, #12]
 80039bc:	460b      	mov	r3, r1
 80039be:	607a      	str	r2, [r7, #4]
 80039c0:	817b      	strh	r3, [r7, #10]
 80039c2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80039c6:	2b0b      	cmp	r3, #11
 80039c8:	d015      	beq.n	80039f6 <ucg_dev_st7735_18x128x128+0x42>
 80039ca:	2b0f      	cmp	r3, #15
 80039cc:	d01c      	beq.n	8003a08 <ucg_dev_st7735_18x128x128+0x54>
 80039ce:	2b0a      	cmp	r3, #10
 80039d0:	d122      	bne.n	8003a18 <ucg_dev_st7735_18x128x128+0x64>
 80039d2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80039d6:	687a      	ldr	r2, [r7, #4]
 80039d8:	4619      	mov	r1, r3
 80039da:	68f8      	ldr	r0, [r7, #12]
 80039dc:	f7ff feda 	bl	8003794 <ucg_dev_ic_st7735_18>
 80039e0:	4603      	mov	r3, r0
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d101      	bne.n	80039ea <ucg_dev_st7735_18x128x128+0x36>
 80039e6:	2300      	movs	r3, #0
 80039e8:	e01e      	b.n	8003a28 <ucg_dev_st7735_18x128x128+0x74>
 80039ea:	4911      	ldr	r1, [pc, #68]	; (8003a30 <ucg_dev_st7735_18x128x128+0x7c>)
 80039ec:	68f8      	ldr	r0, [r7, #12]
 80039ee:	f001 fc45 	bl	800527c <ucg_com_SendCmdSeq>
 80039f2:	2301      	movs	r3, #1
 80039f4:	e018      	b.n	8003a28 <ucg_dev_st7735_18x128x128+0x74>
 80039f6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80039fa:	687a      	ldr	r2, [r7, #4]
 80039fc:	4619      	mov	r1, r3
 80039fe:	68f8      	ldr	r0, [r7, #12]
 8003a00:	f7ff fec8 	bl	8003794 <ucg_dev_ic_st7735_18>
 8003a04:	4603      	mov	r3, r0
 8003a06:	e00f      	b.n	8003a28 <ucg_dev_st7735_18x128x128+0x74>
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	2280      	movs	r2, #128	; 0x80
 8003a0c:	801a      	strh	r2, [r3, #0]
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	2280      	movs	r2, #128	; 0x80
 8003a12:	805a      	strh	r2, [r3, #2]
 8003a14:	2301      	movs	r3, #1
 8003a16:	e007      	b.n	8003a28 <ucg_dev_st7735_18x128x128+0x74>
 8003a18:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003a1c:	687a      	ldr	r2, [r7, #4]
 8003a1e:	4619      	mov	r1, r3
 8003a20:	68f8      	ldr	r0, [r7, #12]
 8003a22:	f7ff feb7 	bl	8003794 <ucg_dev_ic_st7735_18>
 8003a26:	4603      	mov	r3, r0
 8003a28:	4618      	mov	r0, r3
 8003a2a:	3710      	adds	r7, #16
 8003a2c:	46bd      	mov	sp, r7
 8003a2e:	bd80      	pop	{r7, pc}
 8003a30:	08005ec0 	.word	0x08005ec0

08003a34 <ucg_font_get_byte>:
 8003a34:	b480      	push	{r7}
 8003a36:	b083      	sub	sp, #12
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	6078      	str	r0, [r7, #4]
 8003a3c:	460b      	mov	r3, r1
 8003a3e:	70fb      	strb	r3, [r7, #3]
 8003a40:	78fb      	ldrb	r3, [r7, #3]
 8003a42:	687a      	ldr	r2, [r7, #4]
 8003a44:	4413      	add	r3, r2
 8003a46:	607b      	str	r3, [r7, #4]
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	781b      	ldrb	r3, [r3, #0]
 8003a4c:	4618      	mov	r0, r3
 8003a4e:	370c      	adds	r7, #12
 8003a50:	46bd      	mov	sp, r7
 8003a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a56:	4770      	bx	lr

08003a58 <ucg_font_get_word>:
 8003a58:	b480      	push	{r7}
 8003a5a:	b085      	sub	sp, #20
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	6078      	str	r0, [r7, #4]
 8003a60:	460b      	mov	r3, r1
 8003a62:	70fb      	strb	r3, [r7, #3]
 8003a64:	78fb      	ldrb	r3, [r7, #3]
 8003a66:	687a      	ldr	r2, [r7, #4]
 8003a68:	4413      	add	r3, r2
 8003a6a:	607b      	str	r3, [r7, #4]
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	781b      	ldrb	r3, [r3, #0]
 8003a70:	81fb      	strh	r3, [r7, #14]
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	3301      	adds	r3, #1
 8003a76:	607b      	str	r3, [r7, #4]
 8003a78:	89fb      	ldrh	r3, [r7, #14]
 8003a7a:	021b      	lsls	r3, r3, #8
 8003a7c:	81fb      	strh	r3, [r7, #14]
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	781b      	ldrb	r3, [r3, #0]
 8003a82:	b29a      	uxth	r2, r3
 8003a84:	89fb      	ldrh	r3, [r7, #14]
 8003a86:	4413      	add	r3, r2
 8003a88:	81fb      	strh	r3, [r7, #14]
 8003a8a:	89fb      	ldrh	r3, [r7, #14]
 8003a8c:	4618      	mov	r0, r3
 8003a8e:	3714      	adds	r7, #20
 8003a90:	46bd      	mov	sp, r7
 8003a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a96:	4770      	bx	lr

08003a98 <ucg_read_font_info>:
 8003a98:	b580      	push	{r7, lr}
 8003a9a:	b082      	sub	sp, #8
 8003a9c:	af00      	add	r7, sp, #0
 8003a9e:	6078      	str	r0, [r7, #4]
 8003aa0:	6039      	str	r1, [r7, #0]
 8003aa2:	2100      	movs	r1, #0
 8003aa4:	6838      	ldr	r0, [r7, #0]
 8003aa6:	f7ff ffc5 	bl	8003a34 <ucg_font_get_byte>
 8003aaa:	4603      	mov	r3, r0
 8003aac:	461a      	mov	r2, r3
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	701a      	strb	r2, [r3, #0]
 8003ab2:	2101      	movs	r1, #1
 8003ab4:	6838      	ldr	r0, [r7, #0]
 8003ab6:	f7ff ffbd 	bl	8003a34 <ucg_font_get_byte>
 8003aba:	4603      	mov	r3, r0
 8003abc:	461a      	mov	r2, r3
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	705a      	strb	r2, [r3, #1]
 8003ac2:	2102      	movs	r1, #2
 8003ac4:	6838      	ldr	r0, [r7, #0]
 8003ac6:	f7ff ffb5 	bl	8003a34 <ucg_font_get_byte>
 8003aca:	4603      	mov	r3, r0
 8003acc:	461a      	mov	r2, r3
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	709a      	strb	r2, [r3, #2]
 8003ad2:	2103      	movs	r1, #3
 8003ad4:	6838      	ldr	r0, [r7, #0]
 8003ad6:	f7ff ffad 	bl	8003a34 <ucg_font_get_byte>
 8003ada:	4603      	mov	r3, r0
 8003adc:	461a      	mov	r2, r3
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	70da      	strb	r2, [r3, #3]
 8003ae2:	2104      	movs	r1, #4
 8003ae4:	6838      	ldr	r0, [r7, #0]
 8003ae6:	f7ff ffa5 	bl	8003a34 <ucg_font_get_byte>
 8003aea:	4603      	mov	r3, r0
 8003aec:	461a      	mov	r2, r3
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	711a      	strb	r2, [r3, #4]
 8003af2:	2105      	movs	r1, #5
 8003af4:	6838      	ldr	r0, [r7, #0]
 8003af6:	f7ff ff9d 	bl	8003a34 <ucg_font_get_byte>
 8003afa:	4603      	mov	r3, r0
 8003afc:	461a      	mov	r2, r3
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	715a      	strb	r2, [r3, #5]
 8003b02:	2106      	movs	r1, #6
 8003b04:	6838      	ldr	r0, [r7, #0]
 8003b06:	f7ff ff95 	bl	8003a34 <ucg_font_get_byte>
 8003b0a:	4603      	mov	r3, r0
 8003b0c:	461a      	mov	r2, r3
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	719a      	strb	r2, [r3, #6]
 8003b12:	2107      	movs	r1, #7
 8003b14:	6838      	ldr	r0, [r7, #0]
 8003b16:	f7ff ff8d 	bl	8003a34 <ucg_font_get_byte>
 8003b1a:	4603      	mov	r3, r0
 8003b1c:	461a      	mov	r2, r3
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	71da      	strb	r2, [r3, #7]
 8003b22:	2108      	movs	r1, #8
 8003b24:	6838      	ldr	r0, [r7, #0]
 8003b26:	f7ff ff85 	bl	8003a34 <ucg_font_get_byte>
 8003b2a:	4603      	mov	r3, r0
 8003b2c:	461a      	mov	r2, r3
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	721a      	strb	r2, [r3, #8]
 8003b32:	2109      	movs	r1, #9
 8003b34:	6838      	ldr	r0, [r7, #0]
 8003b36:	f7ff ff7d 	bl	8003a34 <ucg_font_get_byte>
 8003b3a:	4603      	mov	r3, r0
 8003b3c:	b25a      	sxtb	r2, r3
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	725a      	strb	r2, [r3, #9]
 8003b42:	210a      	movs	r1, #10
 8003b44:	6838      	ldr	r0, [r7, #0]
 8003b46:	f7ff ff75 	bl	8003a34 <ucg_font_get_byte>
 8003b4a:	4603      	mov	r3, r0
 8003b4c:	b25a      	sxtb	r2, r3
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	729a      	strb	r2, [r3, #10]
 8003b52:	210b      	movs	r1, #11
 8003b54:	6838      	ldr	r0, [r7, #0]
 8003b56:	f7ff ff6d 	bl	8003a34 <ucg_font_get_byte>
 8003b5a:	4603      	mov	r3, r0
 8003b5c:	b25a      	sxtb	r2, r3
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	72da      	strb	r2, [r3, #11]
 8003b62:	210c      	movs	r1, #12
 8003b64:	6838      	ldr	r0, [r7, #0]
 8003b66:	f7ff ff65 	bl	8003a34 <ucg_font_get_byte>
 8003b6a:	4603      	mov	r3, r0
 8003b6c:	b25a      	sxtb	r2, r3
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	731a      	strb	r2, [r3, #12]
 8003b72:	210d      	movs	r1, #13
 8003b74:	6838      	ldr	r0, [r7, #0]
 8003b76:	f7ff ff5d 	bl	8003a34 <ucg_font_get_byte>
 8003b7a:	4603      	mov	r3, r0
 8003b7c:	b25a      	sxtb	r2, r3
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	735a      	strb	r2, [r3, #13]
 8003b82:	210e      	movs	r1, #14
 8003b84:	6838      	ldr	r0, [r7, #0]
 8003b86:	f7ff ff55 	bl	8003a34 <ucg_font_get_byte>
 8003b8a:	4603      	mov	r3, r0
 8003b8c:	b25a      	sxtb	r2, r3
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	739a      	strb	r2, [r3, #14]
 8003b92:	210f      	movs	r1, #15
 8003b94:	6838      	ldr	r0, [r7, #0]
 8003b96:	f7ff ff4d 	bl	8003a34 <ucg_font_get_byte>
 8003b9a:	4603      	mov	r3, r0
 8003b9c:	b25a      	sxtb	r2, r3
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	73da      	strb	r2, [r3, #15]
 8003ba2:	2110      	movs	r1, #16
 8003ba4:	6838      	ldr	r0, [r7, #0]
 8003ba6:	f7ff ff45 	bl	8003a34 <ucg_font_get_byte>
 8003baa:	4603      	mov	r3, r0
 8003bac:	b25a      	sxtb	r2, r3
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	741a      	strb	r2, [r3, #16]
 8003bb2:	2111      	movs	r1, #17
 8003bb4:	6838      	ldr	r0, [r7, #0]
 8003bb6:	f7ff ff4f 	bl	8003a58 <ucg_font_get_word>
 8003bba:	4603      	mov	r3, r0
 8003bbc:	461a      	mov	r2, r3
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	825a      	strh	r2, [r3, #18]
 8003bc2:	2113      	movs	r1, #19
 8003bc4:	6838      	ldr	r0, [r7, #0]
 8003bc6:	f7ff ff47 	bl	8003a58 <ucg_font_get_word>
 8003bca:	4603      	mov	r3, r0
 8003bcc:	461a      	mov	r2, r3
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	829a      	strh	r2, [r3, #20]
 8003bd2:	bf00      	nop
 8003bd4:	3708      	adds	r7, #8
 8003bd6:	46bd      	mov	sp, r7
 8003bd8:	bd80      	pop	{r7, pc}

08003bda <ucg_font_decode_get_unsigned_bits>:
 8003bda:	b480      	push	{r7}
 8003bdc:	b085      	sub	sp, #20
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	6078      	str	r0, [r7, #4]
 8003be2:	460b      	mov	r3, r1
 8003be4:	70fb      	strb	r3, [r7, #3]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	7b1b      	ldrb	r3, [r3, #12]
 8003bea:	737b      	strb	r3, [r7, #13]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	781b      	ldrb	r3, [r3, #0]
 8003bf2:	73fb      	strb	r3, [r7, #15]
 8003bf4:	7bfa      	ldrb	r2, [r7, #15]
 8003bf6:	7b7b      	ldrb	r3, [r7, #13]
 8003bf8:	fa42 f303 	asr.w	r3, r2, r3
 8003bfc:	73fb      	strb	r3, [r7, #15]
 8003bfe:	7b7b      	ldrb	r3, [r7, #13]
 8003c00:	73bb      	strb	r3, [r7, #14]
 8003c02:	7bba      	ldrb	r2, [r7, #14]
 8003c04:	78fb      	ldrb	r3, [r7, #3]
 8003c06:	4413      	add	r3, r2
 8003c08:	73bb      	strb	r3, [r7, #14]
 8003c0a:	7bbb      	ldrb	r3, [r7, #14]
 8003c0c:	2b07      	cmp	r3, #7
 8003c0e:	d91a      	bls.n	8003c46 <ucg_font_decode_get_unsigned_bits+0x6c>
 8003c10:	2308      	movs	r3, #8
 8003c12:	733b      	strb	r3, [r7, #12]
 8003c14:	7b3a      	ldrb	r2, [r7, #12]
 8003c16:	7b7b      	ldrb	r3, [r7, #13]
 8003c18:	1ad3      	subs	r3, r2, r3
 8003c1a:	733b      	strb	r3, [r7, #12]
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	1c5a      	adds	r2, r3, #1
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	601a      	str	r2, [r3, #0]
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	681b      	ldr	r3, [r3, #0]
 8003c2a:	781b      	ldrb	r3, [r3, #0]
 8003c2c:	461a      	mov	r2, r3
 8003c2e:	7b3b      	ldrb	r3, [r7, #12]
 8003c30:	fa02 f303 	lsl.w	r3, r2, r3
 8003c34:	b25a      	sxtb	r2, r3
 8003c36:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003c3a:	4313      	orrs	r3, r2
 8003c3c:	b25b      	sxtb	r3, r3
 8003c3e:	73fb      	strb	r3, [r7, #15]
 8003c40:	7bbb      	ldrb	r3, [r7, #14]
 8003c42:	3b08      	subs	r3, #8
 8003c44:	73bb      	strb	r3, [r7, #14]
 8003c46:	78fb      	ldrb	r3, [r7, #3]
 8003c48:	f04f 32ff 	mov.w	r2, #4294967295
 8003c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c50:	b2db      	uxtb	r3, r3
 8003c52:	43db      	mvns	r3, r3
 8003c54:	b2da      	uxtb	r2, r3
 8003c56:	7bfb      	ldrb	r3, [r7, #15]
 8003c58:	4013      	ands	r3, r2
 8003c5a:	73fb      	strb	r3, [r7, #15]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	7bba      	ldrb	r2, [r7, #14]
 8003c60:	731a      	strb	r2, [r3, #12]
 8003c62:	7bfb      	ldrb	r3, [r7, #15]
 8003c64:	4618      	mov	r0, r3
 8003c66:	3714      	adds	r7, #20
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c6e:	4770      	bx	lr

08003c70 <ucg_font_decode_get_signed_bits>:
 8003c70:	b580      	push	{r7, lr}
 8003c72:	b084      	sub	sp, #16
 8003c74:	af00      	add	r7, sp, #0
 8003c76:	6078      	str	r0, [r7, #4]
 8003c78:	460b      	mov	r3, r1
 8003c7a:	70fb      	strb	r3, [r7, #3]
 8003c7c:	78fb      	ldrb	r3, [r7, #3]
 8003c7e:	4619      	mov	r1, r3
 8003c80:	6878      	ldr	r0, [r7, #4]
 8003c82:	f7ff ffaa 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 8003c86:	4603      	mov	r3, r0
 8003c88:	73fb      	strb	r3, [r7, #15]
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	73bb      	strb	r3, [r7, #14]
 8003c8e:	78fb      	ldrb	r3, [r7, #3]
 8003c90:	3b01      	subs	r3, #1
 8003c92:	70fb      	strb	r3, [r7, #3]
 8003c94:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8003c98:	78fb      	ldrb	r3, [r7, #3]
 8003c9a:	fa02 f303 	lsl.w	r3, r2, r3
 8003c9e:	73bb      	strb	r3, [r7, #14]
 8003ca0:	7bfa      	ldrb	r2, [r7, #15]
 8003ca2:	7bbb      	ldrb	r3, [r7, #14]
 8003ca4:	1ad3      	subs	r3, r2, r3
 8003ca6:	b2db      	uxtb	r3, r3
 8003ca8:	73fb      	strb	r3, [r7, #15]
 8003caa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003cae:	4618      	mov	r0, r3
 8003cb0:	3710      	adds	r7, #16
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	bd80      	pop	{r7, pc}

08003cb6 <ucg_add_vector_y>:
 8003cb6:	b490      	push	{r4, r7}
 8003cb8:	b082      	sub	sp, #8
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	4604      	mov	r4, r0
 8003cbe:	4608      	mov	r0, r1
 8003cc0:	4611      	mov	r1, r2
 8003cc2:	461a      	mov	r2, r3
 8003cc4:	4623      	mov	r3, r4
 8003cc6:	80fb      	strh	r3, [r7, #6]
 8003cc8:	4603      	mov	r3, r0
 8003cca:	717b      	strb	r3, [r7, #5]
 8003ccc:	460b      	mov	r3, r1
 8003cce:	713b      	strb	r3, [r7, #4]
 8003cd0:	4613      	mov	r3, r2
 8003cd2:	70fb      	strb	r3, [r7, #3]
 8003cd4:	78fb      	ldrb	r3, [r7, #3]
 8003cd6:	2b01      	cmp	r3, #1
 8003cd8:	d00b      	beq.n	8003cf2 <ucg_add_vector_y+0x3c>
 8003cda:	2b02      	cmp	r3, #2
 8003cdc:	d011      	beq.n	8003d02 <ucg_add_vector_y+0x4c>
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d117      	bne.n	8003d12 <ucg_add_vector_y+0x5c>
 8003ce2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003ce6:	b29a      	uxth	r2, r3
 8003ce8:	88fb      	ldrh	r3, [r7, #6]
 8003cea:	4413      	add	r3, r2
 8003cec:	b29b      	uxth	r3, r3
 8003cee:	80fb      	strh	r3, [r7, #6]
 8003cf0:	e017      	b.n	8003d22 <ucg_add_vector_y+0x6c>
 8003cf2:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003cf6:	b29a      	uxth	r2, r3
 8003cf8:	88fb      	ldrh	r3, [r7, #6]
 8003cfa:	4413      	add	r3, r2
 8003cfc:	b29b      	uxth	r3, r3
 8003cfe:	80fb      	strh	r3, [r7, #6]
 8003d00:	e00f      	b.n	8003d22 <ucg_add_vector_y+0x6c>
 8003d02:	88fa      	ldrh	r2, [r7, #6]
 8003d04:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003d08:	b29b      	uxth	r3, r3
 8003d0a:	1ad3      	subs	r3, r2, r3
 8003d0c:	b29b      	uxth	r3, r3
 8003d0e:	80fb      	strh	r3, [r7, #6]
 8003d10:	e007      	b.n	8003d22 <ucg_add_vector_y+0x6c>
 8003d12:	88fa      	ldrh	r2, [r7, #6]
 8003d14:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003d18:	b29b      	uxth	r3, r3
 8003d1a:	1ad3      	subs	r3, r2, r3
 8003d1c:	b29b      	uxth	r3, r3
 8003d1e:	80fb      	strh	r3, [r7, #6]
 8003d20:	bf00      	nop
 8003d22:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003d26:	4618      	mov	r0, r3
 8003d28:	3708      	adds	r7, #8
 8003d2a:	46bd      	mov	sp, r7
 8003d2c:	bc90      	pop	{r4, r7}
 8003d2e:	4770      	bx	lr

08003d30 <ucg_add_vector_x>:
 8003d30:	b490      	push	{r4, r7}
 8003d32:	b082      	sub	sp, #8
 8003d34:	af00      	add	r7, sp, #0
 8003d36:	4604      	mov	r4, r0
 8003d38:	4608      	mov	r0, r1
 8003d3a:	4611      	mov	r1, r2
 8003d3c:	461a      	mov	r2, r3
 8003d3e:	4623      	mov	r3, r4
 8003d40:	80fb      	strh	r3, [r7, #6]
 8003d42:	4603      	mov	r3, r0
 8003d44:	717b      	strb	r3, [r7, #5]
 8003d46:	460b      	mov	r3, r1
 8003d48:	713b      	strb	r3, [r7, #4]
 8003d4a:	4613      	mov	r3, r2
 8003d4c:	70fb      	strb	r3, [r7, #3]
 8003d4e:	78fb      	ldrb	r3, [r7, #3]
 8003d50:	2b01      	cmp	r3, #1
 8003d52:	d00b      	beq.n	8003d6c <ucg_add_vector_x+0x3c>
 8003d54:	2b02      	cmp	r3, #2
 8003d56:	d011      	beq.n	8003d7c <ucg_add_vector_x+0x4c>
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d117      	bne.n	8003d8c <ucg_add_vector_x+0x5c>
 8003d5c:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003d60:	b29a      	uxth	r2, r3
 8003d62:	88fb      	ldrh	r3, [r7, #6]
 8003d64:	4413      	add	r3, r2
 8003d66:	b29b      	uxth	r3, r3
 8003d68:	80fb      	strh	r3, [r7, #6]
 8003d6a:	e017      	b.n	8003d9c <ucg_add_vector_x+0x6c>
 8003d6c:	88fa      	ldrh	r2, [r7, #6]
 8003d6e:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003d72:	b29b      	uxth	r3, r3
 8003d74:	1ad3      	subs	r3, r2, r3
 8003d76:	b29b      	uxth	r3, r3
 8003d78:	80fb      	strh	r3, [r7, #6]
 8003d7a:	e00f      	b.n	8003d9c <ucg_add_vector_x+0x6c>
 8003d7c:	88fa      	ldrh	r2, [r7, #6]
 8003d7e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003d82:	b29b      	uxth	r3, r3
 8003d84:	1ad3      	subs	r3, r2, r3
 8003d86:	b29b      	uxth	r3, r3
 8003d88:	80fb      	strh	r3, [r7, #6]
 8003d8a:	e007      	b.n	8003d9c <ucg_add_vector_x+0x6c>
 8003d8c:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003d90:	b29a      	uxth	r2, r3
 8003d92:	88fb      	ldrh	r3, [r7, #6]
 8003d94:	4413      	add	r3, r2
 8003d96:	b29b      	uxth	r3, r3
 8003d98:	80fb      	strh	r3, [r7, #6]
 8003d9a:	bf00      	nop
 8003d9c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003da0:	4618      	mov	r0, r3
 8003da2:	3708      	adds	r7, #8
 8003da4:	46bd      	mov	sp, r7
 8003da6:	bc90      	pop	{r4, r7}
 8003da8:	4770      	bx	lr

08003daa <ucg_font_decode_len>:
 8003daa:	b590      	push	{r4, r7, lr}
 8003dac:	b089      	sub	sp, #36	; 0x24
 8003dae:	af02      	add	r7, sp, #8
 8003db0:	6078      	str	r0, [r7, #4]
 8003db2:	460b      	mov	r3, r1
 8003db4:	70fb      	strb	r3, [r7, #3]
 8003db6:	4613      	mov	r3, r2
 8003db8:	70bb      	strb	r3, [r7, #2]
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	3380      	adds	r3, #128	; 0x80
 8003dbe:	613b      	str	r3, [r7, #16]
 8003dc0:	78fb      	ldrb	r3, [r7, #3]
 8003dc2:	75fb      	strb	r3, [r7, #23]
 8003dc4:	693b      	ldr	r3, [r7, #16]
 8003dc6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8003dca:	757b      	strb	r3, [r7, #21]
 8003dcc:	693b      	ldr	r3, [r7, #16]
 8003dce:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8003dd2:	753b      	strb	r3, [r7, #20]
 8003dd4:	693b      	ldr	r3, [r7, #16]
 8003dd6:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8003dda:	73fb      	strb	r3, [r7, #15]
 8003ddc:	7bfa      	ldrb	r2, [r7, #15]
 8003dde:	7d7b      	ldrb	r3, [r7, #21]
 8003de0:	1ad3      	subs	r3, r2, r3
 8003de2:	73fb      	strb	r3, [r7, #15]
 8003de4:	7bfb      	ldrb	r3, [r7, #15]
 8003de6:	75bb      	strb	r3, [r7, #22]
 8003de8:	7dfa      	ldrb	r2, [r7, #23]
 8003dea:	7bfb      	ldrb	r3, [r7, #15]
 8003dec:	429a      	cmp	r2, r3
 8003dee:	d201      	bcs.n	8003df4 <ucg_font_decode_len+0x4a>
 8003df0:	7dfb      	ldrb	r3, [r7, #23]
 8003df2:	75bb      	strb	r3, [r7, #22]
 8003df4:	693b      	ldr	r3, [r7, #16]
 8003df6:	889b      	ldrh	r3, [r3, #4]
 8003df8:	81bb      	strh	r3, [r7, #12]
 8003dfa:	693b      	ldr	r3, [r7, #16]
 8003dfc:	88db      	ldrh	r3, [r3, #6]
 8003dfe:	817b      	strh	r3, [r7, #10]
 8003e00:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003e04:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003e08:	693b      	ldr	r3, [r7, #16]
 8003e0a:	7b9b      	ldrb	r3, [r3, #14]
 8003e0c:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8003e10:	f7ff ff8e 	bl	8003d30 <ucg_add_vector_x>
 8003e14:	4603      	mov	r3, r0
 8003e16:	81bb      	strh	r3, [r7, #12]
 8003e18:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003e1c:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003e20:	693b      	ldr	r3, [r7, #16]
 8003e22:	7b9b      	ldrb	r3, [r3, #14]
 8003e24:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003e28:	f7ff ff45 	bl	8003cb6 <ucg_add_vector_y>
 8003e2c:	4603      	mov	r3, r0
 8003e2e:	817b      	strh	r3, [r7, #10]
 8003e30:	78bb      	ldrb	r3, [r7, #2]
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d011      	beq.n	8003e5a <ucg_font_decode_len+0xb0>
 8003e36:	7dbb      	ldrb	r3, [r7, #22]
 8003e38:	b21c      	sxth	r4, r3
 8003e3a:	693b      	ldr	r3, [r7, #16]
 8003e3c:	7b9b      	ldrb	r3, [r3, #14]
 8003e3e:	b21b      	sxth	r3, r3
 8003e40:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003e44:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003e48:	2200      	movs	r2, #0
 8003e4a:	9201      	str	r2, [sp, #4]
 8003e4c:	9300      	str	r3, [sp, #0]
 8003e4e:	4623      	mov	r3, r4
 8003e50:	4602      	mov	r2, r0
 8003e52:	6878      	ldr	r0, [r7, #4]
 8003e54:	f000 fbc0 	bl	80045d8 <ucg_Draw90Line>
 8003e58:	e014      	b.n	8003e84 <ucg_font_decode_len+0xda>
 8003e5a:	693b      	ldr	r3, [r7, #16]
 8003e5c:	7b5b      	ldrb	r3, [r3, #13]
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	d110      	bne.n	8003e84 <ucg_font_decode_len+0xda>
 8003e62:	7dbb      	ldrb	r3, [r7, #22]
 8003e64:	b21c      	sxth	r4, r3
 8003e66:	693b      	ldr	r3, [r7, #16]
 8003e68:	7b9b      	ldrb	r3, [r3, #14]
 8003e6a:	b21b      	sxth	r3, r3
 8003e6c:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003e70:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003e74:	2201      	movs	r2, #1
 8003e76:	9201      	str	r2, [sp, #4]
 8003e78:	9300      	str	r3, [sp, #0]
 8003e7a:	4623      	mov	r3, r4
 8003e7c:	4602      	mov	r2, r0
 8003e7e:	6878      	ldr	r0, [r7, #4]
 8003e80:	f000 fbaa 	bl	80045d8 <ucg_Draw90Line>
 8003e84:	7dfa      	ldrb	r2, [r7, #23]
 8003e86:	7bfb      	ldrb	r3, [r7, #15]
 8003e88:	429a      	cmp	r2, r3
 8003e8a:	d309      	bcc.n	8003ea0 <ucg_font_decode_len+0xf6>
 8003e8c:	7dfa      	ldrb	r2, [r7, #23]
 8003e8e:	7bfb      	ldrb	r3, [r7, #15]
 8003e90:	1ad3      	subs	r3, r2, r3
 8003e92:	75fb      	strb	r3, [r7, #23]
 8003e94:	2300      	movs	r3, #0
 8003e96:	757b      	strb	r3, [r7, #21]
 8003e98:	7d3b      	ldrb	r3, [r7, #20]
 8003e9a:	3301      	adds	r3, #1
 8003e9c:	753b      	strb	r3, [r7, #20]
 8003e9e:	e799      	b.n	8003dd4 <ucg_font_decode_len+0x2a>
 8003ea0:	bf00      	nop
 8003ea2:	7d7a      	ldrb	r2, [r7, #21]
 8003ea4:	7dfb      	ldrb	r3, [r7, #23]
 8003ea6:	4413      	add	r3, r2
 8003ea8:	757b      	strb	r3, [r7, #21]
 8003eaa:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8003eae:	693b      	ldr	r3, [r7, #16]
 8003eb0:	721a      	strb	r2, [r3, #8]
 8003eb2:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003eb6:	693b      	ldr	r3, [r7, #16]
 8003eb8:	725a      	strb	r2, [r3, #9]
 8003eba:	bf00      	nop
 8003ebc:	371c      	adds	r7, #28
 8003ebe:	46bd      	mov	sp, r7
 8003ec0:	bd90      	pop	{r4, r7, pc}

08003ec2 <ucg_font_setup_decode>:
 8003ec2:	b580      	push	{r7, lr}
 8003ec4:	b084      	sub	sp, #16
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	6078      	str	r0, [r7, #4]
 8003eca:	6039      	str	r1, [r7, #0]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	3380      	adds	r3, #128	; 0x80
 8003ed0:	60fb      	str	r3, [r7, #12]
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	683a      	ldr	r2, [r7, #0]
 8003ed6:	601a      	str	r2, [r3, #0]
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	2200      	movs	r2, #0
 8003edc:	731a      	strb	r2, [r3, #12]
 8003ede:	68fb      	ldr	r3, [r7, #12]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	1c5a      	adds	r2, r3, #1
 8003ee4:	68fb      	ldr	r3, [r7, #12]
 8003ee6:	601a      	str	r2, [r3, #0]
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	1c5a      	adds	r2, r3, #1
 8003eee:	68fb      	ldr	r3, [r7, #12]
 8003ef0:	601a      	str	r2, [r3, #0]
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8003ef8:	4619      	mov	r1, r3
 8003efa:	68f8      	ldr	r0, [r7, #12]
 8003efc:	f7ff fe6d 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 8003f00:	4603      	mov	r3, r0
 8003f02:	b25a      	sxtb	r2, r3
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	729a      	strb	r2, [r3, #10]
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 8003f0e:	4619      	mov	r1, r3
 8003f10:	68f8      	ldr	r0, [r7, #12]
 8003f12:	f7ff fe62 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 8003f16:	4603      	mov	r3, r0
 8003f18:	b25a      	sxtb	r2, r3
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	72da      	strb	r2, [r3, #11]
 8003f1e:	bf00      	nop
 8003f20:	3710      	adds	r7, #16
 8003f22:	46bd      	mov	sp, r7
 8003f24:	bd80      	pop	{r7, pc}

08003f26 <ucg_font_decode_glyph>:
 8003f26:	b580      	push	{r7, lr}
 8003f28:	b084      	sub	sp, #16
 8003f2a:	af00      	add	r7, sp, #0
 8003f2c:	6078      	str	r0, [r7, #4]
 8003f2e:	6039      	str	r1, [r7, #0]
 8003f30:	6839      	ldr	r1, [r7, #0]
 8003f32:	6878      	ldr	r0, [r7, #4]
 8003f34:	f7ff ffc5 	bl	8003ec2 <ucg_font_setup_decode>
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8003f3e:	73fb      	strb	r3, [r7, #15]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8003f4c:	4619      	mov	r1, r3
 8003f4e:	4610      	mov	r0, r2
 8003f50:	f7ff fe8e 	bl	8003c70 <ucg_font_decode_get_signed_bits>
 8003f54:	4603      	mov	r3, r0
 8003f56:	73bb      	strb	r3, [r7, #14]
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 8003f64:	4619      	mov	r1, r3
 8003f66:	4610      	mov	r0, r2
 8003f68:	f7ff fe82 	bl	8003c70 <ucg_font_decode_get_signed_bits>
 8003f6c:	4603      	mov	r3, r0
 8003f6e:	737b      	strb	r3, [r7, #13]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8003f7c:	4619      	mov	r1, r3
 8003f7e:	4610      	mov	r0, r2
 8003f80:	f7ff fe76 	bl	8003c70 <ucg_font_decode_get_signed_bits>
 8003f84:	4603      	mov	r3, r0
 8003f86:	733b      	strb	r3, [r7, #12]
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	dd69      	ble.n	8004066 <ucg_font_decode_glyph+0x140>
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8003f98:	7bfa      	ldrb	r2, [r7, #15]
 8003f9a:	7b7b      	ldrb	r3, [r7, #13]
 8003f9c:	4413      	add	r3, r2
 8003f9e:	b2db      	uxtb	r3, r3
 8003fa0:	425b      	negs	r3, r3
 8003fa2:	b2db      	uxtb	r3, r3
 8003fa4:	b25a      	sxtb	r2, r3
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8003fac:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003fb0:	f7ff febe 	bl	8003d30 <ucg_add_vector_x>
 8003fb4:	4603      	mov	r3, r0
 8003fb6:	461a      	mov	r2, r3
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 8003fc4:	7bfa      	ldrb	r2, [r7, #15]
 8003fc6:	7b7b      	ldrb	r3, [r7, #13]
 8003fc8:	4413      	add	r3, r2
 8003fca:	b2db      	uxtb	r3, r3
 8003fcc:	425b      	negs	r3, r3
 8003fce:	b2db      	uxtb	r3, r3
 8003fd0:	b25a      	sxtb	r2, r3
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8003fd8:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003fdc:	f7ff fe6b 	bl	8003cb6 <ucg_add_vector_y>
 8003fe0:	4603      	mov	r3, r0
 8003fe2:	461a      	mov	r2, r3
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	2200      	movs	r2, #0
 8003fee:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	2200      	movs	r2, #0
 8003ff6:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 8004006:	4619      	mov	r1, r3
 8004008:	4610      	mov	r0, r2
 800400a:	f7ff fde6 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 800400e:	4603      	mov	r3, r0
 8004010:	72fb      	strb	r3, [r7, #11]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800401e:	4619      	mov	r1, r3
 8004020:	4610      	mov	r0, r2
 8004022:	f7ff fdda 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 8004026:	4603      	mov	r3, r0
 8004028:	72bb      	strb	r3, [r7, #10]
 800402a:	7afb      	ldrb	r3, [r7, #11]
 800402c:	2200      	movs	r2, #0
 800402e:	4619      	mov	r1, r3
 8004030:	6878      	ldr	r0, [r7, #4]
 8004032:	f7ff feba 	bl	8003daa <ucg_font_decode_len>
 8004036:	7abb      	ldrb	r3, [r7, #10]
 8004038:	2201      	movs	r2, #1
 800403a:	4619      	mov	r1, r3
 800403c:	6878      	ldr	r0, [r7, #4]
 800403e:	f7ff feb4 	bl	8003daa <ucg_font_decode_len>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	3380      	adds	r3, #128	; 0x80
 8004046:	2101      	movs	r1, #1
 8004048:	4618      	mov	r0, r3
 800404a:	f7ff fdc6 	bl	8003bda <ucg_font_decode_get_unsigned_bits>
 800404e:	4603      	mov	r3, r0
 8004050:	2b00      	cmp	r3, #0
 8004052:	d1ea      	bne.n	800402a <ucg_font_decode_glyph+0x104>
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 800405a:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800405e:	429a      	cmp	r2, r3
 8004060:	dd00      	ble.n	8004064 <ucg_font_decode_glyph+0x13e>
 8004062:	e7ca      	b.n	8003ffa <ucg_font_decode_glyph+0xd4>
 8004064:	bf00      	nop
 8004066:	f997 300c 	ldrsb.w	r3, [r7, #12]
 800406a:	4618      	mov	r0, r3
 800406c:	3710      	adds	r7, #16
 800406e:	46bd      	mov	sp, r7
 8004070:	bd80      	pop	{r7, pc}

08004072 <ucg_font_get_glyph_data>:
 8004072:	b480      	push	{r7}
 8004074:	b085      	sub	sp, #20
 8004076:	af00      	add	r7, sp, #0
 8004078:	6078      	str	r0, [r7, #4]
 800407a:	460b      	mov	r3, r1
 800407c:	70fb      	strb	r3, [r7, #3]
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8004082:	60fb      	str	r3, [r7, #12]
 8004084:	68fb      	ldr	r3, [r7, #12]
 8004086:	3315      	adds	r3, #21
 8004088:	60fb      	str	r3, [r7, #12]
 800408a:	78fb      	ldrb	r3, [r7, #3]
 800408c:	2b60      	cmp	r3, #96	; 0x60
 800408e:	d907      	bls.n	80040a0 <ucg_font_get_glyph_data+0x2e>
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8004096:	461a      	mov	r2, r3
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	4413      	add	r3, r2
 800409c:	60fb      	str	r3, [r7, #12]
 800409e:	e009      	b.n	80040b4 <ucg_font_get_glyph_data+0x42>
 80040a0:	78fb      	ldrb	r3, [r7, #3]
 80040a2:	2b40      	cmp	r3, #64	; 0x40
 80040a4:	d906      	bls.n	80040b4 <ucg_font_get_glyph_data+0x42>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 80040ac:	461a      	mov	r2, r3
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	4413      	add	r3, r2
 80040b2:	60fb      	str	r3, [r7, #12]
 80040b4:	68fb      	ldr	r3, [r7, #12]
 80040b6:	3301      	adds	r3, #1
 80040b8:	781b      	ldrb	r3, [r3, #0]
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d00e      	beq.n	80040dc <ucg_font_get_glyph_data+0x6a>
 80040be:	68fb      	ldr	r3, [r7, #12]
 80040c0:	781b      	ldrb	r3, [r3, #0]
 80040c2:	78fa      	ldrb	r2, [r7, #3]
 80040c4:	429a      	cmp	r2, r3
 80040c6:	d101      	bne.n	80040cc <ucg_font_get_glyph_data+0x5a>
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	e009      	b.n	80040e0 <ucg_font_get_glyph_data+0x6e>
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	3301      	adds	r3, #1
 80040d0:	781b      	ldrb	r3, [r3, #0]
 80040d2:	461a      	mov	r2, r3
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	4413      	add	r3, r2
 80040d8:	60fb      	str	r3, [r7, #12]
 80040da:	e7eb      	b.n	80040b4 <ucg_font_get_glyph_data+0x42>
 80040dc:	bf00      	nop
 80040de:	2300      	movs	r3, #0
 80040e0:	4618      	mov	r0, r3
 80040e2:	3714      	adds	r7, #20
 80040e4:	46bd      	mov	sp, r7
 80040e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ea:	4770      	bx	lr

080040ec <ucg_font_draw_glyph>:
 80040ec:	b580      	push	{r7, lr}
 80040ee:	b086      	sub	sp, #24
 80040f0:	af00      	add	r7, sp, #0
 80040f2:	60f8      	str	r0, [r7, #12]
 80040f4:	4608      	mov	r0, r1
 80040f6:	4611      	mov	r1, r2
 80040f8:	461a      	mov	r2, r3
 80040fa:	4603      	mov	r3, r0
 80040fc:	817b      	strh	r3, [r7, #10]
 80040fe:	460b      	mov	r3, r1
 8004100:	813b      	strh	r3, [r7, #8]
 8004102:	4613      	mov	r3, r2
 8004104:	71fb      	strb	r3, [r7, #7]
 8004106:	2300      	movs	r3, #0
 8004108:	82fb      	strh	r3, [r7, #22]
 800410a:	68fb      	ldr	r3, [r7, #12]
 800410c:	897a      	ldrh	r2, [r7, #10]
 800410e:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	893a      	ldrh	r2, [r7, #8]
 8004116:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 800411a:	68fb      	ldr	r3, [r7, #12]
 800411c:	79fa      	ldrb	r2, [r7, #7]
 800411e:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 8004122:	f897 3020 	ldrb.w	r3, [r7, #32]
 8004126:	4619      	mov	r1, r3
 8004128:	68f8      	ldr	r0, [r7, #12]
 800412a:	f7ff ffa2 	bl	8004072 <ucg_font_get_glyph_data>
 800412e:	6138      	str	r0, [r7, #16]
 8004130:	693b      	ldr	r3, [r7, #16]
 8004132:	2b00      	cmp	r3, #0
 8004134:	d005      	beq.n	8004142 <ucg_font_draw_glyph+0x56>
 8004136:	6939      	ldr	r1, [r7, #16]
 8004138:	68f8      	ldr	r0, [r7, #12]
 800413a:	f7ff fef4 	bl	8003f26 <ucg_font_decode_glyph>
 800413e:	4603      	mov	r3, r0
 8004140:	82fb      	strh	r3, [r7, #22]
 8004142:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8004146:	4618      	mov	r0, r3
 8004148:	3718      	adds	r7, #24
 800414a:	46bd      	mov	sp, r7
 800414c:	bd80      	pop	{r7, pc}

0800414e <ucg_SetFontMode>:
 800414e:	b480      	push	{r7}
 8004150:	b083      	sub	sp, #12
 8004152:	af00      	add	r7, sp, #0
 8004154:	6078      	str	r0, [r7, #4]
 8004156:	460b      	mov	r3, r1
 8004158:	70fb      	strb	r3, [r7, #3]
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	78fa      	ldrb	r2, [r7, #3]
 800415e:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8004162:	bf00      	nop
 8004164:	370c      	adds	r7, #12
 8004166:	46bd      	mov	sp, r7
 8004168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800416c:	4770      	bx	lr
	...

08004170 <ucg_DrawGlyph>:
 8004170:	b580      	push	{r7, lr}
 8004172:	b086      	sub	sp, #24
 8004174:	af02      	add	r7, sp, #8
 8004176:	60f8      	str	r0, [r7, #12]
 8004178:	4608      	mov	r0, r1
 800417a:	4611      	mov	r1, r2
 800417c:	461a      	mov	r2, r3
 800417e:	4603      	mov	r3, r0
 8004180:	817b      	strh	r3, [r7, #10]
 8004182:	460b      	mov	r3, r1
 8004184:	813b      	strh	r3, [r7, #8]
 8004186:	4613      	mov	r3, r2
 8004188:	71fb      	strb	r3, [r7, #7]
 800418a:	79fb      	ldrb	r3, [r7, #7]
 800418c:	2b03      	cmp	r3, #3
 800418e:	d837      	bhi.n	8004200 <ucg_DrawGlyph+0x90>
 8004190:	a201      	add	r2, pc, #4	; (adr r2, 8004198 <ucg_DrawGlyph+0x28>)
 8004192:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004196:	bf00      	nop
 8004198:	080041a9 	.word	0x080041a9
 800419c:	080041bf 	.word	0x080041bf
 80041a0:	080041d5 	.word	0x080041d5
 80041a4:	080041eb 	.word	0x080041eb
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80041ac:	68f8      	ldr	r0, [r7, #12]
 80041ae:	4798      	blx	r3
 80041b0:	4603      	mov	r3, r0
 80041b2:	b29a      	uxth	r2, r3
 80041b4:	893b      	ldrh	r3, [r7, #8]
 80041b6:	4413      	add	r3, r2
 80041b8:	b29b      	uxth	r3, r3
 80041ba:	813b      	strh	r3, [r7, #8]
 80041bc:	e020      	b.n	8004200 <ucg_DrawGlyph+0x90>
 80041be:	68fb      	ldr	r3, [r7, #12]
 80041c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80041c2:	68f8      	ldr	r0, [r7, #12]
 80041c4:	4798      	blx	r3
 80041c6:	4603      	mov	r3, r0
 80041c8:	897a      	ldrh	r2, [r7, #10]
 80041ca:	b29b      	uxth	r3, r3
 80041cc:	1ad3      	subs	r3, r2, r3
 80041ce:	b29b      	uxth	r3, r3
 80041d0:	817b      	strh	r3, [r7, #10]
 80041d2:	e015      	b.n	8004200 <ucg_DrawGlyph+0x90>
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80041d8:	68f8      	ldr	r0, [r7, #12]
 80041da:	4798      	blx	r3
 80041dc:	4603      	mov	r3, r0
 80041de:	893a      	ldrh	r2, [r7, #8]
 80041e0:	b29b      	uxth	r3, r3
 80041e2:	1ad3      	subs	r3, r2, r3
 80041e4:	b29b      	uxth	r3, r3
 80041e6:	813b      	strh	r3, [r7, #8]
 80041e8:	e00a      	b.n	8004200 <ucg_DrawGlyph+0x90>
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80041ee:	68f8      	ldr	r0, [r7, #12]
 80041f0:	4798      	blx	r3
 80041f2:	4603      	mov	r3, r0
 80041f4:	b29a      	uxth	r2, r3
 80041f6:	897b      	ldrh	r3, [r7, #10]
 80041f8:	4413      	add	r3, r2
 80041fa:	b29b      	uxth	r3, r3
 80041fc:	817b      	strh	r3, [r7, #10]
 80041fe:	bf00      	nop
 8004200:	79f8      	ldrb	r0, [r7, #7]
 8004202:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8004206:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800420a:	7e3b      	ldrb	r3, [r7, #24]
 800420c:	9300      	str	r3, [sp, #0]
 800420e:	4603      	mov	r3, r0
 8004210:	68f8      	ldr	r0, [r7, #12]
 8004212:	f7ff ff6b 	bl	80040ec <ucg_font_draw_glyph>
 8004216:	4603      	mov	r3, r0
 8004218:	4618      	mov	r0, r3
 800421a:	3710      	adds	r7, #16
 800421c:	46bd      	mov	sp, r7
 800421e:	bd80      	pop	{r7, pc}

08004220 <task_drawString>:
 8004220:	b580      	push	{r7, lr}
 8004222:	b086      	sub	sp, #24
 8004224:	af02      	add	r7, sp, #8
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	2300      	movs	r3, #0
 800422a:	81fb      	strh	r3, [r7, #14]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	60bb      	str	r3, [r7, #8]
 8004230:	4b45      	ldr	r3, [pc, #276]	; (8004348 <task_drawString+0x128>)
 8004232:	781b      	ldrb	r3, [r3, #0]
 8004234:	2b00      	cmp	r3, #0
 8004236:	d002      	beq.n	800423e <task_drawString+0x1e>
 8004238:	2b01      	cmp	r3, #1
 800423a:	d01e      	beq.n	800427a <task_drawString+0x5a>
 800423c:	e07b      	b.n	8004336 <task_drawString+0x116>
 800423e:	4843      	ldr	r0, [pc, #268]	; (800434c <task_drawString+0x12c>)
 8004240:	f000 fb5d 	bl	80048fe <bufNumItems>
 8004244:	4603      	mov	r3, r0
 8004246:	2b00      	cmp	r3, #0
 8004248:	d007      	beq.n	800425a <task_drawString+0x3a>
 800424a:	4941      	ldr	r1, [pc, #260]	; (8004350 <task_drawString+0x130>)
 800424c:	483f      	ldr	r0, [pc, #252]	; (800434c <task_drawString+0x12c>)
 800424e:	f000 fbef 	bl	8004a30 <bufDeDat>
 8004252:	4b3d      	ldr	r3, [pc, #244]	; (8004348 <task_drawString+0x128>)
 8004254:	2201      	movs	r2, #1
 8004256:	701a      	strb	r2, [r3, #0]
 8004258:	e071      	b.n	800433e <task_drawString+0x11e>
 800425a:	4b3e      	ldr	r3, [pc, #248]	; (8004354 <task_drawString+0x134>)
 800425c:	781b      	ldrb	r3, [r3, #0]
 800425e:	2bff      	cmp	r3, #255	; 0xff
 8004260:	d007      	beq.n	8004272 <task_drawString+0x52>
 8004262:	4b3c      	ldr	r3, [pc, #240]	; (8004354 <task_drawString+0x134>)
 8004264:	781b      	ldrb	r3, [r3, #0]
 8004266:	4618      	mov	r0, r3
 8004268:	f7fe fd28 	bl	8002cbc <TimerStop>
 800426c:	4b39      	ldr	r3, [pc, #228]	; (8004354 <task_drawString+0x134>)
 800426e:	22ff      	movs	r2, #255	; 0xff
 8004270:	701a      	strb	r2, [r3, #0]
 8004272:	4b35      	ldr	r3, [pc, #212]	; (8004348 <task_drawString+0x128>)
 8004274:	2200      	movs	r2, #0
 8004276:	701a      	strb	r2, [r3, #0]
 8004278:	e061      	b.n	800433e <task_drawString+0x11e>
 800427a:	4b35      	ldr	r3, [pc, #212]	; (8004350 <task_drawString+0x130>)
 800427c:	689b      	ldr	r3, [r3, #8]
 800427e:	781b      	ldrb	r3, [r3, #0]
 8004280:	2b00      	cmp	r3, #0
 8004282:	d054      	beq.n	800432e <task_drawString+0x10e>
 8004284:	4b32      	ldr	r3, [pc, #200]	; (8004350 <task_drawString+0x130>)
 8004286:	f9b3 1000 	ldrsh.w	r1, [r3]
 800428a:	4b31      	ldr	r3, [pc, #196]	; (8004350 <task_drawString+0x130>)
 800428c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8004290:	4b2f      	ldr	r3, [pc, #188]	; (8004350 <task_drawString+0x130>)
 8004292:	7918      	ldrb	r0, [r3, #4]
 8004294:	4b2e      	ldr	r3, [pc, #184]	; (8004350 <task_drawString+0x130>)
 8004296:	689b      	ldr	r3, [r3, #8]
 8004298:	781b      	ldrb	r3, [r3, #0]
 800429a:	9300      	str	r3, [sp, #0]
 800429c:	4603      	mov	r3, r0
 800429e:	68b8      	ldr	r0, [r7, #8]
 80042a0:	f7ff ff66 	bl	8004170 <ucg_DrawGlyph>
 80042a4:	4603      	mov	r3, r0
 80042a6:	81fb      	strh	r3, [r7, #14]
 80042a8:	4b29      	ldr	r3, [pc, #164]	; (8004350 <task_drawString+0x130>)
 80042aa:	791b      	ldrb	r3, [r3, #4]
 80042ac:	2b03      	cmp	r3, #3
 80042ae:	d837      	bhi.n	8004320 <task_drawString+0x100>
 80042b0:	a201      	add	r2, pc, #4	; (adr r2, 80042b8 <task_drawString+0x98>)
 80042b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80042b6:	bf00      	nop
 80042b8:	080042c9 	.word	0x080042c9
 80042bc:	080042df 	.word	0x080042df
 80042c0:	080042f5 	.word	0x080042f5
 80042c4:	0800430b 	.word	0x0800430b
 80042c8:	4b21      	ldr	r3, [pc, #132]	; (8004350 <task_drawString+0x130>)
 80042ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80042ce:	b29a      	uxth	r2, r3
 80042d0:	89fb      	ldrh	r3, [r7, #14]
 80042d2:	4413      	add	r3, r2
 80042d4:	b29b      	uxth	r3, r3
 80042d6:	b21a      	sxth	r2, r3
 80042d8:	4b1d      	ldr	r3, [pc, #116]	; (8004350 <task_drawString+0x130>)
 80042da:	801a      	strh	r2, [r3, #0]
 80042dc:	e021      	b.n	8004322 <task_drawString+0x102>
 80042de:	4b1c      	ldr	r3, [pc, #112]	; (8004350 <task_drawString+0x130>)
 80042e0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80042e4:	b29a      	uxth	r2, r3
 80042e6:	89fb      	ldrh	r3, [r7, #14]
 80042e8:	4413      	add	r3, r2
 80042ea:	b29b      	uxth	r3, r3
 80042ec:	b21a      	sxth	r2, r3
 80042ee:	4b18      	ldr	r3, [pc, #96]	; (8004350 <task_drawString+0x130>)
 80042f0:	805a      	strh	r2, [r3, #2]
 80042f2:	e016      	b.n	8004322 <task_drawString+0x102>
 80042f4:	4b16      	ldr	r3, [pc, #88]	; (8004350 <task_drawString+0x130>)
 80042f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80042fa:	b29a      	uxth	r2, r3
 80042fc:	89fb      	ldrh	r3, [r7, #14]
 80042fe:	1ad3      	subs	r3, r2, r3
 8004300:	b29b      	uxth	r3, r3
 8004302:	b21a      	sxth	r2, r3
 8004304:	4b12      	ldr	r3, [pc, #72]	; (8004350 <task_drawString+0x130>)
 8004306:	801a      	strh	r2, [r3, #0]
 8004308:	e00b      	b.n	8004322 <task_drawString+0x102>
 800430a:	4b11      	ldr	r3, [pc, #68]	; (8004350 <task_drawString+0x130>)
 800430c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004310:	b29a      	uxth	r2, r3
 8004312:	89fb      	ldrh	r3, [r7, #14]
 8004314:	1ad3      	subs	r3, r2, r3
 8004316:	b29b      	uxth	r3, r3
 8004318:	b21a      	sxth	r2, r3
 800431a:	4b0d      	ldr	r3, [pc, #52]	; (8004350 <task_drawString+0x130>)
 800431c:	805a      	strh	r2, [r3, #2]
 800431e:	e000      	b.n	8004322 <task_drawString+0x102>
 8004320:	bf00      	nop
 8004322:	4b0b      	ldr	r3, [pc, #44]	; (8004350 <task_drawString+0x130>)
 8004324:	689b      	ldr	r3, [r3, #8]
 8004326:	3301      	adds	r3, #1
 8004328:	4a09      	ldr	r2, [pc, #36]	; (8004350 <task_drawString+0x130>)
 800432a:	6093      	str	r3, [r2, #8]
 800432c:	e007      	b.n	800433e <task_drawString+0x11e>
 800432e:	4b06      	ldr	r3, [pc, #24]	; (8004348 <task_drawString+0x128>)
 8004330:	2200      	movs	r2, #0
 8004332:	701a      	strb	r2, [r3, #0]
 8004334:	e003      	b.n	800433e <task_drawString+0x11e>
 8004336:	4b04      	ldr	r3, [pc, #16]	; (8004348 <task_drawString+0x128>)
 8004338:	2200      	movs	r2, #0
 800433a:	701a      	strb	r2, [r3, #0]
 800433c:	bf00      	nop
 800433e:	bf00      	nop
 8004340:	3710      	adds	r7, #16
 8004342:	46bd      	mov	sp, r7
 8004344:	bd80      	pop	{r7, pc}
 8004346:	bf00      	nop
 8004348:	2000133c 	.word	0x2000133c
 800434c:	2000032c 	.word	0x2000032c
 8004350:	20001388 	.word	0x20001388
 8004354:	20000028 	.word	0x20000028

08004358 <ucg_DrawString>:
 8004358:	b580      	push	{r7, lr}
 800435a:	b08a      	sub	sp, #40	; 0x28
 800435c:	af02      	add	r7, sp, #8
 800435e:	60f8      	str	r0, [r7, #12]
 8004360:	4608      	mov	r0, r1
 8004362:	4611      	mov	r1, r2
 8004364:	461a      	mov	r2, r3
 8004366:	4603      	mov	r3, r0
 8004368:	817b      	strh	r3, [r7, #10]
 800436a:	460b      	mov	r3, r1
 800436c:	813b      	strh	r3, [r7, #8]
 800436e:	4613      	mov	r3, r2
 8004370:	71fb      	strb	r3, [r7, #7]
 8004372:	2300      	movs	r3, #0
 8004374:	83fb      	strh	r3, [r7, #30]
 8004376:	897b      	ldrh	r3, [r7, #10]
 8004378:	823b      	strh	r3, [r7, #16]
 800437a:	893b      	ldrh	r3, [r7, #8]
 800437c:	827b      	strh	r3, [r7, #18]
 800437e:	79fb      	ldrb	r3, [r7, #7]
 8004380:	753b      	strb	r3, [r7, #20]
 8004382:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004384:	61bb      	str	r3, [r7, #24]
 8004386:	f107 0310 	add.w	r3, r7, #16
 800438a:	4619      	mov	r1, r3
 800438c:	480c      	ldr	r0, [pc, #48]	; (80043c0 <ucg_DrawString+0x68>)
 800438e:	f000 fb01 	bl	8004994 <bufEnDat>
 8004392:	4b0c      	ldr	r3, [pc, #48]	; (80043c4 <ucg_DrawString+0x6c>)
 8004394:	781b      	ldrb	r3, [r3, #0]
 8004396:	2bff      	cmp	r3, #255	; 0xff
 8004398:	d10b      	bne.n	80043b2 <ucg_DrawString+0x5a>
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	9300      	str	r3, [sp, #0]
 800439e:	4b0a      	ldr	r3, [pc, #40]	; (80043c8 <ucg_DrawString+0x70>)
 80043a0:	22ff      	movs	r2, #255	; 0xff
 80043a2:	211e      	movs	r1, #30
 80043a4:	4809      	ldr	r0, [pc, #36]	; (80043cc <ucg_DrawString+0x74>)
 80043a6:	f7fe fc27 	bl	8002bf8 <TimerStart>
 80043aa:	4603      	mov	r3, r0
 80043ac:	461a      	mov	r2, r3
 80043ae:	4b05      	ldr	r3, [pc, #20]	; (80043c4 <ucg_DrawString+0x6c>)
 80043b0:	701a      	strb	r2, [r3, #0]
 80043b2:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80043b6:	4618      	mov	r0, r3
 80043b8:	3720      	adds	r7, #32
 80043ba:	46bd      	mov	sp, r7
 80043bc:	bd80      	pop	{r7, pc}
 80043be:	bf00      	nop
 80043c0:	2000032c 	.word	0x2000032c
 80043c4:	20000028 	.word	0x20000028
 80043c8:	08004221 	.word	0x08004221
 80043cc:	08005dfc 	.word	0x08005dfc

080043d0 <ucg_UpdateRefHeight>:
 80043d0:	b480      	push	{r7}
 80043d2:	b083      	sub	sp, #12
 80043d4:	af00      	add	r7, sp, #0
 80043d6:	6078      	str	r0, [r7, #4]
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80043dc:	2b00      	cmp	r3, #0
 80043de:	d05d      	beq.n	800449c <ucg_UpdateRefHeight+0xcc>
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 80043fe:	2b00      	cmp	r3, #0
 8004400:	d04d      	beq.n	800449e <ucg_UpdateRefHeight+0xce>
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8004408:	2b01      	cmp	r3, #1
 800440a:	d11c      	bne.n	8004446 <ucg_UpdateRefHeight+0x76>
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8004418:	429a      	cmp	r2, r3
 800441a:	da05      	bge.n	8004428 <ucg_UpdateRefHeight+0x58>
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8004434:	429a      	cmp	r2, r3
 8004436:	dd32      	ble.n	800449e <ucg_UpdateRefHeight+0xce>
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8004444:	e02b      	b.n	800449e <ucg_UpdateRefHeight+0xce>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 800444c:	461a      	mov	r2, r3
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8004454:	4619      	mov	r1, r3
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 800445c:	440b      	add	r3, r1
 800445e:	429a      	cmp	r2, r3
 8004460:	da0d      	bge.n	800447e <ucg_UpdateRefHeight+0xae>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8004468:	b2da      	uxtb	r2, r3
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8004470:	b2db      	uxtb	r3, r3
 8004472:	4413      	add	r3, r2
 8004474:	b2db      	uxtb	r3, r3
 8004476:	b25a      	sxtb	r2, r3
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 800448a:	429a      	cmp	r2, r3
 800448c:	dd07      	ble.n	800449e <ucg_UpdateRefHeight+0xce>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800449a:	e000      	b.n	800449e <ucg_UpdateRefHeight+0xce>
 800449c:	bf00      	nop
 800449e:	370c      	adds	r7, #12
 80044a0:	46bd      	mov	sp, r7
 80044a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a6:	4770      	bx	lr

080044a8 <ucg_font_calc_vref_font>:
 80044a8:	b480      	push	{r7}
 80044aa:	b083      	sub	sp, #12
 80044ac:	af00      	add	r7, sp, #0
 80044ae:	6078      	str	r0, [r7, #4]
 80044b0:	2300      	movs	r3, #0
 80044b2:	4618      	mov	r0, r3
 80044b4:	370c      	adds	r7, #12
 80044b6:	46bd      	mov	sp, r7
 80044b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044bc:	4770      	bx	lr
	...

080044c0 <ucg_SetFontPosBaseline>:
 80044c0:	b480      	push	{r7}
 80044c2:	b083      	sub	sp, #12
 80044c4:	af00      	add	r7, sp, #0
 80044c6:	6078      	str	r0, [r7, #4]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	4a04      	ldr	r2, [pc, #16]	; (80044dc <ucg_SetFontPosBaseline+0x1c>)
 80044cc:	67da      	str	r2, [r3, #124]	; 0x7c
 80044ce:	bf00      	nop
 80044d0:	370c      	adds	r7, #12
 80044d2:	46bd      	mov	sp, r7
 80044d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044d8:	4770      	bx	lr
 80044da:	bf00      	nop
 80044dc:	080044a9 	.word	0x080044a9

080044e0 <ucg_SetFont>:
 80044e0:	b580      	push	{r7, lr}
 80044e2:	b082      	sub	sp, #8
 80044e4:	af00      	add	r7, sp, #0
 80044e6:	6078      	str	r0, [r7, #4]
 80044e8:	6039      	str	r1, [r7, #0]
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80044ee:	683a      	ldr	r2, [r7, #0]
 80044f0:	429a      	cmp	r2, r3
 80044f2:	d012      	beq.n	800451a <ucg_SetFont+0x3a>
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	683a      	ldr	r2, [r7, #0]
 80044f8:	679a      	str	r2, [r3, #120]	; 0x78
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	3390      	adds	r3, #144	; 0x90
 80044fe:	6839      	ldr	r1, [r7, #0]
 8004500:	4618      	mov	r0, r3
 8004502:	f7ff fac9 	bl	8003a98 <ucg_read_font_info>
 8004506:	6878      	ldr	r0, [r7, #4]
 8004508:	f7ff ff62 	bl	80043d0 <ucg_UpdateRefHeight>
 800450c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004510:	220c      	movs	r2, #12
 8004512:	4904      	ldr	r1, [pc, #16]	; (8004524 <ucg_SetFont+0x44>)
 8004514:	4804      	ldr	r0, [pc, #16]	; (8004528 <ucg_SetFont+0x48>)
 8004516:	f000 f9d7 	bl	80048c8 <bufInit>
 800451a:	bf00      	nop
 800451c:	3708      	adds	r7, #8
 800451e:	46bd      	mov	sp, r7
 8004520:	bd80      	pop	{r7, pc}
 8004522:	bf00      	nop
 8004524:	2000032c 	.word	0x2000032c
 8004528:	2000033c 	.word	0x2000033c

0800452c <ucg_init_struct>:
 800452c:	b480      	push	{r7}
 800452e:	b083      	sub	sp, #12
 8004530:	af00      	add	r7, sp, #0
 8004532:	6078      	str	r0, [r7, #4]
 8004534:	687a      	ldr	r2, [r7, #4]
 8004536:	7813      	ldrb	r3, [r2, #0]
 8004538:	f36f 0300 	bfc	r3, #0, #1
 800453c:	7013      	strb	r3, [r2, #0]
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	2200      	movs	r2, #0
 8004542:	611a      	str	r2, [r3, #16]
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	2201      	movs	r2, #1
 8004548:	865a      	strh	r2, [r3, #50]	; 0x32
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	2200      	movs	r2, #0
 800454e:	679a      	str	r2, [r3, #120]	; 0x78
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	2201      	movs	r2, #1
 8004554:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	2200      	movs	r2, #0
 800455c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	2200      	movs	r2, #0
 8004564:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	2200      	movs	r2, #0
 800456c:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8004570:	bf00      	nop
 8004572:	370c      	adds	r7, #12
 8004574:	46bd      	mov	sp, r7
 8004576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800457a:	4770      	bx	lr

0800457c <ucg_Init>:
 800457c:	b580      	push	{r7, lr}
 800457e:	b086      	sub	sp, #24
 8004580:	af00      	add	r7, sp, #0
 8004582:	60f8      	str	r0, [r7, #12]
 8004584:	60b9      	str	r1, [r7, #8]
 8004586:	607a      	str	r2, [r7, #4]
 8004588:	603b      	str	r3, [r7, #0]
 800458a:	68f8      	ldr	r0, [r7, #12]
 800458c:	f7ff ffce 	bl	800452c <ucg_init_struct>
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	2b00      	cmp	r3, #0
 8004594:	d103      	bne.n	800459e <ucg_Init+0x22>
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	4a0e      	ldr	r2, [pc, #56]	; (80045d4 <ucg_Init+0x58>)
 800459a:	60da      	str	r2, [r3, #12]
 800459c:	e002      	b.n	80045a4 <ucg_Init+0x28>
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	687a      	ldr	r2, [r7, #4]
 80045a2:	60da      	str	r2, [r3, #12]
 80045a4:	68fb      	ldr	r3, [r7, #12]
 80045a6:	68ba      	ldr	r2, [r7, #8]
 80045a8:	609a      	str	r2, [r3, #8]
 80045aa:	68fb      	ldr	r3, [r7, #12]
 80045ac:	683a      	ldr	r2, [r7, #0]
 80045ae:	61da      	str	r2, [r3, #28]
 80045b0:	68f8      	ldr	r0, [r7, #12]
 80045b2:	f7ff ff85 	bl	80044c0 <ucg_SetFontPosBaseline>
 80045b6:	68f8      	ldr	r0, [r7, #12]
 80045b8:	f7ff f996 	bl	80038e8 <ucg_PowerUp>
 80045bc:	4603      	mov	r3, r0
 80045be:	82fb      	strh	r3, [r7, #22]
 80045c0:	68f8      	ldr	r0, [r7, #12]
 80045c2:	f7ff f9d6 	bl	8003972 <ucg_GetDimension>
 80045c6:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80045ca:	4618      	mov	r0, r3
 80045cc:	3718      	adds	r7, #24
 80045ce:	46bd      	mov	sp, r7
 80045d0:	bd80      	pop	{r7, pc}
 80045d2:	bf00      	nop
 80045d4:	0800354d 	.word	0x0800354d

080045d8 <ucg_Draw90Line>:
 80045d8:	b580      	push	{r7, lr}
 80045da:	b084      	sub	sp, #16
 80045dc:	af00      	add	r7, sp, #0
 80045de:	60f8      	str	r0, [r7, #12]
 80045e0:	4608      	mov	r0, r1
 80045e2:	4611      	mov	r1, r2
 80045e4:	461a      	mov	r2, r3
 80045e6:	4603      	mov	r3, r0
 80045e8:	817b      	strh	r3, [r7, #10]
 80045ea:	460b      	mov	r3, r1
 80045ec:	813b      	strh	r3, [r7, #8]
 80045ee:	4613      	mov	r3, r2
 80045f0:	80fb      	strh	r3, [r7, #6]
 80045f2:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 80045f6:	68f9      	ldr	r1, [r7, #12]
 80045f8:	4613      	mov	r3, r2
 80045fa:	005b      	lsls	r3, r3, #1
 80045fc:	4413      	add	r3, r2
 80045fe:	440b      	add	r3, r1
 8004600:	333a      	adds	r3, #58	; 0x3a
 8004602:	781a      	ldrb	r2, [r3, #0]
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800460a:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800460e:	68f9      	ldr	r1, [r7, #12]
 8004610:	4613      	mov	r3, r2
 8004612:	005b      	lsls	r3, r3, #1
 8004614:	4413      	add	r3, r2
 8004616:	440b      	add	r3, r1
 8004618:	333b      	adds	r3, #59	; 0x3b
 800461a:	781a      	ldrb	r2, [r3, #0]
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8004622:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004626:	68f9      	ldr	r1, [r7, #12]
 8004628:	4613      	mov	r3, r2
 800462a:	005b      	lsls	r3, r3, #1
 800462c:	4413      	add	r3, r2
 800462e:	440b      	add	r3, r1
 8004630:	333c      	adds	r3, #60	; 0x3c
 8004632:	781a      	ldrb	r2, [r3, #0]
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	897a      	ldrh	r2, [r7, #10]
 800463e:	849a      	strh	r2, [r3, #36]	; 0x24
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	893a      	ldrh	r2, [r7, #8]
 8004644:	84da      	strh	r2, [r3, #38]	; 0x26
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	88fa      	ldrh	r2, [r7, #6]
 800464a:	859a      	strh	r2, [r3, #44]	; 0x2c
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	8b3a      	ldrh	r2, [r7, #24]
 8004650:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004652:	68f8      	ldr	r0, [r7, #12]
 8004654:	f7ff f99f 	bl	8003996 <ucg_DrawL90FXWithArg>
 8004658:	bf00      	nop
 800465a:	3710      	adds	r7, #16
 800465c:	46bd      	mov	sp, r7
 800465e:	bd80      	pop	{r7, pc}

08004660 <ucg_DrawHLine>:
 8004660:	b580      	push	{r7, lr}
 8004662:	b086      	sub	sp, #24
 8004664:	af02      	add	r7, sp, #8
 8004666:	60f8      	str	r0, [r7, #12]
 8004668:	4608      	mov	r0, r1
 800466a:	4611      	mov	r1, r2
 800466c:	461a      	mov	r2, r3
 800466e:	4603      	mov	r3, r0
 8004670:	817b      	strh	r3, [r7, #10]
 8004672:	460b      	mov	r3, r1
 8004674:	813b      	strh	r3, [r7, #8]
 8004676:	4613      	mov	r3, r2
 8004678:	80fb      	strh	r3, [r7, #6]
 800467a:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 800467e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8004682:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004686:	2300      	movs	r3, #0
 8004688:	9301      	str	r3, [sp, #4]
 800468a:	2300      	movs	r3, #0
 800468c:	9300      	str	r3, [sp, #0]
 800468e:	4603      	mov	r3, r0
 8004690:	68f8      	ldr	r0, [r7, #12]
 8004692:	f7ff ffa1 	bl	80045d8 <ucg_Draw90Line>
 8004696:	bf00      	nop
 8004698:	3710      	adds	r7, #16
 800469a:	46bd      	mov	sp, r7
 800469c:	bd80      	pop	{r7, pc}

0800469e <ucg_SetColor>:
 800469e:	b480      	push	{r7}
 80046a0:	b083      	sub	sp, #12
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	6078      	str	r0, [r7, #4]
 80046a6:	4608      	mov	r0, r1
 80046a8:	4611      	mov	r1, r2
 80046aa:	461a      	mov	r2, r3
 80046ac:	4603      	mov	r3, r0
 80046ae:	70fb      	strb	r3, [r7, #3]
 80046b0:	460b      	mov	r3, r1
 80046b2:	70bb      	strb	r3, [r7, #2]
 80046b4:	4613      	mov	r3, r2
 80046b6:	707b      	strb	r3, [r7, #1]
 80046b8:	78fa      	ldrb	r2, [r7, #3]
 80046ba:	6879      	ldr	r1, [r7, #4]
 80046bc:	4613      	mov	r3, r2
 80046be:	005b      	lsls	r3, r3, #1
 80046c0:	4413      	add	r3, r2
 80046c2:	440b      	add	r3, r1
 80046c4:	333a      	adds	r3, #58	; 0x3a
 80046c6:	78ba      	ldrb	r2, [r7, #2]
 80046c8:	701a      	strb	r2, [r3, #0]
 80046ca:	78fa      	ldrb	r2, [r7, #3]
 80046cc:	6879      	ldr	r1, [r7, #4]
 80046ce:	4613      	mov	r3, r2
 80046d0:	005b      	lsls	r3, r3, #1
 80046d2:	4413      	add	r3, r2
 80046d4:	440b      	add	r3, r1
 80046d6:	333b      	adds	r3, #59	; 0x3b
 80046d8:	787a      	ldrb	r2, [r7, #1]
 80046da:	701a      	strb	r2, [r3, #0]
 80046dc:	78fa      	ldrb	r2, [r7, #3]
 80046de:	6879      	ldr	r1, [r7, #4]
 80046e0:	4613      	mov	r3, r2
 80046e2:	005b      	lsls	r3, r3, #1
 80046e4:	4413      	add	r3, r2
 80046e6:	440b      	add	r3, r1
 80046e8:	333c      	adds	r3, #60	; 0x3c
 80046ea:	7c3a      	ldrb	r2, [r7, #16]
 80046ec:	701a      	strb	r2, [r3, #0]
 80046ee:	bf00      	nop
 80046f0:	370c      	adds	r7, #12
 80046f2:	46bd      	mov	sp, r7
 80046f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046f8:	4770      	bx	lr

080046fa <ucg_UndoRotate>:
 80046fa:	b580      	push	{r7, lr}
 80046fc:	b082      	sub	sp, #8
 80046fe:	af00      	add	r7, sp, #0
 8004700:	6078      	str	r0, [r7, #4]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	691b      	ldr	r3, [r3, #16]
 8004706:	2b00      	cmp	r3, #0
 8004708:	d006      	beq.n	8004718 <ucg_UndoRotate+0x1e>
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	691a      	ldr	r2, [r3, #16]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	609a      	str	r2, [r3, #8]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	2200      	movs	r2, #0
 8004716:	611a      	str	r2, [r3, #16]
 8004718:	6878      	ldr	r0, [r7, #4]
 800471a:	f7ff f92a 	bl	8003972 <ucg_GetDimension>
 800471e:	6878      	ldr	r0, [r7, #4]
 8004720:	f7ff f90f 	bl	8003942 <ucg_SetMaxClipRange>
 8004724:	bf00      	nop
 8004726:	3708      	adds	r7, #8
 8004728:	46bd      	mov	sp, r7
 800472a:	bd80      	pop	{r7, pc}

0800472c <ucg_rotate_180_xy>:
 800472c:	b480      	push	{r7}
 800472e:	b085      	sub	sp, #20
 8004730:	af00      	add	r7, sp, #0
 8004732:	6078      	str	r0, [r7, #4]
 8004734:	6039      	str	r1, [r7, #0]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	8adb      	ldrh	r3, [r3, #22]
 800473a:	81fb      	strh	r3, [r7, #14]
 800473c:	89fa      	ldrh	r2, [r7, #14]
 800473e:	683b      	ldr	r3, [r7, #0]
 8004740:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004744:	b29b      	uxth	r3, r3
 8004746:	1ad3      	subs	r3, r2, r3
 8004748:	b29b      	uxth	r3, r3
 800474a:	81fb      	strh	r3, [r7, #14]
 800474c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004750:	b29b      	uxth	r3, r3
 8004752:	3b01      	subs	r3, #1
 8004754:	b29b      	uxth	r3, r3
 8004756:	81fb      	strh	r3, [r7, #14]
 8004758:	683b      	ldr	r3, [r7, #0]
 800475a:	89fa      	ldrh	r2, [r7, #14]
 800475c:	805a      	strh	r2, [r3, #2]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	8a9b      	ldrh	r3, [r3, #20]
 8004762:	81bb      	strh	r3, [r7, #12]
 8004764:	89ba      	ldrh	r2, [r7, #12]
 8004766:	683b      	ldr	r3, [r7, #0]
 8004768:	f9b3 3000 	ldrsh.w	r3, [r3]
 800476c:	b29b      	uxth	r3, r3
 800476e:	1ad3      	subs	r3, r2, r3
 8004770:	b29b      	uxth	r3, r3
 8004772:	81bb      	strh	r3, [r7, #12]
 8004774:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004778:	b29b      	uxth	r3, r3
 800477a:	3b01      	subs	r3, #1
 800477c:	b29b      	uxth	r3, r3
 800477e:	81bb      	strh	r3, [r7, #12]
 8004780:	683b      	ldr	r3, [r7, #0]
 8004782:	89ba      	ldrh	r2, [r7, #12]
 8004784:	801a      	strh	r2, [r3, #0]
 8004786:	bf00      	nop
 8004788:	3714      	adds	r7, #20
 800478a:	46bd      	mov	sp, r7
 800478c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004790:	4770      	bx	lr
	...

08004794 <ucg_dev_rotate180>:
 8004794:	b580      	push	{r7, lr}
 8004796:	b084      	sub	sp, #16
 8004798:	af00      	add	r7, sp, #0
 800479a:	60f8      	str	r0, [r7, #12]
 800479c:	460b      	mov	r3, r1
 800479e:	607a      	str	r2, [r7, #4]
 80047a0:	817b      	strh	r3, [r7, #10]
 80047a2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80047a6:	3b0c      	subs	r3, #12
 80047a8:	2b0b      	cmp	r3, #11
 80047aa:	d866      	bhi.n	800487a <ucg_dev_rotate180+0xe6>
 80047ac:	a201      	add	r2, pc, #4	; (adr r2, 80047b4 <ucg_dev_rotate180+0x20>)
 80047ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047b2:	bf00      	nop
 80047b4:	08004803 	.word	0x08004803
 80047b8:	0800487b 	.word	0x0800487b
 80047bc:	0800487b 	.word	0x0800487b
 80047c0:	080047e5 	.word	0x080047e5
 80047c4:	0800487b 	.word	0x0800487b
 80047c8:	0800487b 	.word	0x0800487b
 80047cc:	0800487b 	.word	0x0800487b
 80047d0:	0800487b 	.word	0x0800487b
 80047d4:	0800484b 	.word	0x0800484b
 80047d8:	0800484b 	.word	0x0800484b
 80047dc:	0800487b 	.word	0x0800487b
 80047e0:	0800484b 	.word	0x0800484b
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	691b      	ldr	r3, [r3, #16]
 80047e8:	68fa      	ldr	r2, [r7, #12]
 80047ea:	3214      	adds	r2, #20
 80047ec:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80047f0:	68f8      	ldr	r0, [r7, #12]
 80047f2:	4798      	blx	r3
 80047f4:	687a      	ldr	r2, [r7, #4]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	3314      	adds	r3, #20
 80047fa:	6818      	ldr	r0, [r3, #0]
 80047fc:	6010      	str	r0, [r2, #0]
 80047fe:	2301      	movs	r3, #1
 8004800:	e043      	b.n	800488a <ucg_dev_rotate180+0xf6>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004808:	b29a      	uxth	r2, r3
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8004810:	b29b      	uxth	r3, r3
 8004812:	4413      	add	r3, r2
 8004814:	b29b      	uxth	r3, r3
 8004816:	3b01      	subs	r3, #1
 8004818:	b29b      	uxth	r3, r3
 800481a:	b21a      	sxth	r2, r3
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	805a      	strh	r2, [r3, #2]
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004826:	b29a      	uxth	r2, r3
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800482e:	b29b      	uxth	r3, r3
 8004830:	4413      	add	r3, r2
 8004832:	b29b      	uxth	r3, r3
 8004834:	3b01      	subs	r3, #1
 8004836:	b29b      	uxth	r3, r3
 8004838:	b21a      	sxth	r2, r3
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	801a      	strh	r2, [r3, #0]
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	4619      	mov	r1, r3
 8004842:	68f8      	ldr	r0, [r7, #12]
 8004844:	f7ff ff72 	bl	800472c <ucg_rotate_180_xy>
 8004848:	e017      	b.n	800487a <ucg_dev_rotate180+0xe6>
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8004850:	b29b      	uxth	r3, r3
 8004852:	3302      	adds	r3, #2
 8004854:	b29b      	uxth	r3, r3
 8004856:	b21a      	sxth	r2, r3
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8004862:	f003 0303 	and.w	r3, r3, #3
 8004866:	b21a      	sxth	r2, r3
 8004868:	68fb      	ldr	r3, [r7, #12]
 800486a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800486c:	68fb      	ldr	r3, [r7, #12]
 800486e:	3324      	adds	r3, #36	; 0x24
 8004870:	4619      	mov	r1, r3
 8004872:	68f8      	ldr	r0, [r7, #12]
 8004874:	f7ff ff5a 	bl	800472c <ucg_rotate_180_xy>
 8004878:	bf00      	nop
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	691b      	ldr	r3, [r3, #16]
 800487e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004882:	687a      	ldr	r2, [r7, #4]
 8004884:	68f8      	ldr	r0, [r7, #12]
 8004886:	4798      	blx	r3
 8004888:	4603      	mov	r3, r0
 800488a:	4618      	mov	r0, r3
 800488c:	3710      	adds	r7, #16
 800488e:	46bd      	mov	sp, r7
 8004890:	bd80      	pop	{r7, pc}
 8004892:	bf00      	nop

08004894 <ucg_SetRotate180>:
 8004894:	b580      	push	{r7, lr}
 8004896:	b082      	sub	sp, #8
 8004898:	af00      	add	r7, sp, #0
 800489a:	6078      	str	r0, [r7, #4]
 800489c:	6878      	ldr	r0, [r7, #4]
 800489e:	f7ff ff2c 	bl	80046fa <ucg_UndoRotate>
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	689a      	ldr	r2, [r3, #8]
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	611a      	str	r2, [r3, #16]
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	4a05      	ldr	r2, [pc, #20]	; (80048c4 <ucg_SetRotate180+0x30>)
 80048ae:	609a      	str	r2, [r3, #8]
 80048b0:	6878      	ldr	r0, [r7, #4]
 80048b2:	f7ff f85e 	bl	8003972 <ucg_GetDimension>
 80048b6:	6878      	ldr	r0, [r7, #4]
 80048b8:	f7ff f843 	bl	8003942 <ucg_SetMaxClipRange>
 80048bc:	bf00      	nop
 80048be:	3708      	adds	r7, #8
 80048c0:	46bd      	mov	sp, r7
 80048c2:	bd80      	pop	{r7, pc}
 80048c4:	08004795 	.word	0x08004795

080048c8 <bufInit>:
 80048c8:	b580      	push	{r7, lr}
 80048ca:	b084      	sub	sp, #16
 80048cc:	af00      	add	r7, sp, #0
 80048ce:	60f8      	str	r0, [r7, #12]
 80048d0:	60b9      	str	r1, [r7, #8]
 80048d2:	4611      	mov	r1, r2
 80048d4:	461a      	mov	r2, r3
 80048d6:	460b      	mov	r3, r1
 80048d8:	71fb      	strb	r3, [r7, #7]
 80048da:	4613      	mov	r3, r2
 80048dc:	80bb      	strh	r3, [r7, #4]
 80048de:	68bb      	ldr	r3, [r7, #8]
 80048e0:	88ba      	ldrh	r2, [r7, #4]
 80048e2:	801a      	strh	r2, [r3, #0]
 80048e4:	68bb      	ldr	r3, [r7, #8]
 80048e6:	79fa      	ldrb	r2, [r7, #7]
 80048e8:	711a      	strb	r2, [r3, #4]
 80048ea:	68bb      	ldr	r3, [r7, #8]
 80048ec:	68fa      	ldr	r2, [r7, #12]
 80048ee:	60da      	str	r2, [r3, #12]
 80048f0:	68b8      	ldr	r0, [r7, #8]
 80048f2:	f000 f836 	bl	8004962 <bufFlush>
 80048f6:	bf00      	nop
 80048f8:	3710      	adds	r7, #16
 80048fa:	46bd      	mov	sp, r7
 80048fc:	bd80      	pop	{r7, pc}

080048fe <bufNumItems>:
 80048fe:	b480      	push	{r7}
 8004900:	b083      	sub	sp, #12
 8004902:	af00      	add	r7, sp, #0
 8004904:	6078      	str	r0, [r7, #4]
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	885b      	ldrh	r3, [r3, #2]
 800490a:	4618      	mov	r0, r3
 800490c:	370c      	adds	r7, #12
 800490e:	46bd      	mov	sp, r7
 8004910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004914:	4770      	bx	lr

08004916 <bufIsFull>:
 8004916:	b480      	push	{r7}
 8004918:	b083      	sub	sp, #12
 800491a:	af00      	add	r7, sp, #0
 800491c:	6078      	str	r0, [r7, #4]
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	885a      	ldrh	r2, [r3, #2]
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	881b      	ldrh	r3, [r3, #0]
 8004926:	429a      	cmp	r2, r3
 8004928:	bf2c      	ite	cs
 800492a:	2301      	movcs	r3, #1
 800492c:	2300      	movcc	r3, #0
 800492e:	b2db      	uxtb	r3, r3
 8004930:	4618      	mov	r0, r3
 8004932:	370c      	adds	r7, #12
 8004934:	46bd      	mov	sp, r7
 8004936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493a:	4770      	bx	lr

0800493c <bufIsEmpty>:
 800493c:	b480      	push	{r7}
 800493e:	b083      	sub	sp, #12
 8004940:	af00      	add	r7, sp, #0
 8004942:	6078      	str	r0, [r7, #4]
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	88da      	ldrh	r2, [r3, #6]
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	891b      	ldrh	r3, [r3, #8]
 800494c:	429a      	cmp	r2, r3
 800494e:	bf0c      	ite	eq
 8004950:	2301      	moveq	r3, #1
 8004952:	2300      	movne	r3, #0
 8004954:	b2db      	uxtb	r3, r3
 8004956:	4618      	mov	r0, r3
 8004958:	370c      	adds	r7, #12
 800495a:	46bd      	mov	sp, r7
 800495c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004960:	4770      	bx	lr

08004962 <bufFlush>:
 8004962:	b580      	push	{r7, lr}
 8004964:	b082      	sub	sp, #8
 8004966:	af00      	add	r7, sp, #0
 8004968:	6078      	str	r0, [r7, #4]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	2200      	movs	r2, #0
 800496e:	80da      	strh	r2, [r3, #6]
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	2200      	movs	r2, #0
 8004974:	811a      	strh	r2, [r3, #8]
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	2200      	movs	r2, #0
 800497a:	805a      	strh	r2, [r3, #2]
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	68d8      	ldr	r0, [r3, #12]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	881b      	ldrh	r3, [r3, #0]
 8004984:	461a      	mov	r2, r3
 8004986:	2100      	movs	r1, #0
 8004988:	f000 f894 	bl	8004ab4 <memsetl>
 800498c:	bf00      	nop
 800498e:	3708      	adds	r7, #8
 8004990:	46bd      	mov	sp, r7
 8004992:	bd80      	pop	{r7, pc}

08004994 <bufEnDat>:
 8004994:	b580      	push	{r7, lr}
 8004996:	b084      	sub	sp, #16
 8004998:	af00      	add	r7, sp, #0
 800499a:	6078      	str	r0, [r7, #4]
 800499c:	6039      	str	r1, [r7, #0]
 800499e:	b672      	cpsid	i
 80049a0:	2300      	movs	r3, #0
 80049a2:	73fb      	strb	r3, [r7, #15]
 80049a4:	e021      	b.n	80049ea <bufEnDat+0x56>
 80049a6:	7bfb      	ldrb	r3, [r7, #15]
 80049a8:	683a      	ldr	r2, [r7, #0]
 80049aa:	441a      	add	r2, r3
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	68db      	ldr	r3, [r3, #12]
 80049b0:	6879      	ldr	r1, [r7, #4]
 80049b2:	88c9      	ldrh	r1, [r1, #6]
 80049b4:	440b      	add	r3, r1
 80049b6:	7812      	ldrb	r2, [r2, #0]
 80049b8:	701a      	strb	r2, [r3, #0]
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	88db      	ldrh	r3, [r3, #6]
 80049be:	3301      	adds	r3, #1
 80049c0:	b29b      	uxth	r3, r3
 80049c2:	b21a      	sxth	r2, r3
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	881b      	ldrh	r3, [r3, #0]
 80049c8:	3b01      	subs	r3, #1
 80049ca:	b29b      	uxth	r3, r3
 80049cc:	b21b      	sxth	r3, r3
 80049ce:	4013      	ands	r3, r2
 80049d0:	b21b      	sxth	r3, r3
 80049d2:	b29a      	uxth	r2, r3
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	80da      	strh	r2, [r3, #6]
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	885b      	ldrh	r3, [r3, #2]
 80049dc:	3301      	adds	r3, #1
 80049de:	b29a      	uxth	r2, r3
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	805a      	strh	r2, [r3, #2]
 80049e4:	7bfb      	ldrb	r3, [r7, #15]
 80049e6:	3301      	adds	r3, #1
 80049e8:	73fb      	strb	r3, [r7, #15]
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	791b      	ldrb	r3, [r3, #4]
 80049ee:	7bfa      	ldrb	r2, [r7, #15]
 80049f0:	429a      	cmp	r2, r3
 80049f2:	d3d8      	bcc.n	80049a6 <bufEnDat+0x12>
 80049f4:	6878      	ldr	r0, [r7, #4]
 80049f6:	f7ff ff8e 	bl	8004916 <bufIsFull>
 80049fa:	4603      	mov	r3, r0
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d011      	beq.n	8004a24 <bufEnDat+0x90>
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	891a      	ldrh	r2, [r3, #8]
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	791b      	ldrb	r3, [r3, #4]
 8004a08:	b29b      	uxth	r3, r3
 8004a0a:	4413      	add	r3, r2
 8004a0c:	b29b      	uxth	r3, r3
 8004a0e:	b21a      	sxth	r2, r3
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	881b      	ldrh	r3, [r3, #0]
 8004a14:	3b01      	subs	r3, #1
 8004a16:	b29b      	uxth	r3, r3
 8004a18:	b21b      	sxth	r3, r3
 8004a1a:	4013      	ands	r3, r2
 8004a1c:	b21b      	sxth	r3, r3
 8004a1e:	b29a      	uxth	r2, r3
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	811a      	strh	r2, [r3, #8]
 8004a24:	b662      	cpsie	i
 8004a26:	2300      	movs	r3, #0
 8004a28:	4618      	mov	r0, r3
 8004a2a:	3710      	adds	r7, #16
 8004a2c:	46bd      	mov	sp, r7
 8004a2e:	bd80      	pop	{r7, pc}

08004a30 <bufDeDat>:
 8004a30:	b580      	push	{r7, lr}
 8004a32:	b084      	sub	sp, #16
 8004a34:	af00      	add	r7, sp, #0
 8004a36:	6078      	str	r0, [r7, #4]
 8004a38:	6039      	str	r1, [r7, #0]
 8004a3a:	b672      	cpsid	i
 8004a3c:	6878      	ldr	r0, [r7, #4]
 8004a3e:	f7ff ff7d 	bl	800493c <bufIsEmpty>
 8004a42:	4603      	mov	r3, r0
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	d005      	beq.n	8004a54 <bufDeDat+0x24>
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	2200      	movs	r2, #0
 8004a4c:	805a      	strh	r2, [r3, #2]
 8004a4e:	b662      	cpsie	i
 8004a50:	2302      	movs	r3, #2
 8004a52:	e02b      	b.n	8004aac <bufDeDat+0x7c>
 8004a54:	2300      	movs	r3, #0
 8004a56:	73fb      	strb	r3, [r7, #15]
 8004a58:	e021      	b.n	8004a9e <bufDeDat+0x6e>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	68db      	ldr	r3, [r3, #12]
 8004a5e:	687a      	ldr	r2, [r7, #4]
 8004a60:	8912      	ldrh	r2, [r2, #8]
 8004a62:	441a      	add	r2, r3
 8004a64:	7bfb      	ldrb	r3, [r7, #15]
 8004a66:	6839      	ldr	r1, [r7, #0]
 8004a68:	440b      	add	r3, r1
 8004a6a:	7812      	ldrb	r2, [r2, #0]
 8004a6c:	701a      	strb	r2, [r3, #0]
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	891b      	ldrh	r3, [r3, #8]
 8004a72:	3301      	adds	r3, #1
 8004a74:	b29b      	uxth	r3, r3
 8004a76:	b21a      	sxth	r2, r3
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	881b      	ldrh	r3, [r3, #0]
 8004a7c:	3b01      	subs	r3, #1
 8004a7e:	b29b      	uxth	r3, r3
 8004a80:	b21b      	sxth	r3, r3
 8004a82:	4013      	ands	r3, r2
 8004a84:	b21b      	sxth	r3, r3
 8004a86:	b29a      	uxth	r2, r3
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	811a      	strh	r2, [r3, #8]
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	885b      	ldrh	r3, [r3, #2]
 8004a90:	3b01      	subs	r3, #1
 8004a92:	b29a      	uxth	r2, r3
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	805a      	strh	r2, [r3, #2]
 8004a98:	7bfb      	ldrb	r3, [r7, #15]
 8004a9a:	3301      	adds	r3, #1
 8004a9c:	73fb      	strb	r3, [r7, #15]
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	791b      	ldrb	r3, [r3, #4]
 8004aa2:	7bfa      	ldrb	r2, [r7, #15]
 8004aa4:	429a      	cmp	r2, r3
 8004aa6:	d3d8      	bcc.n	8004a5a <bufDeDat+0x2a>
 8004aa8:	b662      	cpsie	i
 8004aaa:	2300      	movs	r3, #0
 8004aac:	4618      	mov	r0, r3
 8004aae:	3710      	adds	r7, #16
 8004ab0:	46bd      	mov	sp, r7
 8004ab2:	bd80      	pop	{r7, pc}

08004ab4 <memsetl>:
 8004ab4:	b480      	push	{r7}
 8004ab6:	b083      	sub	sp, #12
 8004ab8:	af00      	add	r7, sp, #0
 8004aba:	6078      	str	r0, [r7, #4]
 8004abc:	460b      	mov	r3, r1
 8004abe:	70fb      	strb	r3, [r7, #3]
 8004ac0:	4613      	mov	r3, r2
 8004ac2:	803b      	strh	r3, [r7, #0]
 8004ac4:	e004      	b.n	8004ad0 <memsetl+0x1c>
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	1c5a      	adds	r2, r3, #1
 8004aca:	607a      	str	r2, [r7, #4]
 8004acc:	78fa      	ldrb	r2, [r7, #3]
 8004ace:	701a      	strb	r2, [r3, #0]
 8004ad0:	883b      	ldrh	r3, [r7, #0]
 8004ad2:	1e5a      	subs	r2, r3, #1
 8004ad4:	803a      	strh	r2, [r7, #0]
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d1f5      	bne.n	8004ac6 <memsetl+0x12>
 8004ada:	bf00      	nop
 8004adc:	370c      	adds	r7, #12
 8004ade:	46bd      	mov	sp, r7
 8004ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae4:	4770      	bx	lr

08004ae6 <ucg_clip_is_x_visible>:
 8004ae6:	b480      	push	{r7}
 8004ae8:	b085      	sub	sp, #20
 8004aea:	af00      	add	r7, sp, #0
 8004aec:	6078      	str	r0, [r7, #4]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8004af2:	81fb      	strh	r3, [r7, #14]
 8004af4:	89fa      	ldrh	r2, [r7, #14]
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8004afc:	b29b      	uxth	r3, r3
 8004afe:	1ad3      	subs	r3, r2, r3
 8004b00:	b29b      	uxth	r3, r3
 8004b02:	81fb      	strh	r3, [r7, #14]
 8004b04:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	da01      	bge.n	8004b10 <ucg_clip_is_x_visible+0x2a>
 8004b0c:	2300      	movs	r3, #0
 8004b0e:	e009      	b.n	8004b24 <ucg_clip_is_x_visible+0x3e>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004b16:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004b1a:	429a      	cmp	r2, r3
 8004b1c:	db01      	blt.n	8004b22 <ucg_clip_is_x_visible+0x3c>
 8004b1e:	2300      	movs	r3, #0
 8004b20:	e000      	b.n	8004b24 <ucg_clip_is_x_visible+0x3e>
 8004b22:	2301      	movs	r3, #1
 8004b24:	4618      	mov	r0, r3
 8004b26:	3714      	adds	r7, #20
 8004b28:	46bd      	mov	sp, r7
 8004b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b2e:	4770      	bx	lr

08004b30 <ucg_clip_is_y_visible>:
 8004b30:	b480      	push	{r7}
 8004b32:	b085      	sub	sp, #20
 8004b34:	af00      	add	r7, sp, #0
 8004b36:	6078      	str	r0, [r7, #4]
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004b3c:	81fb      	strh	r3, [r7, #14]
 8004b3e:	89fa      	ldrh	r2, [r7, #14]
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8004b46:	b29b      	uxth	r3, r3
 8004b48:	1ad3      	subs	r3, r2, r3
 8004b4a:	b29b      	uxth	r3, r3
 8004b4c:	81fb      	strh	r3, [r7, #14]
 8004b4e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	da01      	bge.n	8004b5a <ucg_clip_is_y_visible+0x2a>
 8004b56:	2300      	movs	r3, #0
 8004b58:	e009      	b.n	8004b6e <ucg_clip_is_y_visible+0x3e>
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004b60:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004b64:	429a      	cmp	r2, r3
 8004b66:	db01      	blt.n	8004b6c <ucg_clip_is_y_visible+0x3c>
 8004b68:	2300      	movs	r3, #0
 8004b6a:	e000      	b.n	8004b6e <ucg_clip_is_y_visible+0x3e>
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	4618      	mov	r0, r3
 8004b70:	3714      	adds	r7, #20
 8004b72:	46bd      	mov	sp, r7
 8004b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b78:	4770      	bx	lr

08004b7a <ucg_clip_intersection>:
 8004b7a:	b480      	push	{r7}
 8004b7c:	b087      	sub	sp, #28
 8004b7e:	af00      	add	r7, sp, #0
 8004b80:	60f8      	str	r0, [r7, #12]
 8004b82:	60b9      	str	r1, [r7, #8]
 8004b84:	4611      	mov	r1, r2
 8004b86:	461a      	mov	r2, r3
 8004b88:	460b      	mov	r3, r1
 8004b8a:	80fb      	strh	r3, [r7, #6]
 8004b8c:	4613      	mov	r3, r2
 8004b8e:	80bb      	strh	r3, [r7, #4]
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	881b      	ldrh	r3, [r3, #0]
 8004b94:	82fb      	strh	r3, [r7, #22]
 8004b96:	68bb      	ldr	r3, [r7, #8]
 8004b98:	881b      	ldrh	r3, [r3, #0]
 8004b9a:	82bb      	strh	r3, [r7, #20]
 8004b9c:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004ba0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004ba4:	429a      	cmp	r2, r3
 8004ba6:	db01      	blt.n	8004bac <ucg_clip_intersection+0x32>
 8004ba8:	2300      	movs	r3, #0
 8004baa:	e01a      	b.n	8004be2 <ucg_clip_intersection+0x68>
 8004bac:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004bb0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004bb4:	429a      	cmp	r2, r3
 8004bb6:	dc01      	bgt.n	8004bbc <ucg_clip_intersection+0x42>
 8004bb8:	2300      	movs	r3, #0
 8004bba:	e012      	b.n	8004be2 <ucg_clip_intersection+0x68>
 8004bbc:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004bc0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004bc4:	429a      	cmp	r2, r3
 8004bc6:	da02      	bge.n	8004bce <ucg_clip_intersection+0x54>
 8004bc8:	68fb      	ldr	r3, [r7, #12]
 8004bca:	88fa      	ldrh	r2, [r7, #6]
 8004bcc:	801a      	strh	r2, [r3, #0]
 8004bce:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004bd2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004bd6:	429a      	cmp	r2, r3
 8004bd8:	dd02      	ble.n	8004be0 <ucg_clip_intersection+0x66>
 8004bda:	68bb      	ldr	r3, [r7, #8]
 8004bdc:	88ba      	ldrh	r2, [r7, #4]
 8004bde:	801a      	strh	r2, [r3, #0]
 8004be0:	2301      	movs	r3, #1
 8004be2:	4618      	mov	r0, r3
 8004be4:	371c      	adds	r7, #28
 8004be6:	46bd      	mov	sp, r7
 8004be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bec:	4770      	bx	lr

08004bee <ucg_clip_is_pixel_visible>:
 8004bee:	b580      	push	{r7, lr}
 8004bf0:	b082      	sub	sp, #8
 8004bf2:	af00      	add	r7, sp, #0
 8004bf4:	6078      	str	r0, [r7, #4]
 8004bf6:	6878      	ldr	r0, [r7, #4]
 8004bf8:	f7ff ff75 	bl	8004ae6 <ucg_clip_is_x_visible>
 8004bfc:	4603      	mov	r3, r0
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d101      	bne.n	8004c06 <ucg_clip_is_pixel_visible+0x18>
 8004c02:	2300      	movs	r3, #0
 8004c04:	e008      	b.n	8004c18 <ucg_clip_is_pixel_visible+0x2a>
 8004c06:	6878      	ldr	r0, [r7, #4]
 8004c08:	f7ff ff92 	bl	8004b30 <ucg_clip_is_y_visible>
 8004c0c:	4603      	mov	r3, r0
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	d101      	bne.n	8004c16 <ucg_clip_is_pixel_visible+0x28>
 8004c12:	2300      	movs	r3, #0
 8004c14:	e000      	b.n	8004c18 <ucg_clip_is_pixel_visible+0x2a>
 8004c16:	2301      	movs	r3, #1
 8004c18:	4618      	mov	r0, r3
 8004c1a:	3708      	adds	r7, #8
 8004c1c:	46bd      	mov	sp, r7
 8004c1e:	bd80      	pop	{r7, pc}

08004c20 <ucg_clip_l90fx>:
 8004c20:	b590      	push	{r4, r7, lr}
 8004c22:	b085      	sub	sp, #20
 8004c24:	af00      	add	r7, sp, #0
 8004c26:	6078      	str	r0, [r7, #4]
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	2200      	movs	r2, #0
 8004c2c:	861a      	strh	r2, [r3, #48]	; 0x30
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8004c34:	2b03      	cmp	r3, #3
 8004c36:	f200 816d 	bhi.w	8004f14 <ucg_clip_l90fx+0x2f4>
 8004c3a:	a201      	add	r2, pc, #4	; (adr r2, 8004c40 <ucg_clip_l90fx+0x20>)
 8004c3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c40:	08004c51 	.word	0x08004c51
 8004c44:	08004cf7 	.word	0x08004cf7
 8004c48:	08004d9d 	.word	0x08004d9d
 8004c4c:	08004e59 	.word	0x08004e59
 8004c50:	6878      	ldr	r0, [r7, #4]
 8004c52:	f7ff ff6d 	bl	8004b30 <ucg_clip_is_y_visible>
 8004c56:	4603      	mov	r3, r0
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	d101      	bne.n	8004c60 <ucg_clip_l90fx+0x40>
 8004c5c:	2300      	movs	r3, #0
 8004c5e:	e15a      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004c66:	81fb      	strh	r3, [r7, #14]
 8004c68:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004c6c:	81bb      	strh	r3, [r7, #12]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004c74:	b29a      	uxth	r2, r3
 8004c76:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004c7a:	b29b      	uxth	r3, r3
 8004c7c:	4413      	add	r3, r2
 8004c7e:	b29b      	uxth	r3, r3
 8004c80:	b21b      	sxth	r3, r3
 8004c82:	81bb      	strh	r3, [r7, #12]
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8004c90:	b29a      	uxth	r2, r3
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004c98:	b29b      	uxth	r3, r3
 8004c9a:	4413      	add	r3, r2
 8004c9c:	b29b      	uxth	r3, r3
 8004c9e:	b21b      	sxth	r3, r3
 8004ca0:	f107 010c 	add.w	r1, r7, #12
 8004ca4:	f107 000e 	add.w	r0, r7, #14
 8004ca8:	4622      	mov	r2, r4
 8004caa:	f7ff ff66 	bl	8004b7a <ucg_clip_intersection>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d101      	bne.n	8004cb8 <ucg_clip_l90fx+0x98>
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	e12e      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004cb8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004cbc:	b29a      	uxth	r2, r3
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004cc4:	b29b      	uxth	r3, r3
 8004cc6:	1ad3      	subs	r3, r2, r3
 8004cc8:	b29b      	uxth	r3, r3
 8004cca:	b21a      	sxth	r2, r3
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	861a      	strh	r2, [r3, #48]	; 0x30
 8004cd0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	849a      	strh	r2, [r3, #36]	; 0x24
 8004cd8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004cdc:	b29a      	uxth	r2, r3
 8004cde:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004ce2:	b29b      	uxth	r3, r3
 8004ce4:	1ad3      	subs	r3, r2, r3
 8004ce6:	b29b      	uxth	r3, r3
 8004ce8:	b21b      	sxth	r3, r3
 8004cea:	81bb      	strh	r3, [r7, #12]
 8004cec:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004cf4:	e10e      	b.n	8004f14 <ucg_clip_l90fx+0x2f4>
 8004cf6:	6878      	ldr	r0, [r7, #4]
 8004cf8:	f7ff fef5 	bl	8004ae6 <ucg_clip_is_x_visible>
 8004cfc:	4603      	mov	r3, r0
 8004cfe:	2b00      	cmp	r3, #0
 8004d00:	d101      	bne.n	8004d06 <ucg_clip_l90fx+0xe6>
 8004d02:	2300      	movs	r3, #0
 8004d04:	e107      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004d0c:	81fb      	strh	r3, [r7, #14]
 8004d0e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d12:	81bb      	strh	r3, [r7, #12]
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004d1a:	b29a      	uxth	r2, r3
 8004d1c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004d20:	b29b      	uxth	r3, r3
 8004d22:	4413      	add	r3, r2
 8004d24:	b29b      	uxth	r3, r3
 8004d26:	b21b      	sxth	r3, r3
 8004d28:	81bb      	strh	r3, [r7, #12]
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8004d36:	b29a      	uxth	r2, r3
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004d3e:	b29b      	uxth	r3, r3
 8004d40:	4413      	add	r3, r2
 8004d42:	b29b      	uxth	r3, r3
 8004d44:	b21b      	sxth	r3, r3
 8004d46:	f107 010c 	add.w	r1, r7, #12
 8004d4a:	f107 000e 	add.w	r0, r7, #14
 8004d4e:	4622      	mov	r2, r4
 8004d50:	f7ff ff13 	bl	8004b7a <ucg_clip_intersection>
 8004d54:	4603      	mov	r3, r0
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	d101      	bne.n	8004d5e <ucg_clip_l90fx+0x13e>
 8004d5a:	2300      	movs	r3, #0
 8004d5c:	e0db      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004d5e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d62:	b29a      	uxth	r2, r3
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004d6a:	b29b      	uxth	r3, r3
 8004d6c:	1ad3      	subs	r3, r2, r3
 8004d6e:	b29b      	uxth	r3, r3
 8004d70:	b21a      	sxth	r2, r3
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	861a      	strh	r2, [r3, #48]	; 0x30
 8004d76:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	84da      	strh	r2, [r3, #38]	; 0x26
 8004d7e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004d82:	b29a      	uxth	r2, r3
 8004d84:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d88:	b29b      	uxth	r3, r3
 8004d8a:	1ad3      	subs	r3, r2, r3
 8004d8c:	b29b      	uxth	r3, r3
 8004d8e:	b21b      	sxth	r3, r3
 8004d90:	81bb      	strh	r3, [r7, #12]
 8004d92:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004d9a:	e0bb      	b.n	8004f14 <ucg_clip_l90fx+0x2f4>
 8004d9c:	6878      	ldr	r0, [r7, #4]
 8004d9e:	f7ff fec7 	bl	8004b30 <ucg_clip_is_y_visible>
 8004da2:	4603      	mov	r3, r0
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	d101      	bne.n	8004dac <ucg_clip_l90fx+0x18c>
 8004da8:	2300      	movs	r3, #0
 8004daa:	e0b4      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004db2:	81bb      	strh	r3, [r7, #12]
 8004db4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004db8:	b29b      	uxth	r3, r3
 8004dba:	3301      	adds	r3, #1
 8004dbc:	b29b      	uxth	r3, r3
 8004dbe:	b21b      	sxth	r3, r3
 8004dc0:	81bb      	strh	r3, [r7, #12]
 8004dc2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004dc6:	81fb      	strh	r3, [r7, #14]
 8004dc8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004dcc:	b29a      	uxth	r2, r3
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004dd4:	b29b      	uxth	r3, r3
 8004dd6:	1ad3      	subs	r3, r2, r3
 8004dd8:	b29b      	uxth	r3, r3
 8004dda:	b21b      	sxth	r3, r3
 8004ddc:	81fb      	strh	r3, [r7, #14]
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8004dea:	b29a      	uxth	r2, r3
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004df2:	b29b      	uxth	r3, r3
 8004df4:	4413      	add	r3, r2
 8004df6:	b29b      	uxth	r3, r3
 8004df8:	b21b      	sxth	r3, r3
 8004dfa:	f107 010c 	add.w	r1, r7, #12
 8004dfe:	f107 000e 	add.w	r0, r7, #14
 8004e02:	4622      	mov	r2, r4
 8004e04:	f7ff feb9 	bl	8004b7a <ucg_clip_intersection>
 8004e08:	4603      	mov	r3, r0
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d101      	bne.n	8004e12 <ucg_clip_l90fx+0x1f2>
 8004e0e:	2300      	movs	r3, #0
 8004e10:	e081      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004e12:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004e16:	b29a      	uxth	r2, r3
 8004e18:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004e1c:	b29b      	uxth	r3, r3
 8004e1e:	1ad3      	subs	r3, r2, r3
 8004e20:	b29b      	uxth	r3, r3
 8004e22:	b21a      	sxth	r2, r3
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004e28:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004e2c:	b29b      	uxth	r3, r3
 8004e2e:	3b01      	subs	r3, #1
 8004e30:	b29b      	uxth	r3, r3
 8004e32:	b21b      	sxth	r3, r3
 8004e34:	81bb      	strh	r3, [r7, #12]
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004e3c:	b29a      	uxth	r2, r3
 8004e3e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004e42:	b29b      	uxth	r3, r3
 8004e44:	1ad3      	subs	r3, r2, r3
 8004e46:	b29b      	uxth	r3, r3
 8004e48:	b21a      	sxth	r2, r3
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	861a      	strh	r2, [r3, #48]	; 0x30
 8004e4e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	849a      	strh	r2, [r3, #36]	; 0x24
 8004e56:	e05d      	b.n	8004f14 <ucg_clip_l90fx+0x2f4>
 8004e58:	6878      	ldr	r0, [r7, #4]
 8004e5a:	f7ff fe44 	bl	8004ae6 <ucg_clip_is_x_visible>
 8004e5e:	4603      	mov	r3, r0
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d101      	bne.n	8004e68 <ucg_clip_l90fx+0x248>
 8004e64:	2300      	movs	r3, #0
 8004e66:	e056      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004e6e:	81bb      	strh	r3, [r7, #12]
 8004e70:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004e74:	b29b      	uxth	r3, r3
 8004e76:	3301      	adds	r3, #1
 8004e78:	b29b      	uxth	r3, r3
 8004e7a:	b21b      	sxth	r3, r3
 8004e7c:	81bb      	strh	r3, [r7, #12]
 8004e7e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004e82:	81fb      	strh	r3, [r7, #14]
 8004e84:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004e88:	b29a      	uxth	r2, r3
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004e90:	b29b      	uxth	r3, r3
 8004e92:	1ad3      	subs	r3, r2, r3
 8004e94:	b29b      	uxth	r3, r3
 8004e96:	b21b      	sxth	r3, r3
 8004e98:	81fb      	strh	r3, [r7, #14]
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8004ea6:	b29a      	uxth	r2, r3
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004eae:	b29b      	uxth	r3, r3
 8004eb0:	4413      	add	r3, r2
 8004eb2:	b29b      	uxth	r3, r3
 8004eb4:	b21b      	sxth	r3, r3
 8004eb6:	f107 010c 	add.w	r1, r7, #12
 8004eba:	f107 000e 	add.w	r0, r7, #14
 8004ebe:	4622      	mov	r2, r4
 8004ec0:	f7ff fe5b 	bl	8004b7a <ucg_clip_intersection>
 8004ec4:	4603      	mov	r3, r0
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d101      	bne.n	8004ece <ucg_clip_l90fx+0x2ae>
 8004eca:	2300      	movs	r3, #0
 8004ecc:	e023      	b.n	8004f16 <ucg_clip_l90fx+0x2f6>
 8004ece:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ed2:	b29a      	uxth	r2, r3
 8004ed4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004ed8:	b29b      	uxth	r3, r3
 8004eda:	1ad3      	subs	r3, r2, r3
 8004edc:	b29b      	uxth	r3, r3
 8004ede:	b21a      	sxth	r2, r3
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004ee4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ee8:	b29b      	uxth	r3, r3
 8004eea:	3b01      	subs	r3, #1
 8004eec:	b29b      	uxth	r3, r3
 8004eee:	b21b      	sxth	r3, r3
 8004ef0:	81bb      	strh	r3, [r7, #12]
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004ef8:	b29a      	uxth	r2, r3
 8004efa:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004efe:	b29b      	uxth	r3, r3
 8004f00:	1ad3      	subs	r3, r2, r3
 8004f02:	b29b      	uxth	r3, r3
 8004f04:	b21a      	sxth	r2, r3
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	861a      	strh	r2, [r3, #48]	; 0x30
 8004f0a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	84da      	strh	r2, [r3, #38]	; 0x26
 8004f12:	bf00      	nop
 8004f14:	2301      	movs	r3, #1
 8004f16:	4618      	mov	r0, r3
 8004f18:	3714      	adds	r7, #20
 8004f1a:	46bd      	mov	sp, r7
 8004f1c:	bd90      	pop	{r4, r7, pc}
 8004f1e:	bf00      	nop

08004f20 <ucg_clip_l90se>:
 8004f20:	b580      	push	{r7, lr}
 8004f22:	b084      	sub	sp, #16
 8004f24:	af00      	add	r7, sp, #0
 8004f26:	6078      	str	r0, [r7, #4]
 8004f28:	6878      	ldr	r0, [r7, #4]
 8004f2a:	f7ff fe79 	bl	8004c20 <ucg_clip_l90fx>
 8004f2e:	4603      	mov	r3, r0
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d101      	bne.n	8004f38 <ucg_clip_l90se+0x18>
 8004f34:	2300      	movs	r3, #0
 8004f36:	e019      	b.n	8004f6c <ucg_clip_l90se+0x4c>
 8004f38:	2300      	movs	r3, #0
 8004f3a:	73fb      	strb	r3, [r7, #15]
 8004f3c:	e012      	b.n	8004f64 <ucg_clip_l90se+0x44>
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8004f44:	7bfa      	ldrb	r2, [r7, #15]
 8004f46:	4613      	mov	r3, r2
 8004f48:	00db      	lsls	r3, r3, #3
 8004f4a:	1a9b      	subs	r3, r3, r2
 8004f4c:	005b      	lsls	r3, r3, #1
 8004f4e:	18ca      	adds	r2, r1, r3
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8004f56:	4619      	mov	r1, r3
 8004f58:	4610      	mov	r0, r2
 8004f5a:	f7fe fa70 	bl	800343e <ucg_ccs_seek>
 8004f5e:	7bfb      	ldrb	r3, [r7, #15]
 8004f60:	3301      	adds	r3, #1
 8004f62:	73fb      	strb	r3, [r7, #15]
 8004f64:	7bfb      	ldrb	r3, [r7, #15]
 8004f66:	2b02      	cmp	r3, #2
 8004f68:	d9e9      	bls.n	8004f3e <ucg_clip_l90se+0x1e>
 8004f6a:	2301      	movs	r3, #1
 8004f6c:	4618      	mov	r0, r3
 8004f6e:	3710      	adds	r7, #16
 8004f70:	46bd      	mov	sp, r7
 8004f72:	bd80      	pop	{r7, pc}

08004f74 <ucg_com_PowerDown>:
 8004f74:	b590      	push	{r4, r7, lr}
 8004f76:	b083      	sub	sp, #12
 8004f78:	af00      	add	r7, sp, #0
 8004f7a:	6078      	str	r0, [r7, #4]
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004f82:	f003 0308 	and.w	r3, r3, #8
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d006      	beq.n	8004f98 <ucg_com_PowerDown+0x24>
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	69dc      	ldr	r4, [r3, #28]
 8004f8e:	2300      	movs	r3, #0
 8004f90:	2200      	movs	r2, #0
 8004f92:	210b      	movs	r1, #11
 8004f94:	6878      	ldr	r0, [r7, #4]
 8004f96:	47a0      	blx	r4
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004f9e:	f023 0308 	bic.w	r3, r3, #8
 8004fa2:	b2da      	uxtb	r2, r3
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004faa:	bf00      	nop
 8004fac:	370c      	adds	r7, #12
 8004fae:	46bd      	mov	sp, r7
 8004fb0:	bd90      	pop	{r4, r7, pc}

08004fb2 <ucg_com_PowerUp>:
 8004fb2:	b590      	push	{r4, r7, lr}
 8004fb4:	b085      	sub	sp, #20
 8004fb6:	af00      	add	r7, sp, #0
 8004fb8:	6078      	str	r0, [r7, #4]
 8004fba:	460b      	mov	r3, r1
 8004fbc:	807b      	strh	r3, [r7, #2]
 8004fbe:	4613      	mov	r3, r2
 8004fc0:	803b      	strh	r3, [r7, #0]
 8004fc2:	887b      	ldrh	r3, [r7, #2]
 8004fc4:	813b      	strh	r3, [r7, #8]
 8004fc6:	883b      	ldrh	r3, [r7, #0]
 8004fc8:	817b      	strh	r3, [r7, #10]
 8004fca:	6878      	ldr	r0, [r7, #4]
 8004fcc:	f7ff ffd2 	bl	8004f74 <ucg_com_PowerDown>
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	2200      	movs	r2, #0
 8004fd4:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	69dc      	ldr	r4, [r3, #28]
 8004fdc:	f107 0308 	add.w	r3, r7, #8
 8004fe0:	2200      	movs	r2, #0
 8004fe2:	210a      	movs	r1, #10
 8004fe4:	6878      	ldr	r0, [r7, #4]
 8004fe6:	47a0      	blx	r4
 8004fe8:	4603      	mov	r3, r0
 8004fea:	81fb      	strh	r3, [r7, #14]
 8004fec:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d008      	beq.n	8005006 <ucg_com_PowerUp+0x54>
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004ffa:	f043 0308 	orr.w	r3, r3, #8
 8004ffe:	b2da      	uxtb	r2, r3
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8005006:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800500a:	4618      	mov	r0, r3
 800500c:	3714      	adds	r7, #20
 800500e:	46bd      	mov	sp, r7
 8005010:	bd90      	pop	{r4, r7, pc}

08005012 <ucg_com_SetLineStatus>:
 8005012:	b590      	push	{r4, r7, lr}
 8005014:	b083      	sub	sp, #12
 8005016:	af00      	add	r7, sp, #0
 8005018:	6078      	str	r0, [r7, #4]
 800501a:	4608      	mov	r0, r1
 800501c:	4611      	mov	r1, r2
 800501e:	461a      	mov	r2, r3
 8005020:	4603      	mov	r3, r0
 8005022:	70fb      	strb	r3, [r7, #3]
 8005024:	460b      	mov	r3, r1
 8005026:	70bb      	strb	r3, [r7, #2]
 8005028:	4613      	mov	r3, r2
 800502a:	707b      	strb	r3, [r7, #1]
 800502c:	78fb      	ldrb	r3, [r7, #3]
 800502e:	2b00      	cmp	r3, #0
 8005030:	d131      	bne.n	8005096 <ucg_com_SetLineStatus+0x84>
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8005038:	78bb      	ldrb	r3, [r7, #2]
 800503a:	4013      	ands	r3, r2
 800503c:	b2db      	uxtb	r3, r3
 800503e:	2b00      	cmp	r3, #0
 8005040:	d008      	beq.n	8005054 <ucg_com_SetLineStatus+0x42>
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8005048:	78bb      	ldrb	r3, [r7, #2]
 800504a:	4013      	ands	r3, r2
 800504c:	b2db      	uxtb	r3, r3
 800504e:	78ba      	ldrb	r2, [r7, #2]
 8005050:	429a      	cmp	r2, r3
 8005052:	d14b      	bne.n	80050ec <ucg_com_SetLineStatus+0xda>
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	69dc      	ldr	r4, [r3, #28]
 8005058:	787b      	ldrb	r3, [r7, #1]
 800505a:	b219      	sxth	r1, r3
 800505c:	78fb      	ldrb	r3, [r7, #3]
 800505e:	b29a      	uxth	r2, r3
 8005060:	2300      	movs	r3, #0
 8005062:	6878      	ldr	r0, [r7, #4]
 8005064:	47a0      	blx	r4
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 800506c:	b25a      	sxtb	r2, r3
 800506e:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8005072:	43db      	mvns	r3, r3
 8005074:	b25b      	sxtb	r3, r3
 8005076:	4013      	ands	r3, r2
 8005078:	b25b      	sxtb	r3, r3
 800507a:	b2da      	uxtb	r2, r3
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8005088:	78bb      	ldrb	r3, [r7, #2]
 800508a:	4313      	orrs	r3, r2
 800508c:	b2da      	uxtb	r2, r3
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8005094:	e02a      	b.n	80050ec <ucg_com_SetLineStatus+0xda>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 800509c:	78bb      	ldrb	r3, [r7, #2]
 800509e:	4013      	ands	r3, r2
 80050a0:	b2db      	uxtb	r3, r3
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d007      	beq.n	80050b6 <ucg_com_SetLineStatus+0xa4>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 80050ac:	78bb      	ldrb	r3, [r7, #2]
 80050ae:	4013      	ands	r3, r2
 80050b0:	b2db      	uxtb	r3, r3
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	d11a      	bne.n	80050ec <ucg_com_SetLineStatus+0xda>
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	69dc      	ldr	r4, [r3, #28]
 80050ba:	787b      	ldrb	r3, [r7, #1]
 80050bc:	b219      	sxth	r1, r3
 80050be:	78fb      	ldrb	r3, [r7, #3]
 80050c0:	b29a      	uxth	r2, r3
 80050c2:	2300      	movs	r3, #0
 80050c4:	6878      	ldr	r0, [r7, #4]
 80050c6:	47a0      	blx	r4
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 80050ce:	78bb      	ldrb	r3, [r7, #2]
 80050d0:	4313      	orrs	r3, r2
 80050d2:	b2da      	uxtb	r2, r3
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 80050e0:	78bb      	ldrb	r3, [r7, #2]
 80050e2:	4313      	orrs	r3, r2
 80050e4:	b2da      	uxtb	r2, r3
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80050ec:	bf00      	nop
 80050ee:	370c      	adds	r7, #12
 80050f0:	46bd      	mov	sp, r7
 80050f2:	bd90      	pop	{r4, r7, pc}

080050f4 <ucg_com_SetResetLineStatus>:
 80050f4:	b580      	push	{r7, lr}
 80050f6:	b082      	sub	sp, #8
 80050f8:	af00      	add	r7, sp, #0
 80050fa:	6078      	str	r0, [r7, #4]
 80050fc:	460b      	mov	r3, r1
 80050fe:	70fb      	strb	r3, [r7, #3]
 8005100:	78f9      	ldrb	r1, [r7, #3]
 8005102:	230d      	movs	r3, #13
 8005104:	2204      	movs	r2, #4
 8005106:	6878      	ldr	r0, [r7, #4]
 8005108:	f7ff ff83 	bl	8005012 <ucg_com_SetLineStatus>
 800510c:	bf00      	nop
 800510e:	3708      	adds	r7, #8
 8005110:	46bd      	mov	sp, r7
 8005112:	bd80      	pop	{r7, pc}

08005114 <ucg_com_SetCSLineStatus>:
 8005114:	b580      	push	{r7, lr}
 8005116:	b082      	sub	sp, #8
 8005118:	af00      	add	r7, sp, #0
 800511a:	6078      	str	r0, [r7, #4]
 800511c:	460b      	mov	r3, r1
 800511e:	70fb      	strb	r3, [r7, #3]
 8005120:	78f9      	ldrb	r1, [r7, #3]
 8005122:	230e      	movs	r3, #14
 8005124:	2202      	movs	r2, #2
 8005126:	6878      	ldr	r0, [r7, #4]
 8005128:	f7ff ff73 	bl	8005012 <ucg_com_SetLineStatus>
 800512c:	bf00      	nop
 800512e:	3708      	adds	r7, #8
 8005130:	46bd      	mov	sp, r7
 8005132:	bd80      	pop	{r7, pc}

08005134 <ucg_com_SetCDLineStatus>:
 8005134:	b580      	push	{r7, lr}
 8005136:	b082      	sub	sp, #8
 8005138:	af00      	add	r7, sp, #0
 800513a:	6078      	str	r0, [r7, #4]
 800513c:	460b      	mov	r3, r1
 800513e:	70fb      	strb	r3, [r7, #3]
 8005140:	78f9      	ldrb	r1, [r7, #3]
 8005142:	230f      	movs	r3, #15
 8005144:	2201      	movs	r2, #1
 8005146:	6878      	ldr	r0, [r7, #4]
 8005148:	f7ff ff63 	bl	8005012 <ucg_com_SetLineStatus>
 800514c:	bf00      	nop
 800514e:	3708      	adds	r7, #8
 8005150:	46bd      	mov	sp, r7
 8005152:	bd80      	pop	{r7, pc}

08005154 <ucg_com_DelayMicroseconds>:
 8005154:	b590      	push	{r4, r7, lr}
 8005156:	b083      	sub	sp, #12
 8005158:	af00      	add	r7, sp, #0
 800515a:	6078      	str	r0, [r7, #4]
 800515c:	460b      	mov	r3, r1
 800515e:	807b      	strh	r3, [r7, #2]
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	69dc      	ldr	r4, [r3, #28]
 8005164:	887a      	ldrh	r2, [r7, #2]
 8005166:	2300      	movs	r3, #0
 8005168:	210c      	movs	r1, #12
 800516a:	6878      	ldr	r0, [r7, #4]
 800516c:	47a0      	blx	r4
 800516e:	bf00      	nop
 8005170:	370c      	adds	r7, #12
 8005172:	46bd      	mov	sp, r7
 8005174:	bd90      	pop	{r4, r7, pc}

08005176 <ucg_com_DelayMilliseconds>:
 8005176:	b580      	push	{r7, lr}
 8005178:	b082      	sub	sp, #8
 800517a:	af00      	add	r7, sp, #0
 800517c:	6078      	str	r0, [r7, #4]
 800517e:	460b      	mov	r3, r1
 8005180:	807b      	strh	r3, [r7, #2]
 8005182:	e007      	b.n	8005194 <ucg_com_DelayMilliseconds+0x1e>
 8005184:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8005188:	6878      	ldr	r0, [r7, #4]
 800518a:	f7ff ffe3 	bl	8005154 <ucg_com_DelayMicroseconds>
 800518e:	887b      	ldrh	r3, [r7, #2]
 8005190:	3b01      	subs	r3, #1
 8005192:	807b      	strh	r3, [r7, #2]
 8005194:	887b      	ldrh	r3, [r7, #2]
 8005196:	2b00      	cmp	r3, #0
 8005198:	d1f4      	bne.n	8005184 <ucg_com_DelayMilliseconds+0xe>
 800519a:	bf00      	nop
 800519c:	3708      	adds	r7, #8
 800519e:	46bd      	mov	sp, r7
 80051a0:	bd80      	pop	{r7, pc}

080051a2 <ucg_com_SendByte>:
 80051a2:	b590      	push	{r4, r7, lr}
 80051a4:	b083      	sub	sp, #12
 80051a6:	af00      	add	r7, sp, #0
 80051a8:	6078      	str	r0, [r7, #4]
 80051aa:	460b      	mov	r3, r1
 80051ac:	70fb      	strb	r3, [r7, #3]
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	69dc      	ldr	r4, [r3, #28]
 80051b2:	78fb      	ldrb	r3, [r7, #3]
 80051b4:	b29a      	uxth	r2, r3
 80051b6:	2300      	movs	r3, #0
 80051b8:	2110      	movs	r1, #16
 80051ba:	6878      	ldr	r0, [r7, #4]
 80051bc:	47a0      	blx	r4
 80051be:	bf00      	nop
 80051c0:	370c      	adds	r7, #12
 80051c2:	46bd      	mov	sp, r7
 80051c4:	bd90      	pop	{r4, r7, pc}

080051c6 <ucg_com_SendStringP>:
 80051c6:	b590      	push	{r4, r7, lr}
 80051c8:	b087      	sub	sp, #28
 80051ca:	af00      	add	r7, sp, #0
 80051cc:	60f8      	str	r0, [r7, #12]
 80051ce:	460b      	mov	r3, r1
 80051d0:	607a      	str	r2, [r7, #4]
 80051d2:	817b      	strh	r3, [r7, #10]
 80051d4:	e010      	b.n	80051f8 <ucg_com_SendStringP+0x32>
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	781b      	ldrb	r3, [r3, #0]
 80051da:	75fb      	strb	r3, [r7, #23]
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	69dc      	ldr	r4, [r3, #28]
 80051e0:	7dfb      	ldrb	r3, [r7, #23]
 80051e2:	b29a      	uxth	r2, r3
 80051e4:	2300      	movs	r3, #0
 80051e6:	2110      	movs	r1, #16
 80051e8:	68f8      	ldr	r0, [r7, #12]
 80051ea:	47a0      	blx	r4
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	3301      	adds	r3, #1
 80051f0:	607b      	str	r3, [r7, #4]
 80051f2:	897b      	ldrh	r3, [r7, #10]
 80051f4:	3b01      	subs	r3, #1
 80051f6:	817b      	strh	r3, [r7, #10]
 80051f8:	897b      	ldrh	r3, [r7, #10]
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d1eb      	bne.n	80051d6 <ucg_com_SendStringP+0x10>
 80051fe:	bf00      	nop
 8005200:	371c      	adds	r7, #28
 8005202:	46bd      	mov	sp, r7
 8005204:	bd90      	pop	{r4, r7, pc}

08005206 <ucg_com_SendCmdArg>:
 8005206:	b580      	push	{r7, lr}
 8005208:	b084      	sub	sp, #16
 800520a:	af00      	add	r7, sp, #0
 800520c:	60f8      	str	r0, [r7, #12]
 800520e:	60b9      	str	r1, [r7, #8]
 8005210:	4611      	mov	r1, r2
 8005212:	461a      	mov	r2, r3
 8005214:	460b      	mov	r3, r1
 8005216:	71fb      	strb	r3, [r7, #7]
 8005218:	4613      	mov	r3, r2
 800521a:	71bb      	strb	r3, [r7, #6]
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8005222:	085b      	lsrs	r3, r3, #1
 8005224:	b2db      	uxtb	r3, r3
 8005226:	f003 0301 	and.w	r3, r3, #1
 800522a:	b2db      	uxtb	r3, r3
 800522c:	4619      	mov	r1, r3
 800522e:	68f8      	ldr	r0, [r7, #12]
 8005230:	f7ff ff80 	bl	8005134 <ucg_com_SetCDLineStatus>
 8005234:	79fb      	ldrb	r3, [r7, #7]
 8005236:	b29b      	uxth	r3, r3
 8005238:	68ba      	ldr	r2, [r7, #8]
 800523a:	4619      	mov	r1, r3
 800523c:	68f8      	ldr	r0, [r7, #12]
 800523e:	f7ff ffc2 	bl	80051c6 <ucg_com_SendStringP>
 8005242:	79bb      	ldrb	r3, [r7, #6]
 8005244:	2b00      	cmp	r3, #0
 8005246:	d014      	beq.n	8005272 <ucg_com_SendCmdArg+0x6c>
 8005248:	79fb      	ldrb	r3, [r7, #7]
 800524a:	68ba      	ldr	r2, [r7, #8]
 800524c:	4413      	add	r3, r2
 800524e:	60bb      	str	r3, [r7, #8]
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8005256:	f003 0301 	and.w	r3, r3, #1
 800525a:	b2db      	uxtb	r3, r3
 800525c:	4619      	mov	r1, r3
 800525e:	68f8      	ldr	r0, [r7, #12]
 8005260:	f7ff ff68 	bl	8005134 <ucg_com_SetCDLineStatus>
 8005264:	79bb      	ldrb	r3, [r7, #6]
 8005266:	b29b      	uxth	r3, r3
 8005268:	68ba      	ldr	r2, [r7, #8]
 800526a:	4619      	mov	r1, r3
 800526c:	68f8      	ldr	r0, [r7, #12]
 800526e:	f7ff ffaa 	bl	80051c6 <ucg_com_SendStringP>
 8005272:	bf00      	nop
 8005274:	3710      	adds	r7, #16
 8005276:	46bd      	mov	sp, r7
 8005278:	bd80      	pop	{r7, pc}
	...

0800527c <ucg_com_SendCmdSeq>:
 800527c:	b580      	push	{r7, lr}
 800527e:	b084      	sub	sp, #16
 8005280:	af00      	add	r7, sp, #0
 8005282:	6078      	str	r0, [r7, #4]
 8005284:	6039      	str	r1, [r7, #0]
 8005286:	683b      	ldr	r3, [r7, #0]
 8005288:	781b      	ldrb	r3, [r3, #0]
 800528a:	73fb      	strb	r3, [r7, #15]
 800528c:	7bfb      	ldrb	r3, [r7, #15]
 800528e:	091b      	lsrs	r3, r3, #4
 8005290:	73bb      	strb	r3, [r7, #14]
 8005292:	7bfb      	ldrb	r3, [r7, #15]
 8005294:	f003 030f 	and.w	r3, r3, #15
 8005298:	737b      	strb	r3, [r7, #13]
 800529a:	7bbb      	ldrb	r3, [r7, #14]
 800529c:	2b0f      	cmp	r3, #15
 800529e:	f200 8124 	bhi.w	80054ea <ucg_com_SendCmdSeq+0x26e>
 80052a2:	a201      	add	r2, pc, #4	; (adr r2, 80052a8 <ucg_com_SendCmdSeq+0x2c>)
 80052a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052a8:	080054eb 	.word	0x080054eb
 80052ac:	080052e9 	.word	0x080052e9
 80052b0:	080052e9 	.word	0x080052e9
 80052b4:	080052e9 	.word	0x080052e9
 80052b8:	080054eb 	.word	0x080054eb
 80052bc:	080054eb 	.word	0x080054eb
 80052c0:	08005309 	.word	0x08005309
 80052c4:	0800533b 	.word	0x0800533b
 80052c8:	0800537f 	.word	0x0800537f
 80052cc:	080053ab 	.word	0x080053ab
 80052d0:	080053d7 	.word	0x080053d7
 80052d4:	08005437 	.word	0x08005437
 80052d8:	080054eb 	.word	0x080054eb
 80052dc:	080054eb 	.word	0x080054eb
 80052e0:	080054eb 	.word	0x080054eb
 80052e4:	08005497 	.word	0x08005497
 80052e8:	683b      	ldr	r3, [r7, #0]
 80052ea:	1c59      	adds	r1, r3, #1
 80052ec:	7b7b      	ldrb	r3, [r7, #13]
 80052ee:	7bba      	ldrb	r2, [r7, #14]
 80052f0:	6878      	ldr	r0, [r7, #4]
 80052f2:	f7ff ff88 	bl	8005206 <ucg_com_SendCmdArg>
 80052f6:	7bbb      	ldrb	r3, [r7, #14]
 80052f8:	1c5a      	adds	r2, r3, #1
 80052fa:	7b7b      	ldrb	r3, [r7, #13]
 80052fc:	4413      	add	r3, r2
 80052fe:	461a      	mov	r2, r3
 8005300:	683b      	ldr	r3, [r7, #0]
 8005302:	4413      	add	r3, r2
 8005304:	603b      	str	r3, [r7, #0]
 8005306:	e0ef      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 800530e:	f003 0301 	and.w	r3, r3, #1
 8005312:	b2db      	uxtb	r3, r3
 8005314:	4619      	mov	r1, r3
 8005316:	6878      	ldr	r0, [r7, #4]
 8005318:	f7ff ff0c 	bl	8005134 <ucg_com_SetCDLineStatus>
 800531c:	7b7b      	ldrb	r3, [r7, #13]
 800531e:	b299      	uxth	r1, r3
 8005320:	683b      	ldr	r3, [r7, #0]
 8005322:	3301      	adds	r3, #1
 8005324:	461a      	mov	r2, r3
 8005326:	6878      	ldr	r0, [r7, #4]
 8005328:	f7ff ff4d 	bl	80051c6 <ucg_com_SendStringP>
 800532c:	7b7b      	ldrb	r3, [r7, #13]
 800532e:	3301      	adds	r3, #1
 8005330:	461a      	mov	r2, r3
 8005332:	683b      	ldr	r3, [r7, #0]
 8005334:	4413      	add	r3, r2
 8005336:	603b      	str	r3, [r7, #0]
 8005338:	e0d6      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8005340:	085b      	lsrs	r3, r3, #1
 8005342:	b2db      	uxtb	r3, r3
 8005344:	f003 0301 	and.w	r3, r3, #1
 8005348:	2b00      	cmp	r3, #0
 800534a:	bf0c      	ite	eq
 800534c:	2301      	moveq	r3, #1
 800534e:	2300      	movne	r3, #0
 8005350:	b2db      	uxtb	r3, r3
 8005352:	4619      	mov	r1, r3
 8005354:	6878      	ldr	r0, [r7, #4]
 8005356:	f7ff feed 	bl	8005134 <ucg_com_SetCDLineStatus>
 800535a:	7b7b      	ldrb	r3, [r7, #13]
 800535c:	2b00      	cmp	r3, #0
 800535e:	d007      	beq.n	8005370 <ucg_com_SendCmdSeq+0xf4>
 8005360:	7b7b      	ldrb	r3, [r7, #13]
 8005362:	b299      	uxth	r1, r3
 8005364:	683b      	ldr	r3, [r7, #0]
 8005366:	3301      	adds	r3, #1
 8005368:	461a      	mov	r2, r3
 800536a:	6878      	ldr	r0, [r7, #4]
 800536c:	f7ff ff2b 	bl	80051c6 <ucg_com_SendStringP>
 8005370:	7b7b      	ldrb	r3, [r7, #13]
 8005372:	3301      	adds	r3, #1
 8005374:	461a      	mov	r2, r3
 8005376:	683b      	ldr	r3, [r7, #0]
 8005378:	4413      	add	r3, r2
 800537a:	603b      	str	r3, [r7, #0]
 800537c:	e0b4      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 800537e:	683b      	ldr	r3, [r7, #0]
 8005380:	3301      	adds	r3, #1
 8005382:	603b      	str	r3, [r7, #0]
 8005384:	683b      	ldr	r3, [r7, #0]
 8005386:	781b      	ldrb	r3, [r3, #0]
 8005388:	73fb      	strb	r3, [r7, #15]
 800538a:	7b7b      	ldrb	r3, [r7, #13]
 800538c:	b29b      	uxth	r3, r3
 800538e:	021b      	lsls	r3, r3, #8
 8005390:	b29a      	uxth	r2, r3
 8005392:	7bfb      	ldrb	r3, [r7, #15]
 8005394:	b29b      	uxth	r3, r3
 8005396:	4413      	add	r3, r2
 8005398:	b29b      	uxth	r3, r3
 800539a:	4619      	mov	r1, r3
 800539c:	6878      	ldr	r0, [r7, #4]
 800539e:	f7ff feea 	bl	8005176 <ucg_com_DelayMilliseconds>
 80053a2:	683b      	ldr	r3, [r7, #0]
 80053a4:	3301      	adds	r3, #1
 80053a6:	603b      	str	r3, [r7, #0]
 80053a8:	e09e      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 80053aa:	683b      	ldr	r3, [r7, #0]
 80053ac:	3301      	adds	r3, #1
 80053ae:	603b      	str	r3, [r7, #0]
 80053b0:	683b      	ldr	r3, [r7, #0]
 80053b2:	781b      	ldrb	r3, [r3, #0]
 80053b4:	73fb      	strb	r3, [r7, #15]
 80053b6:	7b7b      	ldrb	r3, [r7, #13]
 80053b8:	b29b      	uxth	r3, r3
 80053ba:	021b      	lsls	r3, r3, #8
 80053bc:	b29a      	uxth	r2, r3
 80053be:	7bfb      	ldrb	r3, [r7, #15]
 80053c0:	b29b      	uxth	r3, r3
 80053c2:	4413      	add	r3, r2
 80053c4:	b29b      	uxth	r3, r3
 80053c6:	4619      	mov	r1, r3
 80053c8:	6878      	ldr	r0, [r7, #4]
 80053ca:	f7ff fec3 	bl	8005154 <ucg_com_DelayMicroseconds>
 80053ce:	683b      	ldr	r3, [r7, #0]
 80053d0:	3301      	adds	r3, #1
 80053d2:	603b      	str	r3, [r7, #0]
 80053d4:	e088      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 80053d6:	683b      	ldr	r3, [r7, #0]
 80053d8:	3301      	adds	r3, #1
 80053da:	603b      	str	r3, [r7, #0]
 80053dc:	683b      	ldr	r3, [r7, #0]
 80053de:	781b      	ldrb	r3, [r3, #0]
 80053e0:	73fb      	strb	r3, [r7, #15]
 80053e2:	683b      	ldr	r3, [r7, #0]
 80053e4:	3301      	adds	r3, #1
 80053e6:	603b      	str	r3, [r7, #0]
 80053e8:	683b      	ldr	r3, [r7, #0]
 80053ea:	781b      	ldrb	r3, [r3, #0]
 80053ec:	733b      	strb	r3, [r7, #12]
 80053ee:	683b      	ldr	r3, [r7, #0]
 80053f0:	3301      	adds	r3, #1
 80053f2:	603b      	str	r3, [r7, #0]
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80053fa:	f003 0301 	and.w	r3, r3, #1
 80053fe:	b2db      	uxtb	r3, r3
 8005400:	4619      	mov	r1, r3
 8005402:	6878      	ldr	r0, [r7, #4]
 8005404:	f7ff fe96 	bl	8005134 <ucg_com_SetCDLineStatus>
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800540e:	461a      	mov	r2, r3
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8005416:	441a      	add	r2, r3
 8005418:	7b7b      	ldrb	r3, [r7, #13]
 800541a:	fa42 f303 	asr.w	r3, r2, r3
 800541e:	b2da      	uxtb	r2, r3
 8005420:	7bfb      	ldrb	r3, [r7, #15]
 8005422:	4013      	ands	r3, r2
 8005424:	b2da      	uxtb	r2, r3
 8005426:	7b3b      	ldrb	r3, [r7, #12]
 8005428:	4313      	orrs	r3, r2
 800542a:	b2db      	uxtb	r3, r3
 800542c:	4619      	mov	r1, r3
 800542e:	6878      	ldr	r0, [r7, #4]
 8005430:	f7ff feb7 	bl	80051a2 <ucg_com_SendByte>
 8005434:	e058      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 8005436:	683b      	ldr	r3, [r7, #0]
 8005438:	3301      	adds	r3, #1
 800543a:	603b      	str	r3, [r7, #0]
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	781b      	ldrb	r3, [r3, #0]
 8005440:	73fb      	strb	r3, [r7, #15]
 8005442:	683b      	ldr	r3, [r7, #0]
 8005444:	3301      	adds	r3, #1
 8005446:	603b      	str	r3, [r7, #0]
 8005448:	683b      	ldr	r3, [r7, #0]
 800544a:	781b      	ldrb	r3, [r3, #0]
 800544c:	733b      	strb	r3, [r7, #12]
 800544e:	683b      	ldr	r3, [r7, #0]
 8005450:	3301      	adds	r3, #1
 8005452:	603b      	str	r3, [r7, #0]
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 800545a:	f003 0301 	and.w	r3, r3, #1
 800545e:	b2db      	uxtb	r3, r3
 8005460:	4619      	mov	r1, r3
 8005462:	6878      	ldr	r0, [r7, #4]
 8005464:	f7ff fe66 	bl	8005134 <ucg_com_SetCDLineStatus>
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800546e:	461a      	mov	r2, r3
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8005476:	441a      	add	r2, r3
 8005478:	7b7b      	ldrb	r3, [r7, #13]
 800547a:	fa42 f303 	asr.w	r3, r2, r3
 800547e:	b2da      	uxtb	r2, r3
 8005480:	7bfb      	ldrb	r3, [r7, #15]
 8005482:	4013      	ands	r3, r2
 8005484:	b2da      	uxtb	r2, r3
 8005486:	7b3b      	ldrb	r3, [r7, #12]
 8005488:	4313      	orrs	r3, r2
 800548a:	b2db      	uxtb	r3, r3
 800548c:	4619      	mov	r1, r3
 800548e:	6878      	ldr	r0, [r7, #4]
 8005490:	f7ff fe87 	bl	80051a2 <ucg_com_SendByte>
 8005494:	e028      	b.n	80054e8 <ucg_com_SendCmdSeq+0x26c>
 8005496:	7b7b      	ldrb	r3, [r7, #13]
 8005498:	089b      	lsrs	r3, r3, #2
 800549a:	73bb      	strb	r3, [r7, #14]
 800549c:	7b7b      	ldrb	r3, [r7, #13]
 800549e:	f003 0303 	and.w	r3, r3, #3
 80054a2:	737b      	strb	r3, [r7, #13]
 80054a4:	7bbb      	ldrb	r3, [r7, #14]
 80054a6:	2b01      	cmp	r3, #1
 80054a8:	d00c      	beq.n	80054c4 <ucg_com_SendCmdSeq+0x248>
 80054aa:	2b03      	cmp	r3, #3
 80054ac:	d013      	beq.n	80054d6 <ucg_com_SendCmdSeq+0x25a>
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d116      	bne.n	80054e0 <ucg_com_SendCmdSeq+0x264>
 80054b2:	7b7b      	ldrb	r3, [r7, #13]
 80054b4:	f003 0301 	and.w	r3, r3, #1
 80054b8:	b2db      	uxtb	r3, r3
 80054ba:	4619      	mov	r1, r3
 80054bc:	6878      	ldr	r0, [r7, #4]
 80054be:	f7ff fe19 	bl	80050f4 <ucg_com_SetResetLineStatus>
 80054c2:	e00d      	b.n	80054e0 <ucg_com_SendCmdSeq+0x264>
 80054c4:	7b7b      	ldrb	r3, [r7, #13]
 80054c6:	f003 0301 	and.w	r3, r3, #1
 80054ca:	b2db      	uxtb	r3, r3
 80054cc:	4619      	mov	r1, r3
 80054ce:	6878      	ldr	r0, [r7, #4]
 80054d0:	f7ff fe20 	bl	8005114 <ucg_com_SetCSLineStatus>
 80054d4:	e004      	b.n	80054e0 <ucg_com_SendCmdSeq+0x264>
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	7b7a      	ldrb	r2, [r7, #13]
 80054da:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 80054de:	bf00      	nop
 80054e0:	683b      	ldr	r3, [r7, #0]
 80054e2:	3301      	adds	r3, #1
 80054e4:	603b      	str	r3, [r7, #0]
 80054e6:	bf00      	nop
 80054e8:	e6cd      	b.n	8005286 <ucg_com_SendCmdSeq+0xa>
 80054ea:	bf00      	nop
 80054ec:	3710      	adds	r7, #16
 80054ee:	46bd      	mov	sp, r7
 80054f0:	bd80      	pop	{r7, pc}
 80054f2:	bf00      	nop

080054f4 <__errno>:
 80054f4:	4b01      	ldr	r3, [pc, #4]	; (80054fc <__errno+0x8>)
 80054f6:	6818      	ldr	r0, [r3, #0]
 80054f8:	4770      	bx	lr
 80054fa:	bf00      	nop
 80054fc:	2000002c 	.word	0x2000002c

08005500 <__libc_init_array>:
 8005500:	b570      	push	{r4, r5, r6, lr}
 8005502:	4d0d      	ldr	r5, [pc, #52]	; (8005538 <__libc_init_array+0x38>)
 8005504:	4c0d      	ldr	r4, [pc, #52]	; (800553c <__libc_init_array+0x3c>)
 8005506:	1b64      	subs	r4, r4, r5
 8005508:	10a4      	asrs	r4, r4, #2
 800550a:	2600      	movs	r6, #0
 800550c:	42a6      	cmp	r6, r4
 800550e:	d109      	bne.n	8005524 <__libc_init_array+0x24>
 8005510:	4d0b      	ldr	r5, [pc, #44]	; (8005540 <__libc_init_array+0x40>)
 8005512:	4c0c      	ldr	r4, [pc, #48]	; (8005544 <__libc_init_array+0x44>)
 8005514:	f000 fc4e 	bl	8005db4 <_init>
 8005518:	1b64      	subs	r4, r4, r5
 800551a:	10a4      	asrs	r4, r4, #2
 800551c:	2600      	movs	r6, #0
 800551e:	42a6      	cmp	r6, r4
 8005520:	d105      	bne.n	800552e <__libc_init_array+0x2e>
 8005522:	bd70      	pop	{r4, r5, r6, pc}
 8005524:	f855 3b04 	ldr.w	r3, [r5], #4
 8005528:	4798      	blx	r3
 800552a:	3601      	adds	r6, #1
 800552c:	e7ee      	b.n	800550c <__libc_init_array+0xc>
 800552e:	f855 3b04 	ldr.w	r3, [r5], #4
 8005532:	4798      	blx	r3
 8005534:	3601      	adds	r6, #1
 8005536:	e7f2      	b.n	800551e <__libc_init_array+0x1e>
 8005538:	080066d0 	.word	0x080066d0
 800553c:	080066d0 	.word	0x080066d0
 8005540:	080066d0 	.word	0x080066d0
 8005544:	080066d4 	.word	0x080066d4

08005548 <memset>:
 8005548:	4402      	add	r2, r0
 800554a:	4603      	mov	r3, r0
 800554c:	4293      	cmp	r3, r2
 800554e:	d100      	bne.n	8005552 <memset+0xa>
 8005550:	4770      	bx	lr
 8005552:	f803 1b01 	strb.w	r1, [r3], #1
 8005556:	e7f9      	b.n	800554c <memset+0x4>

08005558 <siprintf>:
 8005558:	b40e      	push	{r1, r2, r3}
 800555a:	b500      	push	{lr}
 800555c:	b09c      	sub	sp, #112	; 0x70
 800555e:	ab1d      	add	r3, sp, #116	; 0x74
 8005560:	9002      	str	r0, [sp, #8]
 8005562:	9006      	str	r0, [sp, #24]
 8005564:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005568:	4809      	ldr	r0, [pc, #36]	; (8005590 <siprintf+0x38>)
 800556a:	9107      	str	r1, [sp, #28]
 800556c:	9104      	str	r1, [sp, #16]
 800556e:	4909      	ldr	r1, [pc, #36]	; (8005594 <siprintf+0x3c>)
 8005570:	f853 2b04 	ldr.w	r2, [r3], #4
 8005574:	9105      	str	r1, [sp, #20]
 8005576:	6800      	ldr	r0, [r0, #0]
 8005578:	9301      	str	r3, [sp, #4]
 800557a:	a902      	add	r1, sp, #8
 800557c:	f000 f868 	bl	8005650 <_svfiprintf_r>
 8005580:	9b02      	ldr	r3, [sp, #8]
 8005582:	2200      	movs	r2, #0
 8005584:	701a      	strb	r2, [r3, #0]
 8005586:	b01c      	add	sp, #112	; 0x70
 8005588:	f85d eb04 	ldr.w	lr, [sp], #4
 800558c:	b003      	add	sp, #12
 800558e:	4770      	bx	lr
 8005590:	2000002c 	.word	0x2000002c
 8005594:	ffff0208 	.word	0xffff0208

08005598 <__ssputs_r>:
 8005598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800559c:	688e      	ldr	r6, [r1, #8]
 800559e:	429e      	cmp	r6, r3
 80055a0:	4682      	mov	sl, r0
 80055a2:	460c      	mov	r4, r1
 80055a4:	4690      	mov	r8, r2
 80055a6:	461f      	mov	r7, r3
 80055a8:	d838      	bhi.n	800561c <__ssputs_r+0x84>
 80055aa:	898a      	ldrh	r2, [r1, #12]
 80055ac:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80055b0:	d032      	beq.n	8005618 <__ssputs_r+0x80>
 80055b2:	6825      	ldr	r5, [r4, #0]
 80055b4:	6909      	ldr	r1, [r1, #16]
 80055b6:	eba5 0901 	sub.w	r9, r5, r1
 80055ba:	6965      	ldr	r5, [r4, #20]
 80055bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80055c0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80055c4:	3301      	adds	r3, #1
 80055c6:	444b      	add	r3, r9
 80055c8:	106d      	asrs	r5, r5, #1
 80055ca:	429d      	cmp	r5, r3
 80055cc:	bf38      	it	cc
 80055ce:	461d      	movcc	r5, r3
 80055d0:	0553      	lsls	r3, r2, #21
 80055d2:	d531      	bpl.n	8005638 <__ssputs_r+0xa0>
 80055d4:	4629      	mov	r1, r5
 80055d6:	f000 fb47 	bl	8005c68 <_malloc_r>
 80055da:	4606      	mov	r6, r0
 80055dc:	b950      	cbnz	r0, 80055f4 <__ssputs_r+0x5c>
 80055de:	230c      	movs	r3, #12
 80055e0:	f8ca 3000 	str.w	r3, [sl]
 80055e4:	89a3      	ldrh	r3, [r4, #12]
 80055e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80055ea:	81a3      	strh	r3, [r4, #12]
 80055ec:	f04f 30ff 	mov.w	r0, #4294967295
 80055f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055f4:	6921      	ldr	r1, [r4, #16]
 80055f6:	464a      	mov	r2, r9
 80055f8:	f000 fabe 	bl	8005b78 <memcpy>
 80055fc:	89a3      	ldrh	r3, [r4, #12]
 80055fe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005602:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005606:	81a3      	strh	r3, [r4, #12]
 8005608:	6126      	str	r6, [r4, #16]
 800560a:	6165      	str	r5, [r4, #20]
 800560c:	444e      	add	r6, r9
 800560e:	eba5 0509 	sub.w	r5, r5, r9
 8005612:	6026      	str	r6, [r4, #0]
 8005614:	60a5      	str	r5, [r4, #8]
 8005616:	463e      	mov	r6, r7
 8005618:	42be      	cmp	r6, r7
 800561a:	d900      	bls.n	800561e <__ssputs_r+0x86>
 800561c:	463e      	mov	r6, r7
 800561e:	4632      	mov	r2, r6
 8005620:	6820      	ldr	r0, [r4, #0]
 8005622:	4641      	mov	r1, r8
 8005624:	f000 fab6 	bl	8005b94 <memmove>
 8005628:	68a3      	ldr	r3, [r4, #8]
 800562a:	6822      	ldr	r2, [r4, #0]
 800562c:	1b9b      	subs	r3, r3, r6
 800562e:	4432      	add	r2, r6
 8005630:	60a3      	str	r3, [r4, #8]
 8005632:	6022      	str	r2, [r4, #0]
 8005634:	2000      	movs	r0, #0
 8005636:	e7db      	b.n	80055f0 <__ssputs_r+0x58>
 8005638:	462a      	mov	r2, r5
 800563a:	f000 fb6f 	bl	8005d1c <_realloc_r>
 800563e:	4606      	mov	r6, r0
 8005640:	2800      	cmp	r0, #0
 8005642:	d1e1      	bne.n	8005608 <__ssputs_r+0x70>
 8005644:	6921      	ldr	r1, [r4, #16]
 8005646:	4650      	mov	r0, sl
 8005648:	f000 fabe 	bl	8005bc8 <_free_r>
 800564c:	e7c7      	b.n	80055de <__ssputs_r+0x46>
	...

08005650 <_svfiprintf_r>:
 8005650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005654:	4698      	mov	r8, r3
 8005656:	898b      	ldrh	r3, [r1, #12]
 8005658:	061b      	lsls	r3, r3, #24
 800565a:	b09d      	sub	sp, #116	; 0x74
 800565c:	4607      	mov	r7, r0
 800565e:	460d      	mov	r5, r1
 8005660:	4614      	mov	r4, r2
 8005662:	d50e      	bpl.n	8005682 <_svfiprintf_r+0x32>
 8005664:	690b      	ldr	r3, [r1, #16]
 8005666:	b963      	cbnz	r3, 8005682 <_svfiprintf_r+0x32>
 8005668:	2140      	movs	r1, #64	; 0x40
 800566a:	f000 fafd 	bl	8005c68 <_malloc_r>
 800566e:	6028      	str	r0, [r5, #0]
 8005670:	6128      	str	r0, [r5, #16]
 8005672:	b920      	cbnz	r0, 800567e <_svfiprintf_r+0x2e>
 8005674:	230c      	movs	r3, #12
 8005676:	603b      	str	r3, [r7, #0]
 8005678:	f04f 30ff 	mov.w	r0, #4294967295
 800567c:	e0d1      	b.n	8005822 <_svfiprintf_r+0x1d2>
 800567e:	2340      	movs	r3, #64	; 0x40
 8005680:	616b      	str	r3, [r5, #20]
 8005682:	2300      	movs	r3, #0
 8005684:	9309      	str	r3, [sp, #36]	; 0x24
 8005686:	2320      	movs	r3, #32
 8005688:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800568c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005690:	2330      	movs	r3, #48	; 0x30
 8005692:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800583c <_svfiprintf_r+0x1ec>
 8005696:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800569a:	f04f 0901 	mov.w	r9, #1
 800569e:	4623      	mov	r3, r4
 80056a0:	469a      	mov	sl, r3
 80056a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80056a6:	b10a      	cbz	r2, 80056ac <_svfiprintf_r+0x5c>
 80056a8:	2a25      	cmp	r2, #37	; 0x25
 80056aa:	d1f9      	bne.n	80056a0 <_svfiprintf_r+0x50>
 80056ac:	ebba 0b04 	subs.w	fp, sl, r4
 80056b0:	d00b      	beq.n	80056ca <_svfiprintf_r+0x7a>
 80056b2:	465b      	mov	r3, fp
 80056b4:	4622      	mov	r2, r4
 80056b6:	4629      	mov	r1, r5
 80056b8:	4638      	mov	r0, r7
 80056ba:	f7ff ff6d 	bl	8005598 <__ssputs_r>
 80056be:	3001      	adds	r0, #1
 80056c0:	f000 80aa 	beq.w	8005818 <_svfiprintf_r+0x1c8>
 80056c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80056c6:	445a      	add	r2, fp
 80056c8:	9209      	str	r2, [sp, #36]	; 0x24
 80056ca:	f89a 3000 	ldrb.w	r3, [sl]
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	f000 80a2 	beq.w	8005818 <_svfiprintf_r+0x1c8>
 80056d4:	2300      	movs	r3, #0
 80056d6:	f04f 32ff 	mov.w	r2, #4294967295
 80056da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80056de:	f10a 0a01 	add.w	sl, sl, #1
 80056e2:	9304      	str	r3, [sp, #16]
 80056e4:	9307      	str	r3, [sp, #28]
 80056e6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80056ea:	931a      	str	r3, [sp, #104]	; 0x68
 80056ec:	4654      	mov	r4, sl
 80056ee:	2205      	movs	r2, #5
 80056f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056f4:	4851      	ldr	r0, [pc, #324]	; (800583c <_svfiprintf_r+0x1ec>)
 80056f6:	f7fa fd73 	bl	80001e0 <memchr>
 80056fa:	9a04      	ldr	r2, [sp, #16]
 80056fc:	b9d8      	cbnz	r0, 8005736 <_svfiprintf_r+0xe6>
 80056fe:	06d0      	lsls	r0, r2, #27
 8005700:	bf44      	itt	mi
 8005702:	2320      	movmi	r3, #32
 8005704:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005708:	0711      	lsls	r1, r2, #28
 800570a:	bf44      	itt	mi
 800570c:	232b      	movmi	r3, #43	; 0x2b
 800570e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005712:	f89a 3000 	ldrb.w	r3, [sl]
 8005716:	2b2a      	cmp	r3, #42	; 0x2a
 8005718:	d015      	beq.n	8005746 <_svfiprintf_r+0xf6>
 800571a:	9a07      	ldr	r2, [sp, #28]
 800571c:	4654      	mov	r4, sl
 800571e:	2000      	movs	r0, #0
 8005720:	f04f 0c0a 	mov.w	ip, #10
 8005724:	4621      	mov	r1, r4
 8005726:	f811 3b01 	ldrb.w	r3, [r1], #1
 800572a:	3b30      	subs	r3, #48	; 0x30
 800572c:	2b09      	cmp	r3, #9
 800572e:	d94e      	bls.n	80057ce <_svfiprintf_r+0x17e>
 8005730:	b1b0      	cbz	r0, 8005760 <_svfiprintf_r+0x110>
 8005732:	9207      	str	r2, [sp, #28]
 8005734:	e014      	b.n	8005760 <_svfiprintf_r+0x110>
 8005736:	eba0 0308 	sub.w	r3, r0, r8
 800573a:	fa09 f303 	lsl.w	r3, r9, r3
 800573e:	4313      	orrs	r3, r2
 8005740:	9304      	str	r3, [sp, #16]
 8005742:	46a2      	mov	sl, r4
 8005744:	e7d2      	b.n	80056ec <_svfiprintf_r+0x9c>
 8005746:	9b03      	ldr	r3, [sp, #12]
 8005748:	1d19      	adds	r1, r3, #4
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	9103      	str	r1, [sp, #12]
 800574e:	2b00      	cmp	r3, #0
 8005750:	bfbb      	ittet	lt
 8005752:	425b      	neglt	r3, r3
 8005754:	f042 0202 	orrlt.w	r2, r2, #2
 8005758:	9307      	strge	r3, [sp, #28]
 800575a:	9307      	strlt	r3, [sp, #28]
 800575c:	bfb8      	it	lt
 800575e:	9204      	strlt	r2, [sp, #16]
 8005760:	7823      	ldrb	r3, [r4, #0]
 8005762:	2b2e      	cmp	r3, #46	; 0x2e
 8005764:	d10c      	bne.n	8005780 <_svfiprintf_r+0x130>
 8005766:	7863      	ldrb	r3, [r4, #1]
 8005768:	2b2a      	cmp	r3, #42	; 0x2a
 800576a:	d135      	bne.n	80057d8 <_svfiprintf_r+0x188>
 800576c:	9b03      	ldr	r3, [sp, #12]
 800576e:	1d1a      	adds	r2, r3, #4
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	9203      	str	r2, [sp, #12]
 8005774:	2b00      	cmp	r3, #0
 8005776:	bfb8      	it	lt
 8005778:	f04f 33ff 	movlt.w	r3, #4294967295
 800577c:	3402      	adds	r4, #2
 800577e:	9305      	str	r3, [sp, #20]
 8005780:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800584c <_svfiprintf_r+0x1fc>
 8005784:	7821      	ldrb	r1, [r4, #0]
 8005786:	2203      	movs	r2, #3
 8005788:	4650      	mov	r0, sl
 800578a:	f7fa fd29 	bl	80001e0 <memchr>
 800578e:	b140      	cbz	r0, 80057a2 <_svfiprintf_r+0x152>
 8005790:	2340      	movs	r3, #64	; 0x40
 8005792:	eba0 000a 	sub.w	r0, r0, sl
 8005796:	fa03 f000 	lsl.w	r0, r3, r0
 800579a:	9b04      	ldr	r3, [sp, #16]
 800579c:	4303      	orrs	r3, r0
 800579e:	3401      	adds	r4, #1
 80057a0:	9304      	str	r3, [sp, #16]
 80057a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80057a6:	4826      	ldr	r0, [pc, #152]	; (8005840 <_svfiprintf_r+0x1f0>)
 80057a8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80057ac:	2206      	movs	r2, #6
 80057ae:	f7fa fd17 	bl	80001e0 <memchr>
 80057b2:	2800      	cmp	r0, #0
 80057b4:	d038      	beq.n	8005828 <_svfiprintf_r+0x1d8>
 80057b6:	4b23      	ldr	r3, [pc, #140]	; (8005844 <_svfiprintf_r+0x1f4>)
 80057b8:	bb1b      	cbnz	r3, 8005802 <_svfiprintf_r+0x1b2>
 80057ba:	9b03      	ldr	r3, [sp, #12]
 80057bc:	3307      	adds	r3, #7
 80057be:	f023 0307 	bic.w	r3, r3, #7
 80057c2:	3308      	adds	r3, #8
 80057c4:	9303      	str	r3, [sp, #12]
 80057c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80057c8:	4433      	add	r3, r6
 80057ca:	9309      	str	r3, [sp, #36]	; 0x24
 80057cc:	e767      	b.n	800569e <_svfiprintf_r+0x4e>
 80057ce:	fb0c 3202 	mla	r2, ip, r2, r3
 80057d2:	460c      	mov	r4, r1
 80057d4:	2001      	movs	r0, #1
 80057d6:	e7a5      	b.n	8005724 <_svfiprintf_r+0xd4>
 80057d8:	2300      	movs	r3, #0
 80057da:	3401      	adds	r4, #1
 80057dc:	9305      	str	r3, [sp, #20]
 80057de:	4619      	mov	r1, r3
 80057e0:	f04f 0c0a 	mov.w	ip, #10
 80057e4:	4620      	mov	r0, r4
 80057e6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80057ea:	3a30      	subs	r2, #48	; 0x30
 80057ec:	2a09      	cmp	r2, #9
 80057ee:	d903      	bls.n	80057f8 <_svfiprintf_r+0x1a8>
 80057f0:	2b00      	cmp	r3, #0
 80057f2:	d0c5      	beq.n	8005780 <_svfiprintf_r+0x130>
 80057f4:	9105      	str	r1, [sp, #20]
 80057f6:	e7c3      	b.n	8005780 <_svfiprintf_r+0x130>
 80057f8:	fb0c 2101 	mla	r1, ip, r1, r2
 80057fc:	4604      	mov	r4, r0
 80057fe:	2301      	movs	r3, #1
 8005800:	e7f0      	b.n	80057e4 <_svfiprintf_r+0x194>
 8005802:	ab03      	add	r3, sp, #12
 8005804:	9300      	str	r3, [sp, #0]
 8005806:	462a      	mov	r2, r5
 8005808:	4b0f      	ldr	r3, [pc, #60]	; (8005848 <_svfiprintf_r+0x1f8>)
 800580a:	a904      	add	r1, sp, #16
 800580c:	4638      	mov	r0, r7
 800580e:	f3af 8000 	nop.w
 8005812:	1c42      	adds	r2, r0, #1
 8005814:	4606      	mov	r6, r0
 8005816:	d1d6      	bne.n	80057c6 <_svfiprintf_r+0x176>
 8005818:	89ab      	ldrh	r3, [r5, #12]
 800581a:	065b      	lsls	r3, r3, #25
 800581c:	f53f af2c 	bmi.w	8005678 <_svfiprintf_r+0x28>
 8005820:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005822:	b01d      	add	sp, #116	; 0x74
 8005824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005828:	ab03      	add	r3, sp, #12
 800582a:	9300      	str	r3, [sp, #0]
 800582c:	462a      	mov	r2, r5
 800582e:	4b06      	ldr	r3, [pc, #24]	; (8005848 <_svfiprintf_r+0x1f8>)
 8005830:	a904      	add	r1, sp, #16
 8005832:	4638      	mov	r0, r7
 8005834:	f000 f87a 	bl	800592c <_printf_i>
 8005838:	e7eb      	b.n	8005812 <_svfiprintf_r+0x1c2>
 800583a:	bf00      	nop
 800583c:	08006694 	.word	0x08006694
 8005840:	0800669e 	.word	0x0800669e
 8005844:	00000000 	.word	0x00000000
 8005848:	08005599 	.word	0x08005599
 800584c:	0800669a 	.word	0x0800669a

08005850 <_printf_common>:
 8005850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005854:	4616      	mov	r6, r2
 8005856:	4699      	mov	r9, r3
 8005858:	688a      	ldr	r2, [r1, #8]
 800585a:	690b      	ldr	r3, [r1, #16]
 800585c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005860:	4293      	cmp	r3, r2
 8005862:	bfb8      	it	lt
 8005864:	4613      	movlt	r3, r2
 8005866:	6033      	str	r3, [r6, #0]
 8005868:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800586c:	4607      	mov	r7, r0
 800586e:	460c      	mov	r4, r1
 8005870:	b10a      	cbz	r2, 8005876 <_printf_common+0x26>
 8005872:	3301      	adds	r3, #1
 8005874:	6033      	str	r3, [r6, #0]
 8005876:	6823      	ldr	r3, [r4, #0]
 8005878:	0699      	lsls	r1, r3, #26
 800587a:	bf42      	ittt	mi
 800587c:	6833      	ldrmi	r3, [r6, #0]
 800587e:	3302      	addmi	r3, #2
 8005880:	6033      	strmi	r3, [r6, #0]
 8005882:	6825      	ldr	r5, [r4, #0]
 8005884:	f015 0506 	ands.w	r5, r5, #6
 8005888:	d106      	bne.n	8005898 <_printf_common+0x48>
 800588a:	f104 0a19 	add.w	sl, r4, #25
 800588e:	68e3      	ldr	r3, [r4, #12]
 8005890:	6832      	ldr	r2, [r6, #0]
 8005892:	1a9b      	subs	r3, r3, r2
 8005894:	42ab      	cmp	r3, r5
 8005896:	dc26      	bgt.n	80058e6 <_printf_common+0x96>
 8005898:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800589c:	1e13      	subs	r3, r2, #0
 800589e:	6822      	ldr	r2, [r4, #0]
 80058a0:	bf18      	it	ne
 80058a2:	2301      	movne	r3, #1
 80058a4:	0692      	lsls	r2, r2, #26
 80058a6:	d42b      	bmi.n	8005900 <_printf_common+0xb0>
 80058a8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80058ac:	4649      	mov	r1, r9
 80058ae:	4638      	mov	r0, r7
 80058b0:	47c0      	blx	r8
 80058b2:	3001      	adds	r0, #1
 80058b4:	d01e      	beq.n	80058f4 <_printf_common+0xa4>
 80058b6:	6823      	ldr	r3, [r4, #0]
 80058b8:	68e5      	ldr	r5, [r4, #12]
 80058ba:	6832      	ldr	r2, [r6, #0]
 80058bc:	f003 0306 	and.w	r3, r3, #6
 80058c0:	2b04      	cmp	r3, #4
 80058c2:	bf08      	it	eq
 80058c4:	1aad      	subeq	r5, r5, r2
 80058c6:	68a3      	ldr	r3, [r4, #8]
 80058c8:	6922      	ldr	r2, [r4, #16]
 80058ca:	bf0c      	ite	eq
 80058cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80058d0:	2500      	movne	r5, #0
 80058d2:	4293      	cmp	r3, r2
 80058d4:	bfc4      	itt	gt
 80058d6:	1a9b      	subgt	r3, r3, r2
 80058d8:	18ed      	addgt	r5, r5, r3
 80058da:	2600      	movs	r6, #0
 80058dc:	341a      	adds	r4, #26
 80058de:	42b5      	cmp	r5, r6
 80058e0:	d11a      	bne.n	8005918 <_printf_common+0xc8>
 80058e2:	2000      	movs	r0, #0
 80058e4:	e008      	b.n	80058f8 <_printf_common+0xa8>
 80058e6:	2301      	movs	r3, #1
 80058e8:	4652      	mov	r2, sl
 80058ea:	4649      	mov	r1, r9
 80058ec:	4638      	mov	r0, r7
 80058ee:	47c0      	blx	r8
 80058f0:	3001      	adds	r0, #1
 80058f2:	d103      	bne.n	80058fc <_printf_common+0xac>
 80058f4:	f04f 30ff 	mov.w	r0, #4294967295
 80058f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80058fc:	3501      	adds	r5, #1
 80058fe:	e7c6      	b.n	800588e <_printf_common+0x3e>
 8005900:	18e1      	adds	r1, r4, r3
 8005902:	1c5a      	adds	r2, r3, #1
 8005904:	2030      	movs	r0, #48	; 0x30
 8005906:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800590a:	4422      	add	r2, r4
 800590c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005910:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005914:	3302      	adds	r3, #2
 8005916:	e7c7      	b.n	80058a8 <_printf_common+0x58>
 8005918:	2301      	movs	r3, #1
 800591a:	4622      	mov	r2, r4
 800591c:	4649      	mov	r1, r9
 800591e:	4638      	mov	r0, r7
 8005920:	47c0      	blx	r8
 8005922:	3001      	adds	r0, #1
 8005924:	d0e6      	beq.n	80058f4 <_printf_common+0xa4>
 8005926:	3601      	adds	r6, #1
 8005928:	e7d9      	b.n	80058de <_printf_common+0x8e>
	...

0800592c <_printf_i>:
 800592c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005930:	460c      	mov	r4, r1
 8005932:	4691      	mov	r9, r2
 8005934:	7e27      	ldrb	r7, [r4, #24]
 8005936:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005938:	2f78      	cmp	r7, #120	; 0x78
 800593a:	4680      	mov	r8, r0
 800593c:	469a      	mov	sl, r3
 800593e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005942:	d807      	bhi.n	8005954 <_printf_i+0x28>
 8005944:	2f62      	cmp	r7, #98	; 0x62
 8005946:	d80a      	bhi.n	800595e <_printf_i+0x32>
 8005948:	2f00      	cmp	r7, #0
 800594a:	f000 80d8 	beq.w	8005afe <_printf_i+0x1d2>
 800594e:	2f58      	cmp	r7, #88	; 0x58
 8005950:	f000 80a3 	beq.w	8005a9a <_printf_i+0x16e>
 8005954:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8005958:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800595c:	e03a      	b.n	80059d4 <_printf_i+0xa8>
 800595e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005962:	2b15      	cmp	r3, #21
 8005964:	d8f6      	bhi.n	8005954 <_printf_i+0x28>
 8005966:	a001      	add	r0, pc, #4	; (adr r0, 800596c <_printf_i+0x40>)
 8005968:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800596c:	080059c5 	.word	0x080059c5
 8005970:	080059d9 	.word	0x080059d9
 8005974:	08005955 	.word	0x08005955
 8005978:	08005955 	.word	0x08005955
 800597c:	08005955 	.word	0x08005955
 8005980:	08005955 	.word	0x08005955
 8005984:	080059d9 	.word	0x080059d9
 8005988:	08005955 	.word	0x08005955
 800598c:	08005955 	.word	0x08005955
 8005990:	08005955 	.word	0x08005955
 8005994:	08005955 	.word	0x08005955
 8005998:	08005ae5 	.word	0x08005ae5
 800599c:	08005a09 	.word	0x08005a09
 80059a0:	08005ac7 	.word	0x08005ac7
 80059a4:	08005955 	.word	0x08005955
 80059a8:	08005955 	.word	0x08005955
 80059ac:	08005b07 	.word	0x08005b07
 80059b0:	08005955 	.word	0x08005955
 80059b4:	08005a09 	.word	0x08005a09
 80059b8:	08005955 	.word	0x08005955
 80059bc:	08005955 	.word	0x08005955
 80059c0:	08005acf 	.word	0x08005acf
 80059c4:	680b      	ldr	r3, [r1, #0]
 80059c6:	1d1a      	adds	r2, r3, #4
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	600a      	str	r2, [r1, #0]
 80059cc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80059d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80059d4:	2301      	movs	r3, #1
 80059d6:	e0a3      	b.n	8005b20 <_printf_i+0x1f4>
 80059d8:	6825      	ldr	r5, [r4, #0]
 80059da:	6808      	ldr	r0, [r1, #0]
 80059dc:	062e      	lsls	r6, r5, #24
 80059de:	f100 0304 	add.w	r3, r0, #4
 80059e2:	d50a      	bpl.n	80059fa <_printf_i+0xce>
 80059e4:	6805      	ldr	r5, [r0, #0]
 80059e6:	600b      	str	r3, [r1, #0]
 80059e8:	2d00      	cmp	r5, #0
 80059ea:	da03      	bge.n	80059f4 <_printf_i+0xc8>
 80059ec:	232d      	movs	r3, #45	; 0x2d
 80059ee:	426d      	negs	r5, r5
 80059f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80059f4:	485e      	ldr	r0, [pc, #376]	; (8005b70 <_printf_i+0x244>)
 80059f6:	230a      	movs	r3, #10
 80059f8:	e019      	b.n	8005a2e <_printf_i+0x102>
 80059fa:	f015 0f40 	tst.w	r5, #64	; 0x40
 80059fe:	6805      	ldr	r5, [r0, #0]
 8005a00:	600b      	str	r3, [r1, #0]
 8005a02:	bf18      	it	ne
 8005a04:	b22d      	sxthne	r5, r5
 8005a06:	e7ef      	b.n	80059e8 <_printf_i+0xbc>
 8005a08:	680b      	ldr	r3, [r1, #0]
 8005a0a:	6825      	ldr	r5, [r4, #0]
 8005a0c:	1d18      	adds	r0, r3, #4
 8005a0e:	6008      	str	r0, [r1, #0]
 8005a10:	0628      	lsls	r0, r5, #24
 8005a12:	d501      	bpl.n	8005a18 <_printf_i+0xec>
 8005a14:	681d      	ldr	r5, [r3, #0]
 8005a16:	e002      	b.n	8005a1e <_printf_i+0xf2>
 8005a18:	0669      	lsls	r1, r5, #25
 8005a1a:	d5fb      	bpl.n	8005a14 <_printf_i+0xe8>
 8005a1c:	881d      	ldrh	r5, [r3, #0]
 8005a1e:	4854      	ldr	r0, [pc, #336]	; (8005b70 <_printf_i+0x244>)
 8005a20:	2f6f      	cmp	r7, #111	; 0x6f
 8005a22:	bf0c      	ite	eq
 8005a24:	2308      	moveq	r3, #8
 8005a26:	230a      	movne	r3, #10
 8005a28:	2100      	movs	r1, #0
 8005a2a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005a2e:	6866      	ldr	r6, [r4, #4]
 8005a30:	60a6      	str	r6, [r4, #8]
 8005a32:	2e00      	cmp	r6, #0
 8005a34:	bfa2      	ittt	ge
 8005a36:	6821      	ldrge	r1, [r4, #0]
 8005a38:	f021 0104 	bicge.w	r1, r1, #4
 8005a3c:	6021      	strge	r1, [r4, #0]
 8005a3e:	b90d      	cbnz	r5, 8005a44 <_printf_i+0x118>
 8005a40:	2e00      	cmp	r6, #0
 8005a42:	d04d      	beq.n	8005ae0 <_printf_i+0x1b4>
 8005a44:	4616      	mov	r6, r2
 8005a46:	fbb5 f1f3 	udiv	r1, r5, r3
 8005a4a:	fb03 5711 	mls	r7, r3, r1, r5
 8005a4e:	5dc7      	ldrb	r7, [r0, r7]
 8005a50:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005a54:	462f      	mov	r7, r5
 8005a56:	42bb      	cmp	r3, r7
 8005a58:	460d      	mov	r5, r1
 8005a5a:	d9f4      	bls.n	8005a46 <_printf_i+0x11a>
 8005a5c:	2b08      	cmp	r3, #8
 8005a5e:	d10b      	bne.n	8005a78 <_printf_i+0x14c>
 8005a60:	6823      	ldr	r3, [r4, #0]
 8005a62:	07df      	lsls	r7, r3, #31
 8005a64:	d508      	bpl.n	8005a78 <_printf_i+0x14c>
 8005a66:	6923      	ldr	r3, [r4, #16]
 8005a68:	6861      	ldr	r1, [r4, #4]
 8005a6a:	4299      	cmp	r1, r3
 8005a6c:	bfde      	ittt	le
 8005a6e:	2330      	movle	r3, #48	; 0x30
 8005a70:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005a74:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005a78:	1b92      	subs	r2, r2, r6
 8005a7a:	6122      	str	r2, [r4, #16]
 8005a7c:	f8cd a000 	str.w	sl, [sp]
 8005a80:	464b      	mov	r3, r9
 8005a82:	aa03      	add	r2, sp, #12
 8005a84:	4621      	mov	r1, r4
 8005a86:	4640      	mov	r0, r8
 8005a88:	f7ff fee2 	bl	8005850 <_printf_common>
 8005a8c:	3001      	adds	r0, #1
 8005a8e:	d14c      	bne.n	8005b2a <_printf_i+0x1fe>
 8005a90:	f04f 30ff 	mov.w	r0, #4294967295
 8005a94:	b004      	add	sp, #16
 8005a96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a9a:	4835      	ldr	r0, [pc, #212]	; (8005b70 <_printf_i+0x244>)
 8005a9c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8005aa0:	6823      	ldr	r3, [r4, #0]
 8005aa2:	680e      	ldr	r6, [r1, #0]
 8005aa4:	061f      	lsls	r7, r3, #24
 8005aa6:	f856 5b04 	ldr.w	r5, [r6], #4
 8005aaa:	600e      	str	r6, [r1, #0]
 8005aac:	d514      	bpl.n	8005ad8 <_printf_i+0x1ac>
 8005aae:	07d9      	lsls	r1, r3, #31
 8005ab0:	bf44      	itt	mi
 8005ab2:	f043 0320 	orrmi.w	r3, r3, #32
 8005ab6:	6023      	strmi	r3, [r4, #0]
 8005ab8:	b91d      	cbnz	r5, 8005ac2 <_printf_i+0x196>
 8005aba:	6823      	ldr	r3, [r4, #0]
 8005abc:	f023 0320 	bic.w	r3, r3, #32
 8005ac0:	6023      	str	r3, [r4, #0]
 8005ac2:	2310      	movs	r3, #16
 8005ac4:	e7b0      	b.n	8005a28 <_printf_i+0xfc>
 8005ac6:	6823      	ldr	r3, [r4, #0]
 8005ac8:	f043 0320 	orr.w	r3, r3, #32
 8005acc:	6023      	str	r3, [r4, #0]
 8005ace:	2378      	movs	r3, #120	; 0x78
 8005ad0:	4828      	ldr	r0, [pc, #160]	; (8005b74 <_printf_i+0x248>)
 8005ad2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005ad6:	e7e3      	b.n	8005aa0 <_printf_i+0x174>
 8005ad8:	065e      	lsls	r6, r3, #25
 8005ada:	bf48      	it	mi
 8005adc:	b2ad      	uxthmi	r5, r5
 8005ade:	e7e6      	b.n	8005aae <_printf_i+0x182>
 8005ae0:	4616      	mov	r6, r2
 8005ae2:	e7bb      	b.n	8005a5c <_printf_i+0x130>
 8005ae4:	680b      	ldr	r3, [r1, #0]
 8005ae6:	6826      	ldr	r6, [r4, #0]
 8005ae8:	6960      	ldr	r0, [r4, #20]
 8005aea:	1d1d      	adds	r5, r3, #4
 8005aec:	600d      	str	r5, [r1, #0]
 8005aee:	0635      	lsls	r5, r6, #24
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	d501      	bpl.n	8005af8 <_printf_i+0x1cc>
 8005af4:	6018      	str	r0, [r3, #0]
 8005af6:	e002      	b.n	8005afe <_printf_i+0x1d2>
 8005af8:	0671      	lsls	r1, r6, #25
 8005afa:	d5fb      	bpl.n	8005af4 <_printf_i+0x1c8>
 8005afc:	8018      	strh	r0, [r3, #0]
 8005afe:	2300      	movs	r3, #0
 8005b00:	6123      	str	r3, [r4, #16]
 8005b02:	4616      	mov	r6, r2
 8005b04:	e7ba      	b.n	8005a7c <_printf_i+0x150>
 8005b06:	680b      	ldr	r3, [r1, #0]
 8005b08:	1d1a      	adds	r2, r3, #4
 8005b0a:	600a      	str	r2, [r1, #0]
 8005b0c:	681e      	ldr	r6, [r3, #0]
 8005b0e:	6862      	ldr	r2, [r4, #4]
 8005b10:	2100      	movs	r1, #0
 8005b12:	4630      	mov	r0, r6
 8005b14:	f7fa fb64 	bl	80001e0 <memchr>
 8005b18:	b108      	cbz	r0, 8005b1e <_printf_i+0x1f2>
 8005b1a:	1b80      	subs	r0, r0, r6
 8005b1c:	6060      	str	r0, [r4, #4]
 8005b1e:	6863      	ldr	r3, [r4, #4]
 8005b20:	6123      	str	r3, [r4, #16]
 8005b22:	2300      	movs	r3, #0
 8005b24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005b28:	e7a8      	b.n	8005a7c <_printf_i+0x150>
 8005b2a:	6923      	ldr	r3, [r4, #16]
 8005b2c:	4632      	mov	r2, r6
 8005b2e:	4649      	mov	r1, r9
 8005b30:	4640      	mov	r0, r8
 8005b32:	47d0      	blx	sl
 8005b34:	3001      	adds	r0, #1
 8005b36:	d0ab      	beq.n	8005a90 <_printf_i+0x164>
 8005b38:	6823      	ldr	r3, [r4, #0]
 8005b3a:	079b      	lsls	r3, r3, #30
 8005b3c:	d413      	bmi.n	8005b66 <_printf_i+0x23a>
 8005b3e:	68e0      	ldr	r0, [r4, #12]
 8005b40:	9b03      	ldr	r3, [sp, #12]
 8005b42:	4298      	cmp	r0, r3
 8005b44:	bfb8      	it	lt
 8005b46:	4618      	movlt	r0, r3
 8005b48:	e7a4      	b.n	8005a94 <_printf_i+0x168>
 8005b4a:	2301      	movs	r3, #1
 8005b4c:	4632      	mov	r2, r6
 8005b4e:	4649      	mov	r1, r9
 8005b50:	4640      	mov	r0, r8
 8005b52:	47d0      	blx	sl
 8005b54:	3001      	adds	r0, #1
 8005b56:	d09b      	beq.n	8005a90 <_printf_i+0x164>
 8005b58:	3501      	adds	r5, #1
 8005b5a:	68e3      	ldr	r3, [r4, #12]
 8005b5c:	9903      	ldr	r1, [sp, #12]
 8005b5e:	1a5b      	subs	r3, r3, r1
 8005b60:	42ab      	cmp	r3, r5
 8005b62:	dcf2      	bgt.n	8005b4a <_printf_i+0x21e>
 8005b64:	e7eb      	b.n	8005b3e <_printf_i+0x212>
 8005b66:	2500      	movs	r5, #0
 8005b68:	f104 0619 	add.w	r6, r4, #25
 8005b6c:	e7f5      	b.n	8005b5a <_printf_i+0x22e>
 8005b6e:	bf00      	nop
 8005b70:	080066a5 	.word	0x080066a5
 8005b74:	080066b6 	.word	0x080066b6

08005b78 <memcpy>:
 8005b78:	440a      	add	r2, r1
 8005b7a:	4291      	cmp	r1, r2
 8005b7c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005b80:	d100      	bne.n	8005b84 <memcpy+0xc>
 8005b82:	4770      	bx	lr
 8005b84:	b510      	push	{r4, lr}
 8005b86:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005b8a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005b8e:	4291      	cmp	r1, r2
 8005b90:	d1f9      	bne.n	8005b86 <memcpy+0xe>
 8005b92:	bd10      	pop	{r4, pc}

08005b94 <memmove>:
 8005b94:	4288      	cmp	r0, r1
 8005b96:	b510      	push	{r4, lr}
 8005b98:	eb01 0402 	add.w	r4, r1, r2
 8005b9c:	d902      	bls.n	8005ba4 <memmove+0x10>
 8005b9e:	4284      	cmp	r4, r0
 8005ba0:	4623      	mov	r3, r4
 8005ba2:	d807      	bhi.n	8005bb4 <memmove+0x20>
 8005ba4:	1e43      	subs	r3, r0, #1
 8005ba6:	42a1      	cmp	r1, r4
 8005ba8:	d008      	beq.n	8005bbc <memmove+0x28>
 8005baa:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005bae:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005bb2:	e7f8      	b.n	8005ba6 <memmove+0x12>
 8005bb4:	4402      	add	r2, r0
 8005bb6:	4601      	mov	r1, r0
 8005bb8:	428a      	cmp	r2, r1
 8005bba:	d100      	bne.n	8005bbe <memmove+0x2a>
 8005bbc:	bd10      	pop	{r4, pc}
 8005bbe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005bc2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005bc6:	e7f7      	b.n	8005bb8 <memmove+0x24>

08005bc8 <_free_r>:
 8005bc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005bca:	2900      	cmp	r1, #0
 8005bcc:	d048      	beq.n	8005c60 <_free_r+0x98>
 8005bce:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005bd2:	9001      	str	r0, [sp, #4]
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	f1a1 0404 	sub.w	r4, r1, #4
 8005bda:	bfb8      	it	lt
 8005bdc:	18e4      	addlt	r4, r4, r3
 8005bde:	f000 f8d3 	bl	8005d88 <__malloc_lock>
 8005be2:	4a20      	ldr	r2, [pc, #128]	; (8005c64 <_free_r+0x9c>)
 8005be4:	9801      	ldr	r0, [sp, #4]
 8005be6:	6813      	ldr	r3, [r2, #0]
 8005be8:	4615      	mov	r5, r2
 8005bea:	b933      	cbnz	r3, 8005bfa <_free_r+0x32>
 8005bec:	6063      	str	r3, [r4, #4]
 8005bee:	6014      	str	r4, [r2, #0]
 8005bf0:	b003      	add	sp, #12
 8005bf2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005bf6:	f000 b8cd 	b.w	8005d94 <__malloc_unlock>
 8005bfa:	42a3      	cmp	r3, r4
 8005bfc:	d90b      	bls.n	8005c16 <_free_r+0x4e>
 8005bfe:	6821      	ldr	r1, [r4, #0]
 8005c00:	1862      	adds	r2, r4, r1
 8005c02:	4293      	cmp	r3, r2
 8005c04:	bf04      	itt	eq
 8005c06:	681a      	ldreq	r2, [r3, #0]
 8005c08:	685b      	ldreq	r3, [r3, #4]
 8005c0a:	6063      	str	r3, [r4, #4]
 8005c0c:	bf04      	itt	eq
 8005c0e:	1852      	addeq	r2, r2, r1
 8005c10:	6022      	streq	r2, [r4, #0]
 8005c12:	602c      	str	r4, [r5, #0]
 8005c14:	e7ec      	b.n	8005bf0 <_free_r+0x28>
 8005c16:	461a      	mov	r2, r3
 8005c18:	685b      	ldr	r3, [r3, #4]
 8005c1a:	b10b      	cbz	r3, 8005c20 <_free_r+0x58>
 8005c1c:	42a3      	cmp	r3, r4
 8005c1e:	d9fa      	bls.n	8005c16 <_free_r+0x4e>
 8005c20:	6811      	ldr	r1, [r2, #0]
 8005c22:	1855      	adds	r5, r2, r1
 8005c24:	42a5      	cmp	r5, r4
 8005c26:	d10b      	bne.n	8005c40 <_free_r+0x78>
 8005c28:	6824      	ldr	r4, [r4, #0]
 8005c2a:	4421      	add	r1, r4
 8005c2c:	1854      	adds	r4, r2, r1
 8005c2e:	42a3      	cmp	r3, r4
 8005c30:	6011      	str	r1, [r2, #0]
 8005c32:	d1dd      	bne.n	8005bf0 <_free_r+0x28>
 8005c34:	681c      	ldr	r4, [r3, #0]
 8005c36:	685b      	ldr	r3, [r3, #4]
 8005c38:	6053      	str	r3, [r2, #4]
 8005c3a:	4421      	add	r1, r4
 8005c3c:	6011      	str	r1, [r2, #0]
 8005c3e:	e7d7      	b.n	8005bf0 <_free_r+0x28>
 8005c40:	d902      	bls.n	8005c48 <_free_r+0x80>
 8005c42:	230c      	movs	r3, #12
 8005c44:	6003      	str	r3, [r0, #0]
 8005c46:	e7d3      	b.n	8005bf0 <_free_r+0x28>
 8005c48:	6825      	ldr	r5, [r4, #0]
 8005c4a:	1961      	adds	r1, r4, r5
 8005c4c:	428b      	cmp	r3, r1
 8005c4e:	bf04      	itt	eq
 8005c50:	6819      	ldreq	r1, [r3, #0]
 8005c52:	685b      	ldreq	r3, [r3, #4]
 8005c54:	6063      	str	r3, [r4, #4]
 8005c56:	bf04      	itt	eq
 8005c58:	1949      	addeq	r1, r1, r5
 8005c5a:	6021      	streq	r1, [r4, #0]
 8005c5c:	6054      	str	r4, [r2, #4]
 8005c5e:	e7c7      	b.n	8005bf0 <_free_r+0x28>
 8005c60:	b003      	add	sp, #12
 8005c62:	bd30      	pop	{r4, r5, pc}
 8005c64:	20001340 	.word	0x20001340

08005c68 <_malloc_r>:
 8005c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c6a:	1ccd      	adds	r5, r1, #3
 8005c6c:	f025 0503 	bic.w	r5, r5, #3
 8005c70:	3508      	adds	r5, #8
 8005c72:	2d0c      	cmp	r5, #12
 8005c74:	bf38      	it	cc
 8005c76:	250c      	movcc	r5, #12
 8005c78:	2d00      	cmp	r5, #0
 8005c7a:	4606      	mov	r6, r0
 8005c7c:	db01      	blt.n	8005c82 <_malloc_r+0x1a>
 8005c7e:	42a9      	cmp	r1, r5
 8005c80:	d903      	bls.n	8005c8a <_malloc_r+0x22>
 8005c82:	230c      	movs	r3, #12
 8005c84:	6033      	str	r3, [r6, #0]
 8005c86:	2000      	movs	r0, #0
 8005c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005c8a:	f000 f87d 	bl	8005d88 <__malloc_lock>
 8005c8e:	4921      	ldr	r1, [pc, #132]	; (8005d14 <_malloc_r+0xac>)
 8005c90:	680a      	ldr	r2, [r1, #0]
 8005c92:	4614      	mov	r4, r2
 8005c94:	b99c      	cbnz	r4, 8005cbe <_malloc_r+0x56>
 8005c96:	4f20      	ldr	r7, [pc, #128]	; (8005d18 <_malloc_r+0xb0>)
 8005c98:	683b      	ldr	r3, [r7, #0]
 8005c9a:	b923      	cbnz	r3, 8005ca6 <_malloc_r+0x3e>
 8005c9c:	4621      	mov	r1, r4
 8005c9e:	4630      	mov	r0, r6
 8005ca0:	f000 f862 	bl	8005d68 <_sbrk_r>
 8005ca4:	6038      	str	r0, [r7, #0]
 8005ca6:	4629      	mov	r1, r5
 8005ca8:	4630      	mov	r0, r6
 8005caa:	f000 f85d 	bl	8005d68 <_sbrk_r>
 8005cae:	1c43      	adds	r3, r0, #1
 8005cb0:	d123      	bne.n	8005cfa <_malloc_r+0x92>
 8005cb2:	230c      	movs	r3, #12
 8005cb4:	6033      	str	r3, [r6, #0]
 8005cb6:	4630      	mov	r0, r6
 8005cb8:	f000 f86c 	bl	8005d94 <__malloc_unlock>
 8005cbc:	e7e3      	b.n	8005c86 <_malloc_r+0x1e>
 8005cbe:	6823      	ldr	r3, [r4, #0]
 8005cc0:	1b5b      	subs	r3, r3, r5
 8005cc2:	d417      	bmi.n	8005cf4 <_malloc_r+0x8c>
 8005cc4:	2b0b      	cmp	r3, #11
 8005cc6:	d903      	bls.n	8005cd0 <_malloc_r+0x68>
 8005cc8:	6023      	str	r3, [r4, #0]
 8005cca:	441c      	add	r4, r3
 8005ccc:	6025      	str	r5, [r4, #0]
 8005cce:	e004      	b.n	8005cda <_malloc_r+0x72>
 8005cd0:	6863      	ldr	r3, [r4, #4]
 8005cd2:	42a2      	cmp	r2, r4
 8005cd4:	bf0c      	ite	eq
 8005cd6:	600b      	streq	r3, [r1, #0]
 8005cd8:	6053      	strne	r3, [r2, #4]
 8005cda:	4630      	mov	r0, r6
 8005cdc:	f000 f85a 	bl	8005d94 <__malloc_unlock>
 8005ce0:	f104 000b 	add.w	r0, r4, #11
 8005ce4:	1d23      	adds	r3, r4, #4
 8005ce6:	f020 0007 	bic.w	r0, r0, #7
 8005cea:	1ac2      	subs	r2, r0, r3
 8005cec:	d0cc      	beq.n	8005c88 <_malloc_r+0x20>
 8005cee:	1a1b      	subs	r3, r3, r0
 8005cf0:	50a3      	str	r3, [r4, r2]
 8005cf2:	e7c9      	b.n	8005c88 <_malloc_r+0x20>
 8005cf4:	4622      	mov	r2, r4
 8005cf6:	6864      	ldr	r4, [r4, #4]
 8005cf8:	e7cc      	b.n	8005c94 <_malloc_r+0x2c>
 8005cfa:	1cc4      	adds	r4, r0, #3
 8005cfc:	f024 0403 	bic.w	r4, r4, #3
 8005d00:	42a0      	cmp	r0, r4
 8005d02:	d0e3      	beq.n	8005ccc <_malloc_r+0x64>
 8005d04:	1a21      	subs	r1, r4, r0
 8005d06:	4630      	mov	r0, r6
 8005d08:	f000 f82e 	bl	8005d68 <_sbrk_r>
 8005d0c:	3001      	adds	r0, #1
 8005d0e:	d1dd      	bne.n	8005ccc <_malloc_r+0x64>
 8005d10:	e7cf      	b.n	8005cb2 <_malloc_r+0x4a>
 8005d12:	bf00      	nop
 8005d14:	20001340 	.word	0x20001340
 8005d18:	20001344 	.word	0x20001344

08005d1c <_realloc_r>:
 8005d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d1e:	4607      	mov	r7, r0
 8005d20:	4614      	mov	r4, r2
 8005d22:	460e      	mov	r6, r1
 8005d24:	b921      	cbnz	r1, 8005d30 <_realloc_r+0x14>
 8005d26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005d2a:	4611      	mov	r1, r2
 8005d2c:	f7ff bf9c 	b.w	8005c68 <_malloc_r>
 8005d30:	b922      	cbnz	r2, 8005d3c <_realloc_r+0x20>
 8005d32:	f7ff ff49 	bl	8005bc8 <_free_r>
 8005d36:	4625      	mov	r5, r4
 8005d38:	4628      	mov	r0, r5
 8005d3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d3c:	f000 f830 	bl	8005da0 <_malloc_usable_size_r>
 8005d40:	42a0      	cmp	r0, r4
 8005d42:	d20f      	bcs.n	8005d64 <_realloc_r+0x48>
 8005d44:	4621      	mov	r1, r4
 8005d46:	4638      	mov	r0, r7
 8005d48:	f7ff ff8e 	bl	8005c68 <_malloc_r>
 8005d4c:	4605      	mov	r5, r0
 8005d4e:	2800      	cmp	r0, #0
 8005d50:	d0f2      	beq.n	8005d38 <_realloc_r+0x1c>
 8005d52:	4631      	mov	r1, r6
 8005d54:	4622      	mov	r2, r4
 8005d56:	f7ff ff0f 	bl	8005b78 <memcpy>
 8005d5a:	4631      	mov	r1, r6
 8005d5c:	4638      	mov	r0, r7
 8005d5e:	f7ff ff33 	bl	8005bc8 <_free_r>
 8005d62:	e7e9      	b.n	8005d38 <_realloc_r+0x1c>
 8005d64:	4635      	mov	r5, r6
 8005d66:	e7e7      	b.n	8005d38 <_realloc_r+0x1c>

08005d68 <_sbrk_r>:
 8005d68:	b538      	push	{r3, r4, r5, lr}
 8005d6a:	4d06      	ldr	r5, [pc, #24]	; (8005d84 <_sbrk_r+0x1c>)
 8005d6c:	2300      	movs	r3, #0
 8005d6e:	4604      	mov	r4, r0
 8005d70:	4608      	mov	r0, r1
 8005d72:	602b      	str	r3, [r5, #0]
 8005d74:	f7fc f9a0 	bl	80020b8 <_sbrk>
 8005d78:	1c43      	adds	r3, r0, #1
 8005d7a:	d102      	bne.n	8005d82 <_sbrk_r+0x1a>
 8005d7c:	682b      	ldr	r3, [r5, #0]
 8005d7e:	b103      	cbz	r3, 8005d82 <_sbrk_r+0x1a>
 8005d80:	6023      	str	r3, [r4, #0]
 8005d82:	bd38      	pop	{r3, r4, r5, pc}
 8005d84:	20001394 	.word	0x20001394

08005d88 <__malloc_lock>:
 8005d88:	4801      	ldr	r0, [pc, #4]	; (8005d90 <__malloc_lock+0x8>)
 8005d8a:	f000 b811 	b.w	8005db0 <__retarget_lock_acquire_recursive>
 8005d8e:	bf00      	nop
 8005d90:	2000139c 	.word	0x2000139c

08005d94 <__malloc_unlock>:
 8005d94:	4801      	ldr	r0, [pc, #4]	; (8005d9c <__malloc_unlock+0x8>)
 8005d96:	f000 b80c 	b.w	8005db2 <__retarget_lock_release_recursive>
 8005d9a:	bf00      	nop
 8005d9c:	2000139c 	.word	0x2000139c

08005da0 <_malloc_usable_size_r>:
 8005da0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005da4:	1f18      	subs	r0, r3, #4
 8005da6:	2b00      	cmp	r3, #0
 8005da8:	bfbc      	itt	lt
 8005daa:	580b      	ldrlt	r3, [r1, r0]
 8005dac:	18c0      	addlt	r0, r0, r3
 8005dae:	4770      	bx	lr

08005db0 <__retarget_lock_acquire_recursive>:
 8005db0:	4770      	bx	lr

08005db2 <__retarget_lock_release_recursive>:
 8005db2:	4770      	bx	lr

08005db4 <_init>:
 8005db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005db6:	bf00      	nop
 8005db8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005dba:	bc08      	pop	{r3}
 8005dbc:	469e      	mov	lr, r3
 8005dbe:	4770      	bx	lr

08005dc0 <_fini>:
 8005dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005dc2:	bf00      	nop
 8005dc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005dc6:	bc08      	pop	{r3}
 8005dc8:	469e      	mov	lr, r3
 8005dca:	4770      	bx	lr
